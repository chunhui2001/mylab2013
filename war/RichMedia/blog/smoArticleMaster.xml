<?xml version="1.0" encoding="utf-8"?>
<c:articleMaster type="chHeader" componentId="chHeader_1" xmlns:c="http://com.snnmo.website">

    <c:article>
        <c:title><![CDATA[彻底理解 Prometheus 查询语法]]></c:title>
        <c:articleLink>/blog/articles/prometheus/prometheus-pro.shtml</c:articleLink>
        <c:pubDate>20210218</c:pubDate>
        <c:tags>jmeter</c:tags>
        <c:category>java</c:category>
        <c:abstract>
            <![CDATA[
<div>
    本文档主要分为两部分，分别讲解PromQL和Grafana的基础使用，在阅读PromQL部分时，建议不要联想Grafana中要怎么使用这些查询表达式，又是怎么根据查询结果绘图的，因为PromQL对于Grafana来说和SQL并没有区别，都是查询出结果，然后根据各种指定配置进行绘图，所以阅读和理解PromQL部分，应关注查询结果是什么样的，不要关注这些结果在Grafana中是怎么绘图的。
</div>
<h3 style="padding-bottom: 0;">转自: </h3>
<div>
    <a target="_blank" style="color:rgb(11, 95, 208);" href="https://blog.csdn.net/zhouwenjun0820/article/details/105823389/">https://blog.csdn.net/zhouwenjun0820/article/details/105823389/</a>
</div>
<div>
    <a target="_blank" style="color:rgb(11, 95, 208);" href="https://www.kancloud.cn/huyipow/prometheus/525003">https://www.kancloud.cn/huyipow/prometheus/525003</a>
</div>
]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title><![CDATA[jMeter]]></c:title>
        <c:articleLink>/blog/articles/j2ee/jmeter.shtml</c:articleLink>
        <c:pubDate>20210218</c:pubDate>
        <c:tags>jmeter</c:tags>
        <c:category>java</c:category>
        <c:abstract>
            <![CDATA[
Apache JMeter 是 Apache 组织开发的基于 Java 的压力测试工具。用于对软件做压力测试，它最初被设计用于 Web 应用测试，但后来扩展到其他测试领域。 它可以用于测试静态和动态资源，例如静态文件、Java 小服务程序、CGI 脚本、Java 对象、数据库、FTP 服务器， 等等。JMeter 可以用于对服务器、网络或对象模拟巨大的负载，来自不同压力类别下测试它们的强度和分析整体性能。另外，JMeter 能够对应用程序做功能/回归测试，通过创建带有断言的脚本来验证你的程序返回了你期望的结果。为了最大限度的灵活性，JMeter 允许使用正则表达式创建断言。]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title><![CDATA[Java vs C and C++]]></c:title>
        <c:articleLink>/blog/articles/j2ee/java-c-c++.shtml</c:articleLink>
        <c:pubDate>20210216</c:pubDate>
        <c:tags>java</c:tags>
        <c:category>java</c:category>
        <c:abstract>
            <![CDATA[
<div>
Java vs C and C++
 </div>]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title><![CDATA[jdk工具]]></c:title>
        <c:articleLink>/blog/articles/j2ee/jdk-tools.shtml</c:articleLink>
        <c:pubDate>20210215</c:pubDate>
        <c:tags>java</c:tags>
        <c:category>java</c:category>
        <c:abstract>
            <![CDATA[
<div>
jdk工具
 </div>]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[lvs+nginx负载均衡]]></c:title>
        <c:articleLink>/blog/articles/nginx/lvs-and-nginx.shtml</c:articleLink>
        <c:pubDate>20210202</c:pubDate>
        <c:tags>lvs, nginx</c:tags>
        <c:category>nginx</c:category>
        <c:abstract>
            <![CDATA[
<div>
一台普通服务器的处理能力是有限的，最佳情况能达到每秒几万个到几十万个请求，但却无法在一秒钟内处理上百万个甚至更多的请求。但若能将多台这样的服务器组成一个系统，并通过软件技术将所有请求平均分配给所有服务器，那么这个系统就完全拥有每秒钟处理几百万个甚至更多请求的能力。这就是负载均衡最初的基本设计思想。
</div>
<div style="margin-top:.3em;">
负载均衡是由多台服务器以对称的方式组成一个服务器集合，每台服务器都具有等价的地位，都可以单独对外提供服务而无须其他服务器的辅助。通过某种负载分担技术，将外部发送来的请求按照某种策略分配到服务器集合的某一台服务器上，而接收到请求的服务器独立地回应客户的请求。负载均衡解决了大量并发访问服务问题，其目的就是用最少的投资获得接近于大型主机的性能。 
 </div>]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[ETH-Pro]]></c:title>
        <c:articleLink>/blog/articles/ether/ETH-Pro.shtml</c:articleLink>
        <c:pubDate>20210106</c:pubDate>
        <c:tags>ETH</c:tags>
        <c:category>ETH</c:category>
        <c:abstract>
            <![CDATA[
作为一种比较新的利用比特币技术的开发项目，以太坊致力于实施全球<b>去中心化</b>且无所有权的的数字技术计算机来执行点对点合约。简单来说就是，以太坊是一个你无法关闭的世界计算机。加密架构与图灵完整性的创新型结合可以促进大量的新产业的出现。反过来，传统行业的创新压力越来越大，甚至面临淘汰的风险。]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[微服务12要素－－12factor]]></c:title>
        <c:articleLink>/blog/articles/j2ee/12factor.shtml</c:articleLink>
        <c:pubDate>20210103</c:pubDate>
        <c:tags>Java</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
有关 docker、k8s、paas 和微服务的高论。其中有提到12要素。其是由 paas 先驱 Heroku 公司的 CTO Adam Wiggins 提出的。大名鼎鼎的 Cloud Foundry 也基本上是严格遵守这个规则开发的，而 cf 也自研了 warden 容器，这也影响了后面的 dotcloud 公司，而 cf 的思想并对 docker 和 k8s 产生了启发。]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[Java Programming Tutorial]]></c:title>
        <c:articleLink>/blog/articles/j2ee/Java-Programming-Tutorial.shtml</c:articleLink>
        <c:pubDate>20201225</c:pubDate>
        <c:tags>Java</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
<div>
This chapter explains the basic syntaxes of the Java programming language. I shall assume that you have written some simple Java programs. Otherwise, read "<a href="https://www3.ntu.edu.sg/home/ehchua/programming/java/J1a_Introduction.html">Introduction To Java Programming for First-time Programmers".</a>
</div>
<div style="margin-top:.625em;">
<b>To be proficient in a programming language, you need to master two things:</b>
</div>
<ul style="margin-top:.625em;color: green;list-style: decimal;margin-left: 1.5em;font-size: .925em;font-weight: bold;">
    <li>The syntax of the programming language: Not too difficult to learn a small set of keywords and syntaxes. For examples, JDK 1.8 has 48 keywords; C11 has 44, and C++11 has 73.</li>
    <li style="margin-top:.325em;">The Application Program Interface (API) libraries associated with the language: You don’t want to write everything from scratch yourself. Instead, you can re-use the available code in the library. Learning library could be difficult as it is really huge, evolving and could take on its own life as another programming language.</li>
</ul>
<div style="margin-top:.625em;">
<p>The first few sections are a bit boring, as I have to explain the basic concepts with some details.</p>
<p>You may also try the "<a href="https://www3.ntu.edu.sg/home/ehchua/programming/java/J2a_BasicsExercises.html">Exercises on Java Basics</a>".</p>
</div>
<div style="margin-top:.325em;">

</div>

<div style="margin-top:.825em;">
  转自: <a style="color:black;text-decoration:underline;" href="https://www3.ntu.edu.sg/home/ehchua/programming/java/J2_Basics.html">https://www3.ntu.edu.sg/home/ehchua/programming/java/J2_Basics.html</a>
</div>
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[How to Write Your Own Reusable React Component Library]]></c:title>
        <c:articleLink>/blog/articles/react/Reusable-React-Component-Library.shtml</c:articleLink>
        <c:pubDate>20191123</c:pubDate>
        <c:tags>React</c:tags>
        <c:category>React</c:category>
        <c:abstract>
            <![CDATA[
<div>
In this post I will create a boilerplate step by step that you can use to start your own component library. 
I will also develop the requirements and make pull requests along the way, <a style="color:black;text-decoration:underline;" href="https://medium.com/@cwlsn/github-personal-project-7d9d40b62e39">as I mentioned in my last post</a>.
</div>
<div style="margin-top:.325em;">
  转自: <a style="color:black;text-decoration:underline;" href="https://itnext.io/how-to-write-your-own-reusable-react-component-library-a57dc7c9a210">https://itnext.io/how-to-write-your-own-reusable-react-component-library-a57dc7c9a210</a>
</div>
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title><![CDATA[STM32Fx (STM32F1/STM32F4/STM32F7) + MDK5 项目工程模版]]></c:title>
        <c:articleLink>/blog/articles/stm32/stm32fx_mdk5.shtml</c:articleLink>
        <c:pubDate>20191117</c:pubDate>
        <c:tags>stm32</c:tags>
        <c:category>stm32</c:category>
        <c:abstract>
            <![CDATA[
<h3>用MDK5新建一个 STM32Fx 工程</h3>
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title><![CDATA[Spring Boot Dubbo]]></c:title>
        <c:articleLink>/blog/articles/j2ee/dubbo.shtml</c:articleLink>
        <c:pubDate>20191115</c:pubDate>
        <c:tags>dubbo</c:tags>
        <c:category>java</c:category>
        <c:abstract>
            <![CDATA[
<h3>Spring Boot Dubbo</h3>
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[µC/OS-II TCP/IP &mdash; 基于 STM32 微控制器]]></c:title>
        <c:articleLink>/blog/articles/ucos/ucos-tcpip.shtml</c:articleLink>
        <c:pubDate>20191014</c:pubDate>
        <c:tags>usos</c:tags>
        <c:category>UCOS</c:category>
        <c:abstract>
            <![CDATA[
<h3>嵌入式协议栈 uC/TCP-IP &mdash; 基于 STM32 微控制器</h3>
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[Java &mdash; AIO、BIO、NIO]]></c:title>
        <c:articleLink>/blog/articles/java/java-aio-bio-nio.shtml</c:articleLink>
        <c:pubDate>20191007</c:pubDate>
        <c:tags>NIO, AIO, BIO</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
<div>
IO流用来处理设备之间的数据传输，Java程序中，对于数据的输入/输出操作 都是以“流”的方式进行的。java.io 包下提供了各种“流”类的接口，用以获取不同种类的数据，并通过标准的方法输入或输出数据。
</div>

<div style="margin-top:.625em;">
对于计算机来说，数据都是以二进制形式读出或写入的。我们可以把文件想象为一个桶，我们可以通过管道将桶里的水抽出来。这里的管道也就相当于 Java 中的流。流的本质是一种有序的数据集合，有数据源和目的地。
</div>

                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title><![CDATA[Reids Pro]]></c:title>
        <c:articleLink>/blog/articles/db/redis-pro.shtml</c:articleLink>
        <c:pubDate>20191007</c:pubDate>
        <c:tags>redis</c:tags>
        <c:category>redis</c:category>
        <c:abstract>
            <![CDATA[
Redis 是一个开源的使用 ANSI C 语言编写、遵守 BSD 协议、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库，并提供多种语言的 API的非关系型数据库。

                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[MySQL & InnoDB]]></c:title>
        <c:articleLink>/blog/articles/db/mysql-innodb.shtml</c:articleLink>
        <c:pubDate>20191006</c:pubDate>
        <c:tags>mysql, innodb</c:tags>
        <c:category>MySQL</c:category>
        <c:abstract>
            <![CDATA[
MySQL的历史可以追溯到1979年，一个名为Monty Widenius的程序员在为TcX的小公司打工，并且用BASIC设计了一个报表工具，使其可以在4MHz主频和16KB内存的计算机上运行。当时，这只是一个很底层的且仅面向报表的存储引擎，名叫Unireg。

                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[Java &mdash; Classloader]]></c:title>
        <c:articleLink>/blog/articles/java/java-classloader.shtml</c:articleLink>
        <c:pubDate>20191006</c:pubDate>
        <c:tags>classloader</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
<h3>https://blog.csdn.net/qq_31493821/article/details/78812057</h3>
<div>
    ClassLoader 的具体作用就是将 class 文件加载到 jvm 虚拟机中去，程序就可以正确运行了。但是，jvm 启动的时候，并不会一次性加载所有的 class 文件，而是根据需要去动态加载。<b style="color:red;">系统内置的 ClassLoader 通过双亲委托来加载指定路径下的 class 和资源。</b>
</div>

                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title><![CDATA[Zookeeper & Eureka]]></c:title>
        <c:articleLink>/blog/articles/java/zookeeper-eureka.shtml</c:articleLink>
        <c:pubDate>20191004</c:pubDate>
        <c:tags>PAXOS</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
<div>
Zookeeper 分布式服务框架是 Apache Hadoop 的一个子项目，它主要是用来解决分布式应用中经常遇到的一些数据管理问题，如：统一命名服务、状态同步服务、集群管理、分布式应用配置项的管理等。
</div>
<div style="margin-top:.625em;">
ZooKeeper 没有采用 Paxos 协议，采用的是 ZAB(ZooKeeper Atomic Broadcast)
</div>

<div style="margin-top:.625em;color:green;">
<h4>Zookeeper 保证 CP</h4>
</div>

<div style="margin-top:.325em;">
当向注册中心查询服务列表时，我们可以容忍注册中心返回的是几分钟以前的注册信息，但不能接受服务直接 down 掉不可用。也就是说，服务注册功能对可用性的要求要高于一致性。<b style="color:blue;">但是zk会出现这样一种情况，当 master 节点因为网络故障与其他节点失去联系时，剩余节点会重新进行 leader 选举。问题在于，选举 leader 的时间太长，30 ~ 120s, 且选举期间整个zk集群都是不可用的，这就导致在选举期间注册服务瘫痪。</b><b style="color:darkviolet;">在云部署的环境下，因网络问题使得zk集群失去 master 节点是较大概率会发生的事，虽然服务能够最终恢复，但是漫长的选举时间导致的注册长期不可用是不能容忍的。</b>
</div>

<div style="margin-top:.625em;color:green;">
<h4>Eureka 保证 AP</h4>
</div>

<div style="margin-top:.325em;">
鉴于 Zookeeper 的缺点, Eureka 在设计时就优先保证可用性。Eureka各个节点都是平等的，几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka的客户端在向某个Eureka注册或时如果发现连接失败，则会自动切换至其它节点，只要有一台Eureka还在，就能保证注册服务可用(保证可用性)，只不过<b style="color:red;">查到的信息可能不是最新的(不保证强一致性)</b>。<br />
除此之外，Eureka还有一种自我保护机制，如果在15分钟内超过85%的节点都没有正常的心跳，那么Eureka就认为客户端与注册中心出现了网络故障，此时会出现以下几种情况：
</div>

<ul style="margin-left:1.5em;list-style-type:disc;margin-top:.625em;">
    <li>Eureka不再从注册列表中移除因为长时间没收到心跳而应该过期的服务</li>
    <li>Eureka仍然能够接受新服务的注册和查询请求，但是不会被同步到其它节点上(即保证当前节点依然可用)</li>
    <li>当网络稳定时，当前实例新的注册信息会被同步到其它节点中</li>
</ul>

]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[Java &mdash; CAP、BASE、PAXOS]]></c:title>
        <c:articleLink>/blog/articles/java/cap-base-paxos.shtml</c:articleLink>
        <c:pubDate>20191004</c:pubDate>
        <c:tags>CAP, BASE, PAXOS</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[

<div style="margin-bottom:.625em;">
分布式理论（CAP，Base，paxos）
</div>
<div>
CAP 理论：
</div>
<div style="margin-bottom:.625em;">
一个分布式系统不可能同时满足一致性（C:Consistency）、可用性（A:Availability）和分区容错性（P:Partition tolerance）这三个基本需求，最多只能同时满足其中的两项。
</div>
<div>
Base 理论：
</div>
<div style="margin-bottom:.625em;">
BASE 是 Basically Available（基本可用）、Soft state（软状态）和Eventually consistent（最终一致性）三个短语的简写。
</div>
<div style="margin-bottom:.625em;">
BASE 是对 CAP 中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的总结，是基于 CAP 定理逐步演化而来的，其核心思想是即使无法做到强一致性(Strong consistency)，但每个应用都可以根据自身的业务特点，采用适当的方式来使系统达到最终一致性(Eventual consistency)。
</div>
<div>
Paxos（分布式一致性算法）作为分布式系统的基石。
</div>

                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title><![CDATA[Java &mdash; ArrayList]]></c:title>
        <c:articleLink>/blog/articles/java/java-arraylist.shtml</c:articleLink>
        <c:pubDate>20191004</c:pubDate>
        <c:tags>java, arraylist, list</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
ArrayList 作为 List 的典型实现，完全实现了 List 的全部接口功能，它是基于数组实现的 List 类，它封装了一个 Object[] 类型的数组，长度可以动态的增长。如果在创建 ArrayList 时没有指定 Object[] 数组的长度，它默认创建一个长度为 10 的数组，当新添加的元素已经没有位置存放的时候, ArrayList 就会自动进行扩容，扩容的长度为原来长度的 1.5 倍。它的线程是不安全的。与 LinkedList 相比，ArrayList 适用于频繁查询的场景，而不适用于频繁修改的场景； 与 Vector 相比，ArrayList 的所有操作都是非线程安全的。如果在创建 ArrayList 时，可以知道 ArrayList 元素的数量最好指定初始容量，这样可以避免 ArrayList 的自动多次扩容问题。
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title><![CDATA[Java &mdash; Hashcode]]></c:title>
        <c:articleLink>/blog/articles/java/java-hashcode.shtml</c:articleLink>
        <c:pubDate>20190930</c:pubDate>
        <c:tags>java</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
<p style="">
散列表（Hash table，也叫哈希表），是根据关键码值 (Key value) 而直接进行访问的数据结构。也就是说，它通过把关键码值映射到表中一个位置来访问记录，以加快查找的速度。这个映射函数叫做散列函数，存放记录的数组叫做散列表。
</p>
<p style="margin-top:.3em;">
给定表M，存在函数 f(key)，对任意给定的关键字值 key，代入函数后若能得到包含该关键字的记录在表中的地址，则称表M为哈希 (Hash）表，函数 f(key) 为哈希(Hash) 函数。
</p>

                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title><![CDATA[Java &mdash; Lock（锁）& CAS]]></c:title>
        <c:articleLink>/blog/articles/java/java-lock.shtml</c:articleLink>
        <c:pubDate>20190930</c:pubDate>
        <c:tags>java</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
<h1>https://blog.csdn.net/fygu18/article/details/80251935</h1>

<p style="">
Lock implementations provide more extensive locking operations than can be obtained using synchronized methods and statements. They allow more flexible structuring, may have quite different properties, and may support multiple associated Condition objects.
</p>

<p style="margin-top:.3em;">
A lock is a tool for controlling access to a shared resource by multiple threads. Commonly, a lock provides exclusive access to a shared resource: only one thread at a time can acquire the lock and all access to the shared resource requires that the lock be acquired first. However, some locks may allow concurrent access to a shared resource, such as the read lock of a ReadWriteLock.
</p>

<p style="margin-top:.3em;">
The use of synchronized methods or statements provides access to the implicit monitor lock associated with every object, but forces all lock acquisition and release to occur in a block-structured way: when multiple locks are acquired they must be released in the opposite order, and all locks must be released in the same lexical scope in which they were acquired.
</p>

<p style="margin-top:.3em;">
While the scoping mechanism for synchronized methods and statements makes it much easier to program with monitor locks, and helps avoid many common programming errors involving locks, there are occasions where you need to work with locks in a more flexible way. For example, some algorithms for traversing concurrently accessed data structures require the use of "hand-over-hand" or "chain locking": you acquire the lock of node A, then node B, then release A and acquire C, then release B and acquire D and so on. Implementations of the Lock interface enable the use of such techniques by allowing a lock to be acquired and released in different scopes, and allowing multiple locks to be acquired and released in any order.
</p>
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>µC/OS-II 移植</c:title>
        <c:articleLink>/blog/articles/ucos/porting.shtml</c:articleLink>
        <c:pubDate>20190928</c:pubDate>
        <c:tags>usos</c:tags>
        <c:category>UCOS</c:category>
        <c:abstract>
            <![CDATA[
<p >原文地址: https://doc.micrium.com/pages/viewpage.action?pageId=16879501</p>
<p style="color:lightcoral">
    This chapter describes in general terms what needs to be done in order to adapt µC/OS-II to different processors. Adapting a real-time kernel to a microprocessor or a microcontroller is called a port. Most of µC/OS-II is written in C for portability; however, it is still necessary to write some processor-specific code in C and assembly language. Specifically, µC/OS-II manipulates processor registers, which can only be done through assembly language. Porting µC/OS-II to different processors is relatively easy because µC/OS-II was designed to be portable. If you already have a port for the processor you are intending to use, you dont need to read this chapter, unless of course you want to know how µC/OS-II processor-specific code works.
</p>
<p style="margin-top:.3em;">
    本文描述了适配 USOS-II 到不同处理器需要做什么。适配实时内核到微处理器或微控制器称为移植。µC/OS-II的大多数都是用C编写的，以实现可移植性。但是，仍然有必要使用C和汇编语言编写一些特定于处理器的代码。 特别是，µC/OS-II处理处理器寄存器，只能通过汇编语言来完成。 将µC/OS-II移植到不同的处理器相对容易，因为µC/OS-II设计为可移植的。如果您已经有打算使用的处理器端口，则无需阅读本章，除非您想知道µC/OS-II处理器特定代码的工作方式。
</p>
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[Java &mdash; ThreadPool]]></c:title>
        <c:articleLink>/blog/articles/java/java-thread-pool.shtml</c:articleLink>
        <c:pubDate>20190928</c:pubDate>
        <c:tags>java, thread</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
<p>在越来越组件化开发的今天，我们通过JSX已经将js好html/xml很好的柔和在了一起，那么css呢？</p>
<p>虽然在vue这样的框架里我们能在.vue文件里将css、js、html写在一起，但实际上它们的联系很弱，特别是js和css，它们完全无法沟通。</p>
<p>而styled-components很好的解决了这个问题，通过它，我们能让整个css架构跟着组件走，而不再仅仅是貌合神离的被放置在一个文件中。可以这么说，styled-components让一个组件变得更加得完整，更加得像一个组件！</p>

                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title>Styled-components</c:title>
        <c:articleLink>/blog/articles/react/Styled-components.shtml</c:articleLink>
        <c:pubDate>20190412</c:pubDate>
        <c:tags>React, Styled-components, CSS</c:tags>
        <c:category>React</c:category>
        <c:abstract>
            <![CDATA[
<p>在越来越组件化开发的今天，我们通过JSX已经将js好html/xml很好的柔和在了一起，那么css呢？</p>
<p>虽然在vue这样的框架里我们能在.vue文件里将css、js、html写在一起，但实际上它们的联系很弱，特别是js和css，它们完全无法沟通。</p>
<p>而styled-components很好的解决了这个问题，通过它，我们能让整个css架构跟着组件走，而不再仅仅是貌合神离的被放置在一个文件中。可以这么说，styled-components让一个组件变得更加得完整，更加得像一个组件！</p>

                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title><![CDATA[深入浅出Redux &mdash; React-redux]]></c:title>
        <c:articleLink>/blog/articles/react/React-redux.shtml</c:articleLink>
        <c:pubDate>20190404</c:pubDate>
        <c:tags>React, Redux</c:tags>
        <c:category>React</c:category>
        <c:abstract>
            <![CDATA[
                Redux由Dan Abramov在2015年创建的科技术语。是受2014年Facebook的Flux架构以及函数式编程语言Elm启发。很快，Redux因其简单易学体积小在短时间内成为最热门的前端架构。
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>Android Pro</c:title>
        <c:articleLink>/blog/articles/android/Android-Pro.shtml</c:articleLink>
        <c:pubDate>20180514</c:pubDate>
        <c:tags>Android Pro</c:tags>
        <c:category>Android</c:category>
        <c:abstract>
            <![CDATA[
                
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>Spring Boot Pro</c:title>
        <c:articleLink>/blog/articles/j2ee/Spring-Pro.shtml</c:articleLink>
        <c:pubDate>20180420</c:pubDate>
        <c:tags>Spring Boot</c:tags>
        <c:category>Spring Boot</c:category>
        <c:abstract>
            <![CDATA[
                
                     ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>Calls and SMS with Sim800, Python and Raspberry Pi</c:title>
        <c:articleLink>/blog/articles/raspberrypi/Calls-and-SMS-with-Sim900-Python-and-Raspberry-Pi.shtml</c:articleLink>
        <c:pubDate>20180420</c:pubDate>
        <c:tags>sim900, gps, gsm</c:tags>
        <c:category>raspberry</c:category>
        <c:abstract>
            <![CDATA[
                Conoceis el proyecto PiPhone de?. PiPhone es un teléfono móvil creado con una Raspberry Pi y un módulo GSM. Aunque se encuentre a años luz de un Iphone o un Samsung Galaxy, este teléfono ‘do it yourself’ es capaz de enviar y recibir mensajes cortos (SMS) y de realizar y recibir llamadas mediante comandos ‘AT’ y todo ello con una interfaz táctil gracias a una pantalla TFT/LCD (touchscreen) del fabricante Adafruit.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>React Pro</c:title>
        <c:articleLink>/blog/articles/react/React-Pro.shtml</c:articleLink>
        <c:pubDate>20180419</c:pubDate>
        <c:tags>React</c:tags>
        <c:category>Web</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>Bottle Python Web Framework</c:title>
        <c:articleLink>/blog/articles/python/Bottle-Python-Web-Framework.shtml</c:articleLink>
        <c:pubDate>20180403</c:pubDate>
        <c:tags>Python, Bottle</c:tags>
        <c:category>Web</c:category>
        <c:abstract>
            <![CDATA[
                <div>
                    Bottle: Python Web Framework
                </div>
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>Arduino Uno &amp; Raspberry Pi Pro</c:title>
        <c:articleLink>/blog/articles/raspberrypi/arduino-uno-and-raspberry-pi.shtml</c:articleLink>
        <c:pubDate>20180326</c:pubDate>
        <c:tags>Arduino, Raspberry Pi</c:tags>
        <c:category>Raspberry Pi</c:category>
        <c:abstract>
            <![CDATA[
                <div>Raspberry Pi
                </div>
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title>ANGULAR 5 APP STRUCTURE WITH MULTIPLE MODULES</c:title>
        <c:articleLink>/blog/articles/AngularJS/angular-5-app-structure-multiple-modules.shtml</c:articleLink>
        <c:pubDate>20180202</c:pubDate>
        <c:tags>Angular5</c:tags>
        <c:category>Angular</c:category>
        <c:abstract>
            <![CDATA[
                <div>Since I couldn’t find any resources on Angular 5 app structure with multiple modules, I decided that whilst rebuilding an AngularJS app, I would implement a multiple-module architecture and document it. Below is the approach I took, with some justifications for the decisions I took. In the near future I plan to write more posts which get in to the more granular details of each area of the application and the motivations behind each decision.</div>
                <div>
<a href="https://github.com/chunhui2001/angular5-starter-multi-module" target="_blank">
An Angular 5 multi-module starter template is available on GitHub here.
</a>
                </div>
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>A Single Route Parameter Can Match Multiple URL Segments In Angular 4.4.4</c:title>
        <c:articleLink>/blog/articles/AngularJS/A-Single-Route-Parameter-Can-Match-Multiple-URL-Segments-In-Angular-4.shtml</c:articleLink>
        <c:pubDate>20171229</c:pubDate>
        <c:tags>Angular4</c:tags>
        <c:category>Angular</c:category>
        <c:abstract>
            <![CDATA[
                If you are parforming a prefix-based, local-direct, you may want to know that the Router will automatically append the non-local URL segments to the redirectTo action, making prefix-based mappings dead simple in Angular 4.4.4.
                <br />
                When I was learning about route configuration in Angular 4, I automatically assumed that a route parameter, like ":id" or ":type", would only match against a single URL path segment (ie, the portion of a URL between two "/" delimiters). As is turns out, however, a route parameter is capable of matching any non-empty portion of the URL. This gives us the ability to redirect based on a URL-prefix, capturing and forwarding the entire URL-suffix using a single route parameter.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title>Gparted: Resizing a VMware Fusion Ubuntu Server Virtual Drive (via Easy Install Mode)</c:title>
        <c:articleLink>/blog/articles/mac/resizing-a-vmware-fusion-ubuntu-server-virtual-hard-drive-via-easy-mode.shtml</c:articleLink>
        <c:pubDate>20171218</c:pubDate>
        <c:tags>Gparted</c:tags>
        <c:category>MAC</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>




    <c:article>
        <c:title>NodeMCU 点亮 LED</c:title>
        <c:articleLink>/blog/articles/embedded/nodemcu-led-pro.shtml</c:articleLink>
        <c:pubDate>20171218</c:pubDate>
        <c:tags>Linux</c:tags>
        <c:category>NodeMCU</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title>Vert.x Pro</c:title>
        <c:articleLink>/blog/articles/j2ee/vert-x-pro.shtml</c:articleLink>
        <c:pubDate>20171205</c:pubDate>
        <c:tags>Vert.x</c:tags>
        <c:category>J2EE</c:category>
        <c:abstract>
            <![CDATA[
                Vert.x is a fairly new project that has already reached 1.0 status and has a growing community. According to their website Vert.x is: Effortless asynchronous application development for the modern web and enterprise. If your familiar with Node.js then you will most likely feel right at home with Vert.x. Vert.x also allows you to use a favorite language like Java, Ruby, Groovy, or JavaScript with support for Scala and Python coming in the future. Today I’ll go over a very simple demo on how to try out Vert.x using Java.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title>Create a multiple module project using Maven</c:title>
        <c:articleLink>/blog/articles/mvn/Create-a-multiple-module-project-using-Maven.shtml</c:articleLink>
        <c:pubDate>20170918</c:pubDate>
        <c:tags>maven</c:tags>
        <c:category>MAVEN</c:category>
        <c:abstract>
            <![CDATA[
                Create a multiple module project using Maven, more precisely a service application project (JAR) referencing another repository project as a library (JAR).
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title>ANGULARJS NATIVE DRAG AND DROP</c:title>
        <c:articleLink>/blog/articles/AngularJS/angularjs-drag-and-drop.shtml</c:articleLink>
        <c:pubDate>20170912</c:pubDate>
        <c:tags>AngularJS</c:tags>
        <c:category>AngularJS</c:category>
        <c:abstract>
            <![CDATA[
                I recently needed to add drag & drop functionality to an angularjs web application I’m working on, none of the existing directives did exactly what I needed so I built my own. In building the directive, I needed a service to create UUIDs, so I built one of them too.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title>Angular4 Pro</c:title>
        <c:articleLink>/blog/articles/AngularJS/Angular4-Pro.shtml</c:articleLink>
        <c:pubDate>20170816</c:pubDate>
        <c:tags>Angular</c:tags>
        <c:category>Angular 4</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>JVM Pro</c:title>
        <c:articleLink>/blog/articles/j2ee/jvm-pro.shtml</c:articleLink>
        <c:pubDate>20170507</c:pubDate>
        <c:tags>JVM</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>Java Code Refactoring</c:title>
        <c:articleLink>/blog/articles/j2ee/java-code-refactoring.shtml</c:articleLink>
        <c:pubDate>20170503</c:pubDate>
        <c:tags>Code Refactor</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>Java Lambda</c:title>
        <c:articleLink>/blog/articles/j2ee/java-lambda.shtml</c:articleLink>
        <c:pubDate>20170503</c:pubDate>
        <c:tags>Lambda</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>

    <c:article>
        <c:title>Java Thread Pro</c:title>
        <c:articleLink>/blog/articles/j2ee/java-thread-pro.shtml</c:articleLink>
        <c:pubDate>20170501</c:pubDate>
        <c:tags>thread</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


    <c:article>
        <c:title>Cassandra</c:title>
        <c:articleLink>/blog/articles/big-data/Cassandra.shtml</c:articleLink>
        <c:pubDate>20170418</c:pubDate>
        <c:tags>Cassandra</c:tags>
        <c:category>BD</c:category>
        <c:abstract>
            <![CDATA[
                
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title>Netty</c:title>
        <c:articleLink>/blog/articles/j2ee/Netty.shtml</c:articleLink>
        <c:pubDate>20170324</c:pubDate>
        <c:tags>Netty</c:tags>
        <c:category>Java</c:category>
        <c:abstract>
            <![CDATA[
                Netty is an NIO (non blocking input/output) client server framework for Java. It simplifies the process of writing servers and clients that talk to each other under the hood using your typical DatagramSocket, ServerSocket and Socket classes. In this example I'll show you how to write a very simple server that will accept connections over a TCP port, read and decode JSON and do something with it.

                <br />

                In real life you're probably more likely to use something binary like <b>Thrify</b>, <b>Protocol Buffers</b> or <b>Smile</b>, instead of JSON.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>



    <c:article>
        <c:title>Install and Configure Oracle 12C on CentOS 7</c:title>
        <c:articleLink>/blog/articles/db/Install-and-Configure-Oracle-12C-on-CentOS-7.shtml</c:articleLink>
        <c:pubDate>20161009</c:pubDate>
        <c:tags>Oracle</c:tags>
        <c:category>Oracle</c:category>
        <c:abstract>
            <![CDATA[
The article Shows You Step-by-Step How to Install the Oracle 12c R1 Amd64 Database on CentOS7 Desktop/Server.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>





    <c:article>
        <c:title>Install and Configure Tomcat 8 on Centos-7</c:title>
        <c:articleLink>/blog/articles/linux/install-and-configure-tomcat-8-on-centos-7.shtml</c:articleLink>
        <c:pubDate>20160808</c:pubDate>
        <c:tags>Tomcat</c:tags>
        <c:category>Tomcat</c:category>
        <c:abstract>
            <![CDATA[
Apache Tomcat is an open-source web server and servlet container that is used to serve Java applications.
<br />
It is developed by the Apache Software Foundation, written in Java and released under Apache License 2.0.
<br />
It is a top level project of the Apache foundation. Apache Tomcat currently implements Java Servlet, JavaServer Pages, Java Expression Language and Java WebSocket.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>





    <c:article>
        <c:title>Hadoop &amp; HBase &amp; Zookeeper &amp; Hive &amp; Sqoop Intergation</c:title>
        <c:articleLink>/blog/articles/big-data/Hadoop-HBase-Zookeeper-Hive-Sqoop-Intergation.shtml</c:articleLink>
        <c:pubDate>20160808</c:pubDate>
        <c:tags>Hadoop</c:tags>
        <c:category>Hadoop</c:category>
        <c:abstract>
            <![CDATA[
Node.js & Socket.io Chat
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>





    <c:article>
        <c:title>NodeJS &amp; Socket.IO</c:title>
        <c:articleLink>/blog/articles/node/NodeJS-Socket-IO.shtml</c:articleLink>
        <c:pubDate>20160727</c:pubDate>
        <c:tags>NodeJS</c:tags>
        <c:category>NodeJS</c:category>
        <c:abstract>
            <![CDATA[
Node.js & Socket.io Chat
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>




    <c:article>
        <c:title>Dynamic nginx upstreams with Lua and Redis</c:title>
        <c:articleLink>/blog/articles/linux/dynamic-nginx-upstreams-with-lua-and-redis.shtml</c:articleLink>
        <c:pubDate>20160727</c:pubDate>
        <c:tags>Lua</c:tags>
        <c:category>Nginx</c:category>
        <c:abstract>
            <![CDATA[
Now, to the implementation. The idea behind dynamic upstreams is to simply invoke a standard proxy_pass to a backend address:port pair that was defined in redis key.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>




    <c:article>
        <c:title>Compile Hadoop 2</c:title>
        <c:articleLink>/blog/articles/big-data/Compile-Hadoop-2.shtml</c:articleLink>
        <c:pubDate>20160726</c:pubDate>
        <c:tags>Hadoop</c:tags>
        <c:category>BigData</c:category>
        <c:abstract>
            <![CDATA[
In order to build Apache Hadoop from Source, first step is install all required softwares and then checkout latest Apache Hadoop code from trunk and build it.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>





    <c:article>
        <c:title>Compile and Install Nginx from Source On CentOS</c:title>
        <c:articleLink>/blog/articles/linux/Compile-and-Install-Nginx-from-Source-On-CentOS.shtml</c:articleLink>
        <c:pubDate>20160706</c:pubDate>
        <c:tags>Nginx</c:tags>
        <c:category>Nginx</c:category>
        <c:abstract>
            <![CDATA[
nginx pronounced as "engine x" is an HTTP and reverse proxy server, as well as a mail proxy server.
<br />
<br />
nginx is an opensource web server which uses epoll mechanism to serve clients as opposed to Apache which uses a thread based model which delegates the requests to an instance in the thread pool. nginx is being used more over Apache because of its speed. nginx has over 13% market share and increasing continuously.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>



    <c:article>
        <c:title>How To Set Up a Node.js Application for Production on Ubuntu 14.04</c:title>
        <c:articleLink>/blog/articles/node/how-to-set-up-a-node-js-application-for-production-on-ubuntu-14-04.shtml</c:articleLink>
        <c:pubDate>20160411</c:pubDate>
        <c:tags>NodeJS</c:tags>
        <c:category>NodeJS</c:category>
        <c:abstract>
            <![CDATA[
            <div style="margin-bottom:.7em;">
  Node.js is an open source Javascript runtime environment for easily building server-side and networking applications. The platform runs on Linux, OS X, FreeBSD, and Windows, and its applications are written in JavaScript. Node.js applications can be run at the command line but we will teach you how to run them as a service, so they will automatically restart on reboot or failure, so you can use them in a production environment.
</div>

<div style="margin-bottom:.7em;">
In this tutorial, we will cover setting up a production-ready Node.js environment that is composed of two Ubuntu 14.04 servers; one server will run Node.js applications managed by PM2, while the other will provide users with access to the application through an Nginx reverse proxy to the application server.
</div>

<div style="margin-bottom:.7em;">
The CentOS version of this tutorial can be found <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-centos-7" target="_blank">here</a>.
</div>
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>





  <c:article>
    <c:title>How to Install Gitlab with PostgreSQL and Nginx on Ubuntu 15.04</c:title>
    <c:articleLink>/blog/articles/git/how-to-install-gitlab-with-postgresql-and-nginx-on-ubuntu-15-04.shtml</c:articleLink>
    <c:pubDate>20160410</c:pubDate>
    <c:tags>Git</c:tags>
    <c:category>GIT</c:category>
    <c:abstract>
      <![CDATA[
<div style="margin-bottom:.7em;">
  Gitlab is a web-based git repository management application written on Ruby. It is similar to GitHub and includes features like a project wiki and issue tracking system. The Gitlab project was started by Dmitriy Zaporozhets and the software is used by more than 100.000 technology companies including IBM, StackExchange, NASA, Alibaba, Red Hat, etc. Gitlab is one of the best solutions for to build your own git server.</div>

<div style="margin-bottom:.7em;">
Gitlab is supported by the major Linux distributions such as Ubuntu, Debian, and CentOS. Gitlab provides a .deb package for Debian/Ubuntu and .rpm packages for Rhel and CentOS. The package contains all dependencies including Ruby, Redis, Nginx, Unicorn and PostgreSQL. Gitlab is available in 2 versions, the Community Edition (Gitlab CE) and Enterprise Edition (Gitlab EE). If you want to build your own git server then most likely the free CE edition will offer all features that you need.</div>

<div style="margin-bottom:.7em;">
In this tutorial, I will guide you step by step trough the installation of Gitlab CE with PostgreSQL as the database system, and Nginx as the web server on Ubuntu 15.04 version. We will use Ruby version 2.x.x, gitlab stable version 8.x.</div>
      ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/git/how-to-set-up-a-private-git-server-on-a-vps.shtml</c:r1>
    </c:related>
  </c:article>




    <c:article>
        <c:title>Compile and Install Nginx from Source On Ubuntu</c:title>
        <c:articleLink>/blog/articles/linux/Compile-and-Install-Nginx-from-Source-On-Ubuntu.shtml</c:articleLink>
        <c:pubDate>20160407</c:pubDate>
        <c:tags>Nginx</c:tags>
        <c:category>Nginx</c:category>
        <c:abstract>
            <![CDATA[
nginx pronounced as "engine x" is an HTTP and reverse proxy server, as well as a mail proxy server.
<br />
<br />
nginx is an opensource web server which uses epoll mechanism to serve clients as opposed to Apache which uses a thread based model which delegates the requests to an instance in the thread pool. nginx is being used more over Apache because of its speed. nginx has over 13% market share and increasing continuously.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>





    <c:article>
        <c:title>NODE.JS AND EXPRESS - SESSIONS</c:title>
        <c:articleLink>/blog/articles/node/nodejs-and-express-sessions.shtml</c:articleLink>
        <c:pubDate>20160229</c:pubDate>
        <c:tags>NodeJS</c:tags>
        <c:category>NodeJS</c:category>
        <c:abstract>
            <![CDATA[
            Using sessions to keep track of users as they journey through your site is key to any respectable application. Luckily, as usual, using Express with your Node.js application makes it super simple to get sessions up and running.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>



<c:article>
    <c:title>5-minutes-with-spring-oauth-2-0</c:title>
    <c:articleLink>/blog/articles/j2ee/5-minutes-with-spring-oauth-2-0.shtml</c:articleLink>
    <c:pubDate>20151231</c:pubDate>
    <c:tags>OAuth</c:tags>
    <c:category>J2EE</c:category>
    <c:abstract>
        <![CDATA[
        <div style="margin-bottom:.6em;">What can you use when you’ve to let the access of protected resources by a third part application? The Open Authentication standard (briefly OAuth) is useful in order to authenticate and authorize user credentials from an external application and grant the access of your resources.</div><div>
The Open Authentication is a standard defined by the RFC (Request For Comments) number 6749 and is used when we’re not in common scenario to be the system application and the system validator and we’ve everything under our control.</div>
        ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
</c:article>

<c:article>
    <c:title>Securing Restful Web Services with Spring Security and OAuth2 (Spring Security + OAuth2 + Spring Rest)</c:title>
    <c:articleLink>/blog/articles/j2ee/Spring-Security-Oauth2-Integration.shtml</c:articleLink>
    <c:pubDate>20151229</c:pubDate>
    <c:tags>OAuth</c:tags>
    <c:category>J2EE</c:category>
    <c:abstract>
        <![CDATA[
        OAuth (Open Authentication) is an open standard or kind of protocol that lets one site to share its content with some other site without sharing credentials.
        ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
</c:article>


<c:article>
    <c:title>Web Development Using Spring and AngularJS</c:title>
    <c:articleLink>/blog/articles/j2ee/Web-Development-Using-Spring-and-AngularJS.shtml</c:articleLink>
    <c:pubDate>20151225</c:pubDate>
    <c:tags>Spring</c:tags>
    <c:category>J2EE</c:category>
    <c:abstract>
        <![CDATA[
        In enterprise Java application development, perhaps Spring and Hibernate integration is one of the most-demanded topic which most programmers are looking for and are facing with. Spring is the leading enterprise application framework, and Hibernate is the leading ORM framework so combination of these two guys would be a preferable choice in order to develop robust enterprise applications.
        ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
</c:article>
  

<c:article>
    <c:title>Install Apache Tomcat 8 on Ubuntu 14.04</c:title>
    <c:articleLink>/blog/articles/linux/Install-Apache-Tomcat-8-on-Ubuntu-14-04.shtml</c:articleLink>
    <c:pubDate>20151210</c:pubDate>
    <c:tags>Tomcat</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[Apache Tomcat is a web server and servlet container that is used to serve Java applications. Tomcat is an open source implementation of the Java Servlet and JavaServer Pages technologies, released by the Apache Software Foundation. This tutorial covers the basic installation and some configuration of the latest release of Tomcat 8 on your Ubuntu 14.04 server.]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
</c:article>



<c:article>
    <c:title>Spring 4 and Hibernate 4 Integration</c:title>
    <c:articleLink>/blog/articles/j2ee/spring-4-and-hibernate-4-integration.shtml</c:articleLink>
    <c:pubDate>20151119</c:pubDate>
    <c:tags>Spring</c:tags>
    <c:category>J2EE</c:category>
    <c:abstract>
        <![CDATA[
        In enterprise Java application development, perhaps Spring and Hibernate integration is one of the most-demanded topic which most programmers are looking for and are facing with. Spring is the leading enterprise application framework, and Hibernate is the leading ORM framework so combination of these two guys would be a preferable choice in order to develop robust enterprise applications.
        ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
</c:article>



    <c:article>
        <c:title>Promise Pro</c:title>
        <c:articleLink>/blog/articles/node/promise-pro.shtml</c:articleLink>
        <c:pubDate>20151029</c:pubDate>
        <c:tags>NodeJS</c:tags>
        <c:category>NodeJS</c:category>
        <c:abstract>
            <![CDATA[
            Promise 是一个标准，它描述了异步调用的返回结果，包括正确返回结果和错误处理。关于详细的说明文档可以参考 <a target="_blank" href="http://promisesaplus.com/?source=Blog_Email_%5BPromises%20for%20better%20%5D">Promises/A+</a> 。目前实现 promise 标准的模块有很多，如 <a href="https://github.com/kriskowal/q" target="_blank">Q</a>、<a target="_blank" href="https://github.com/petkaantonov/bluebird?source=Blog_Email_[Promises%20for%20better%20]">bluebird</a> 和 <a href="https://github.com/medikoo/deferred?source=Blog_Email_[Promises%20for%20better%20]" target="_blank">Deferred</a>，下面我们以 Q 为例，介绍一下 promise 在 nodejs 中的使用方法。 
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>


    <c:article>
        <c:title>AngularJS Data Models: $http VS $resource VS Restangular</c:title>
        <c:articleLink>/blog/articles/AngularJS/angularjs-data-models-http-vs-resource-vs-restangular.shtml</c:articleLink>
        <c:pubDate>20151027</c:pubDate>
        <c:tags>AngularJS</c:tags>
        <c:category>AngularJS</c:category>
        <c:abstract>
            <![CDATA[
            Sauce Labs software developer <a href="https://twitter.com/alanctkc">Alan Christopher Thomas</a> and his team have been hard at work updating our stack. He shared with us some insight into their dev process, so we thought we’d show off what he’s done. 
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>




    <c:article>
        <c:title>Create a TV Show Tracker using AngularJS, Node.js and MongoDB</c:title>
        <c:articleLink>/blog/articles/AngularJS/create-a-tv-show-tracker-using-angularjs-nodejs-and-mongodb.shtml</c:articleLink>
        <c:pubDate>20150927</c:pubDate>
        <c:tags>AngularJS</c:tags>
        <c:category>AngularJS</c:category>
        <c:abstract>
            <![CDATA[
            This tutorial will show you how to build a REST API with Express, authentication and signup process with Passport, create and retrieve data from MongoDB using Mongoose. The front-end will be built using AngularJS and Bootstrap Sass. The last step involves using gulp.js to optimize your static assets.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <!--c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
        </c:related-->
    </c:article>


<c:article>
    <c:title>GnuPrivacyGuard</c:title>
    <c:articleLink>/blog/articles/linux/GnuPrivacyGuard.shtml</c:articleLink>
    <c:pubDate>20150810</c:pubDate>
    <c:tags>GPG</c:tags>
    <c:category>GPG</c:category>
    <c:abstract>
        <![CDATA[
       "GnuPG uses public-key cryptography so that users may communicate securely. In a public-key system, each user has a pair of keys consisting of a private key and a public key. A user's private key is kept secret; it need never be revealed. The public key may be given to anyone with whom the user wants to communicate." From 
       <a target="_blank" href="https://www.gnupg.org/gph/en/manual.html">The GNU Privacy Handbook</a>
        ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
</c:article>

  



<c:article>
    <c:title>Spring Roo</c:title>
    <c:articleLink>/blog/articles/j2ee/Spring-Roo.shtml</c:articleLink>
    <c:pubDate>20150730</c:pubDate>
    <c:tags>Spring</c:tags>
    <c:category>Spring</c:category>
    <c:abstract>
        <![CDATA[
        <div style="margin-bottom:.8em;">Spring 框架于 2002 年年底发布，目的在于简化 J2EE（目前是 JavaEE）开发。在过去 8 年中，Spring 成功完成了该使命，提供了 Java 社区框架或功能，比如 Spring Security、Spring MVC、事务管理、Spring 批处理和 Spring 集成，这都易于理解和使用。Spring 希望让 Java 开发人员的工作更轻松、更富成效。为此，Spring 创建了一个名为 Spring Roo 的开发工具。
        </div><div style="margin-bottom:.8em;">
        Spring Roo 是针对 Java 技术的一个可扩展的、基于文本的开源 RAD 工具。它是用于创建和管理基于 Spring 的应用程序的一个强大资源。这里是任务说明：
<b>Roo 的任务是从根本上可持续地改善 Java 开发人员的生产效率，而无损工程完整性和灵活性。</b>
这一要求转换为构建于 Java 技术之上的一种工具，可持续地增加项目整个生命周期的生产效率，且不限定开发人员使用某一特定方法。Spring Roo 使用流行、可靠和成熟的库，比如 Spring 框架、Java 持久化 API、Java Server Pages (JSP)、Spring Security、Spring Web Flow、Log4J 和 Maven。Roo 生成的应用程序使用 Bean Validation (JSR-303) 和 Dependency Injection (JSR-330) 这样的标准，且遵循最佳实践 SpringSource 认证的应用程序架构。
</div><div style="margin-bottom:.8em;">
使用 Spring Roo，您可以添加和配置 JPA、Spring MVC、Spring Security 等功能，使用 Log4j 进行日志记录，测试 JUnit 和 Selenium、Solr、JMS、电子邮件等框架，仅需在 Roo shell 上输入命令即可。使用 Roo 添加这些功能节省的时间提高了开发人员的生产效率。Roo 不能编写业务逻辑，但可以管理应用程序的基础结构或配置。
</div><div style="margin-bottom:.8em;">
Roo 是一个开发时间工具，这意味着应用程序在运行时独立于 Roo。由于 Roo 在运行时不存在，它没有任何性能或内存开销。这确保您不依赖于 Spring Roo，您只需几个按键即可随时从您的项目中删除 Roo。
</div>
        ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
</c:article>

  

    <c:article>
        <c:title>Express4 + Mongoose + JSON Web Token Authentication</c:title>
        <c:articleLink>/blog/articles/oauth/jwt-express-node-mongoose.shtml</c:articleLink>
        <c:pubDate>20150702</c:pubDate>
        <c:tags>OAuth JWT</c:tags>
        <c:category>OAuth</c:category>
        <c:abstract>
            <![CDATA[
            Authentication is part of almost every system, even if it is in node.js, Express, Angular.JS, PHP, Perl, Ruby, or any other languages you are using. Dealing with authentication is a must for most of the systems.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <c:related>
          <c:r1 title="OAuth 2.0 Server">/blog/articles/oauth/OAuth-2-0-Server.shtml</c:r1>
          <c:r1 title="The Ultimate Guide to Mobile API Security">https://stormpath.com/blog/the-ultimate-guide-to-mobile-api-security/</c:r1>
          <c:r1 title="Authenticating Node.js Applications With Passport">/blog/articles/node/authenticating-nodejs-applications-with-passport.shtml</c:r1>
          <c:r1 title="Authentication in NodeJS and ExpressJS with PassportJS - Part 1">https://truongtx.me/2014/03/29/authentication-in-nodejs-and-expressjs-with-passportjs-part-1/</c:r1>
          <c:r1 title="Authentication Using PassportJS">http://danialk.github.io/blog/2013/02/23/authentication-using-passportjs/</c:r1>
          <c:r1 title="Authenticating Node.js Applications With Passport">http://code.tutsplus.com/tutorials/authenticating-nodejs-applications-with-passport--cms-21619</c:r1>
          <c:r1 title="Token-Based Authentication With AngularJS &amp; NodeJS">http://code.tutsplus.com/tutorials/token-based-authentication-with-angularjs-nodejs--cms-22543</c:r1>
          <c:r1 title="Using Redis with Node.js">/blog/articles/node/using-redis-node-js.shtml</c:r1>
          <c:r1 title="How To Install and Use Redis">https://www.digitalocean.com/community/tutorials/how-to-install-and-use-redis</c:r1>
          <c:r1 title="Mongoose connection to replica set">http://stackoverflow.com/questions/24396583/mongoose-connection-to-replica-set</c:r1>
          <c:r1 title="ReplicaSet Connections">http://stackoverflow.com/questions/24396583/mongoose-connection-to-replica-set</c:r1>
        </c:related>
    </c:article>


    <c:article>
    <c:title>Building a RESTful API With Node</c:title>
    <c:articleLink>/blog/articles/node/building-a-restful-api-with-node.shtml</c:articleLink>
    <c:pubDate>20150602</c:pubDate>
    <c:tags>RESTful</c:tags>
    <c:category>NodeJS</c:category>
    <c:abstract>
      <![CDATA[With an ever growing collection of beer, I am in dire need of a way to store and track my beer. What better way to do this than to create an application where I can add, remove, update, and view my beer collection. Like any motivated developer, I want my friends to be able to create their own lockers and control who has access to mine. 
      <br />
      <br />
  <table style="width:100%;">
    <thead style="background-color:#f0e2f0;">
      <tr>
        <th style="padding-left:.5em;">Resource (URI)</th>
        <th>POST (create)</th>
        <th>GET (read)</th>
        <th>PUT (update)</th>
        <th>DELETE (destroy)</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style="padding-left:.5em;">/todos</td>
        <td>create new task</td>
        <td>list tasks</td>
        <td>error</td>
        <td>error</td>
      </tr>
      <tr>
        <td style="padding-left:.5em;">/todos/:id</td>
        <td>error</td>
        <td>show task :id</td>
        <td>update task :id</td>
        <td>destroy task ID 1</td>
      </tr>
    </tbody>
  </table>

      <br />
  <table style="width:100%;">
    <thead style="background-color:#f0e2f0;">
      <tr>
        <th style="padding-left:.5em;">HTTP verb</th>
        <th>Path</th>
        <th>Action</th>
        <th>Usedfor</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style="padding-left:.5em;">Get</td>
        <td>/widgets</td>
        <td>index</td>
        <td>Show all of widgets</td>
      </tr>
      <tr>
        <td style="padding-left:.5em;">Get</td>
        <td>/widgets/new</td>
        <td>new</td>
        <td>Return the html form</td>
      </tr>
      <tr>
        <td style="padding-left:.5em;">POST</td>
        <td>/widgets</td>
        <td>create</td>
        <td>Create a new widget</td>
      </tr>
      <tr>
        <td style="padding-left:.5em;">GET</td>
        <td>/widgets/:id</td>
        <td>show</td>
        <td>Show a widget</td>
      </tr>
      <tr>
        <td style="padding-left:.5em;">GET</td>
        <td>/widgets/:id/edit</td>
        <td>edit</td>
        <td>Return the html from for modify widget</td>
      </tr>
      <tr>
        <td style="padding-left:.5em;">PUT</td>
        <td>/widgets/:id</td>
        <td>update</td>
        <td>Update a widget</td>
      </tr>
      <tr>
        <td style="padding-left:.5em;">DELETE</td>
        <td>/widgets/:id</td>
        <td>destroy</td>
        <td>Delete a widget</td>
      </tr>
    </tbody>
  </table>]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  
  

    <c:article>
        <c:title>OAuth 2.0 Server</c:title>
        <c:articleLink>/blog/articles/oauth/OAuth-2-0-Server.shtml</c:articleLink>
        <c:pubDate>20150521</c:pubDate>
        <c:tags>OAuth</c:tags>
        <c:category>OAuth</c:category>
        <c:abstract>
            <![CDATA[
            <a style="color:#5687A3;" target="_blank" href="http://oauth.net/2/">OAuth 2.0</a> is the next evolution of the OAuth protocol which was originally created in late 2006. OAuth 2.0 focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. This specification is being developed within the IETF OAuth WG and is based on the OAuth WRAP proposal.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <c:related>
          <c:r1 title=""></c:r1>
        </c:related>
    </c:article>



    <c:article>
        <c:title>Authenticating Node.js Applications With Passport</c:title>
        <c:articleLink>/blog/articles/node/authenticating-nodejs-applications-with-passport.shtml</c:articleLink>
        <c:pubDate>20150520</c:pubDate>
        <c:tags>Passport</c:tags>
        <c:category>NodeJS</c:category>
        <c:abstract>
            <![CDATA[Implementing robust authentication strategies for any application can be a daunting task and Node.js applications are no exception to this. In this tutorial, we will develop a Node.js application from scratch and use a relatively new but very popular authentication middleware - Passport to take care of our authentication concerns. ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <c:related>
          <c:r1 title=""></c:r1>
        </c:related>
    </c:article>



  <c:article>
    <c:title>Nginx, PHP and a PHP FastCGI daemon init script</c:title>
    <c:articleLink>/blog/articles/linux/nginx-php-and-a-php-fastcgi-daemon-init-script.shtml</c:articleLink>
    <c:pubDate>20150429</c:pubDate>
    <c:tags>Nginx</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[One of the things us ex-Apache httpd or ex-Lighttpd users have to get used to when installing nginx is how there isn’t built-in FastCGI support for process spawning. While these means nginx is more lightweight and faster, it does mean that you have to manage your FastCGI processes yourself.]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>



    <c:article>
        <c:title>Using Redis with Node.js</c:title>
        <c:articleLink>/blog/articles/node/using-redis-node-js.shtml</c:articleLink>
        <c:pubDate>20150327</c:pubDate>
        <c:tags>Redis</c:tags>
        <c:category>NodeJS</c:category>
        <c:abstract>
            <![CDATA[Redis is a fast and efficient in-memory key-value store. It is also known as a data structure server,
            as the keys can contain strings, lists, sets, hashes and other data structures.
            If you are using Node.js, you can use the node_redis module to interact with Redis.
            This tutorial explains various ways of interacting with Redis from a Node.js app using the node_redis library.]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
        <c:related>
          <c:r1 title="How To Install and Use Redis">https://www.digitalocean.com/community/tutorials/how-to-install-and-use-redis</c:r1>
        </c:related>
    </c:article>



    <c:article>
    <c:title>Ajax file upload in Node.js</c:title>
    <c:articleLink>/blog/articles/node/ajax-upload-nodejs-express.shtml</c:articleLink>
    <c:pubDate>20150319</c:pubDate>
    <c:tags>NodeJS</c:tags>
    <c:category>NodeJS</c:category>
    <c:abstract>
      <![CDATA[In this tutorial i am going to explain how to develop file uploads using node.js with Ajax. So it won’t need a page refresh at all.]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  
  
  <c:article>
    <c:title>Create Static Table View Using Storyboard</c:title>
    <c:articleLink>/blog/articles/ios/Create-Static-Table-View-Using-Storyboard.shtml</c:articleLink>
    <c:pubDate>20150213</c:pubDate>
    <c:tags>iOS</c:tags>
    <c:category>IOS</c:category>
    <c:abstract>
      <![CDATA[To illustrate how easy you can use Storyboard to implement static table view, we’ll build a simple Setting screen. Static table views are ideal in situations where a pre-defined number of data items to be displayed. A setting screen is an obvious use of static table view.]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/ios/ios-pro.shtml</c:r1>
      <c:r1>/blog/articles/ios/objective-c.shtml</c:r1>
      <c:r1>/blog/articles/ios/beginning-autolayout-on-ios-7-part-1.shtml</c:r1>
    </c:related>
  </c:article>


  <c:article>
    <c:title>开始iOS 7中自动布局教程 (一)</c:title>
    <c:articleLink>/blog/articles/ios/beginning-autolayout-on-ios-7-part-1.shtml</c:articleLink>
    <c:pubDate>20150212</c:pubDate>
    <c:tags>AutoLayout</c:tags>
    <c:category>IOS</c:category>
    <c:abstract>
      <![CDATA[到目前为止，如果你的设计相当的复杂，那么你必须编写大量的代码来适应这样的布局。你应该很高兴，现在这样的情况再也不存在了!
      iOS6为iPhone和iPad带来了一个极好的新特性：自动布局。Xcode 5和 iOS7中对自动布局做出了改善！如果你曾经尝试着在Xcode4中使用自动布局并最终做出放弃，现在是该给Xcode5一次机会了。]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/ios/ios-pro.shtml</c:r1>
      <c:r1>/blog/articles/ios/objective-c.shtml</c:r1>
      <c:r1>/blog/articles/ios/Create-Static-Table-View-Using-Storyboard.shtml</c:r1>
    </c:related>
  </c:article>
  

  <c:article>
    <c:title>Ubuntu, Rails ready, with nginx &amp; unicorn</c:title>
    <c:articleLink>/blog/articles/ruby/ubuntu-rails-ready-with-nginx-unicorn.shtml</c:articleLink>
    <c:pubDate>20150202</c:pubDate>
    <c:tags>Rails</c:tags>
    <c:category>Ruby</c:category>
    <c:abstract>
      <![CDATA[
               How to set up an Ubuntu Linux box to be ready for hosting Ruby on Rails, with nginx & unicorn.
            ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>


  <c:article>
        <c:title>Rending your XML as HTML with XSLT in Rails</c:title>
        <c:articleLink>/blog/articles/ruby/Rending-your-XML-as-HTML-with-XSLT-in-Rails.shtml</c:articleLink>
        <c:pubDate>20150201</c:pubDate>
        <c:tags>Rails</c:tags>
        <c:category>Ruby</c:category>
        <c:abstract>
            <![CDATA[
                When the W3C wrote the XML specification they also developed the Extensible Stylesheet Language for Transformations. XSLT provides a powerful, flexible language for transforming XML documents into something else. In this case, we're going to use it to create HTML documents.
            ]]>
        </c:abstract>
        <c:articleImage></c:articleImage>
        <c:video></c:video>
    </c:article>


  <c:article>
    <c:title>解析nginx负载均衡</c:title>
    <c:articleLink>/blog/articles/linux/nginx-load-balance.shtml</c:articleLink>
    <c:pubDate>20150124</c:pubDate>
    <c:tags>Nginx</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[对于一个大型网站来说，负载均衡是永恒的话题。随着硬件技术的迅猛发展，越来越多的负载均衡硬件设备涌现出来，如F5 BIG-IP、Citrix NetScaler、Radware等等，虽然可以解决问题，但其高昂的价格却往往令人望而却步，因此负载均衡软件仍然是大部分公司的不二之选。nginx作为webserver的后起之秀，其优秀的反向代理功能和灵活的负载均衡策略受到了业界广泛的关注。本文将以工业生产为背景，从设计实现和具体应用等方面详细介绍nginx负载均衡策略。 ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>


  <c:article>
    <c:title>How To Use Rsync to Sync Local and Remote Directories on a VPS</c:title>
    <c:articleLink>/blog/articles/linux/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps.shtml</c:articleLink>
    <c:pubDate>20150123</c:pubDate>
    <c:tags>Rsync</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[Most major websites on the web such as Facebook, Best Buy et.al use this concept.  Some opt to use commercial services called Content Delivery Networks (CDN) to accomplish this task.  Two such companies are Akamai and Limelight.  ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>


  <c:article>
    <c:title>How to build a scalable, caching, resizing image server</c:title>
    <c:articleLink>/blog/articles/linux/how-to-build-a-scalable-caching-resizing-image-server.shtml</c:articleLink>
    <c:pubDate>20150120</c:pubDate>
    <c:tags>Nginx</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[Most major websites on the web such as Facebook, Best Buy et.al use this concept.  Some opt to use commercial services called Content Delivery Networks (CDN) to accomplish this task.  Two such companies are Akamai and Limelight.  ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>


  <c:article>
    <c:title>How To Set Up vsftpd on CentOS 6</c:title>
    <c:articleLink>/blog/articles/linux/How-To-Set-Up-vsftpd-on-CentOS-6.shtml</c:articleLink>
    <c:pubDate>20150120</c:pubDate>
    <c:tags>ftp</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[Warning: FTP is inherently insecure. If you must use FTP, consider securing your FTP connection with SSL/TLS. Otherwise, it is best to use SFTP, a secure alternative to FTP. ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  
  <c:article>
    <c:title>MongoDB Pro</c:title>
    <c:articleLink>/blog/articles/db/mongo-pro.shtml</c:articleLink>
    <c:pubDate>20150112</c:pubDate>
    <c:tags>Mongo</c:tags>
    <c:category>DB</c:category>
    <c:abstract>
      <![CDATA[
	  http://www.thegeekstuff.com/2013/01/install-mongodb/
	  ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>



  <c:article>
    <c:title>Sphinx xmlpipe2 in PHP</c:title>
    <c:articleLink>/blog/articles/php/sphinx-xmlpipe2-in-php.shtml</c:articleLink>
    <c:pubDate>20150112</c:pubDate>
    <c:tags>PHP</c:tags>
    <c:category>PHP</c:category>
    <c:abstract>
      <![CDATA[
	  Sphinx is a great open source package for implementing a full text search. 
    Before we can use it to search, we first must inject all of our data into it. 
    There are two primary ways of loading that data in – directly accessing the data via a sql query, 
    or using the xmlpipe2 format. Although using the database as a direct data source is very fast, 
    it can sometimes be difficult to craft a query that will contain normalized data for all the fields you require in an index. 
    The XML option gives us much more flexibility at the cost of speed(although it is still very fast). 
    This article will deal with show you how to generate that XML. 
    It assumed to have a basic understanding of how Sphinx works, if not browse the docs first.
	  ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/php/Sphnix-Pro.shtml</c:r1>
    </c:related>
  </c:article>

  <c:article>
    <c:title>How to mount s3 bucket in linux EC2 instance</c:title>
    <c:articleLink>/blog/articles/aws/how-to-mount-s3-bucket-in-linux-ec2-instance.shtml</c:articleLink>
    <c:pubDate>20150109</c:pubDate>
    <c:tags>AWS</c:tags>
    <c:category>AWS</c:category>
    <c:abstract>
      <![CDATA[If you have not created a s3 bucket kindly go through with EC2 documentation.
      The documentation is very clear and easy to understand .
      This is the link how to create S3bucket]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1></c:r1>
    </c:related>
  </c:article>

  <c:article>
    <c:title>Using Amazon EC2 and Squid to bypass content region restrictions</c:title>
    <c:articleLink>/blog/articles/linux/Using-Amazon-EC2-and-Squid-to-bypass-content-region-restrictions.shtml</c:articleLink>
    <c:pubDate>20150107</c:pubDate>
    <c:tags>Squid</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[
          I recently encountered some websites that restrict which content I could view based on the region I am located in. This is a brief tutorial on using Amazon EC2 and Squid to bypass those restrictions.
        ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Setup a memcache server on linux </c:title>
    <c:articleLink>/blog/articles/linux/Setup-a-memcache-server-on-linux.shtml</c:articleLink>
    <c:pubDate>20141112</c:pubDate>
    <c:tags>Memcache</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract><![CDATA[http://www.bxtra.net/articles/2011-03-22/how-to-install-memcached-on-centos-memcached-pecl-update-20110322]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Setup a NFS Server on Ubuntu</c:title>
    <c:articleLink>/blog/articles/linux/Setup-a-NFS-Server-on-Ubuntu.shtml</c:articleLink>
    <c:pubDate>20141112</c:pubDate>
    <c:tags>nfs</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-14-04 <br />
            http://hunterford.me/amazon-ec2-and-nfs/]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1 title="How To Set Up an NFS Mount on CentOS 6">
        https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-centos-6/ 
      </c:r1>
    </c:related>
  </c:article>

  <c:article>
    <c:title>Setup email server using postfix on CentOS</c:title>
    <c:articleLink>/blog/articles/linux/Setup-email-server-using-postfix-on-CentOS.shtml</c:articleLink>
    <c:pubDate>20141112</c:pubDate>
    <c:tags>postfix</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[https://ostechnix.wordpress.com/2013/02/08/setup-mail-server-using-postfixdovecotsquirrelmail-in-centosrhelscientific-linux-6-3-step-by-step/ <br />
            https://www.digitalocean.com/community/tutorials/how-to-install-postfix-on-centos-6 <br />
            http://www.ehow.com/how_6596230_set-up-centos-email-server.html <br />
            http://www.linuxidc.com/Linux/2010-08/28167.htm
]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Ubuntu Pro</c:title>
    <c:articleLink>/blog/articles/linux/ubuntu-pro.shtml</c:articleLink>
    <c:pubDate>20141112</c:pubDate>
    <c:tags>Ubuntu</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract><![CDATA[Ubuntu is an open source software platform that runs everywhere from the smartphone, the tablet and the PC to the server and the cloud.]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>


  <c:article>
    <c:title>Sphnix Pro</c:title>
    <c:articleLink>/blog/articles/php/Sphnix-Pro.shtml</c:articleLink>
    <c:pubDate>20141104</c:pubDate>
    <c:tags>PHP</c:tags>
    <c:category>PHP</c:category>
    <c:abstract>
      <![CDATA[
	  It’s very handy to have FT search out of the box, but there are several drawbacks attached. 
	  Problem is that MyISAM Full-text search is not designed to handle big amounts of text data. 
	  If you plan to index more than 1M documents you will probably need to take a look on the external search system like Lucene or Sphinx.
	  For the usual LAMP-based service I personally would prefer to use Sphinx as 
	  it provides simple transition from MySQL FT and easy to integrate into any application 
	  (Sphinx could be queried via native APIs or via MySQL protocol).
	  ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/php/sphinx-xmlpipe2-in-php.shtml</c:r1>
    </c:related>
  </c:article>


  <c:article>
    <c:title>How to create own Git Server with Gitolite and Gitweb in Ubuntu</c:title>
    <c:articleLink>/blog/articles/git/How-to-create-own-Git-Server-with-Gitolite-and-Gitweb-in-Ubuntu.shtml</c:articleLink>
    <c:pubDate>20141103</c:pubDate>
    <c:tags>Git</c:tags>
    <c:category>GIT</c:category>
    <c:abstract>
      <![CDATA[In this tutorial we will learn how to create own git server.
      This time I have selected Gitolite for git server and gitweb to display git repositories.]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/git/how-to-set-up-a-private-git-server-on-a-vps.shtml</c:r1>
    </c:related>
  </c:article>


  <c:article>
    <c:title>Node Pro</c:title>
    <c:articleLink>/blog/articles/linux/node-pro.shtml</c:articleLink>
    <c:pubDate>20141021</c:pubDate>
    <c:tags>Node</c:tags>
    <c:category>NODE</c:category>
    <c:abstract>
      <![CDATA[Node.js is a Javascript platform for server-side programming. 
    It allows users to easily create networked applications that require backend functionality. 
    By using Javascript as both the client and server language, development can be fast and consistent.]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>CentOS Pro</c:title>
    <c:articleLink>/blog/articles/linux/centos-pro.shtml</c:articleLink>
    <c:pubDate>20141020</c:pubDate>
    <c:tags>Linux</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract><![CDATA[...]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>How To Set Up a Private Git Server on a VPS</c:title>
    <c:articleLink>/blog/articles/git/how-to-set-up-a-private-git-server-on-a-vps.shtml</c:articleLink>
    <c:pubDate>20141011</c:pubDate>
    <c:tags>Git</c:tags>
    <c:category>GIT</c:category>
    <c:abstract><![CDATA[This tutorial will show you how to set up a fully fledged Git server using SSH keys for authentication. It will not have a web interface, this will just cover getting Git installed and your access to it set up. We'll use the host "git.droplet.com" in place of the domain you will use for your VPS.]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Linux Command To Find the System Configuration And Hardware Information</c:title>
    <c:articleLink>/blog/articles/linux/linux-command-to-find-the-system-configuration-and-hardware-information.shtml</c:articleLink>
    <c:pubDate>20141011</c:pubDate>
    <c:tags>Linux</c:tags>
    <c:category>Linux</c:category>
    <c:abstract><![CDATA[What is the command to find the system configuration on Linux operating system using command line (text) mode?]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>PHP Pro</c:title>
    <c:articleLink>/blog/articles/php/php-pro.shtml</c:articleLink>
    <c:pubDate>20140904</c:pubDate>
    <c:tags>PHP</c:tags>
    <c:category>PHP</c:category>
    <c:abstract>
      <![CDATA[]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1></c:r1>
    </c:related>
  </c:article>

  <c:article>
    <c:title>Install PHP from source on Ubuntu</c:title>
    <c:articleLink>/blog/articles/php/install-php-from-source-on-ubuntu.shtml</c:articleLink>
    <c:pubDate>20140821</c:pubDate>
    <c:tags>PHP</c:tags>
    <c:category>PHP</c:category>
    <c:abstract>
      <![CDATA[In many cases, it may be desirable to upgrade PHP to a more recent version than what is available in the Ubuntu repositories. For example, you may want to upgrade PHP in order to get the most recent security updates. ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1></c:r1>
    </c:related>
  </c:article>



  <c:article>
    <c:title>How to Set Up a Multi-Node Hadoop Cluster on Amazon EC2</c:title>
    <c:articleLink>/blog/articles/aws/How-to-Set-Up-a-Multi-Node-Hadoop-Cluster-on-Amazon-EC2.shtml</c:articleLink>
    <c:pubDate>20140808</c:pubDate>
    <c:tags>AWS</c:tags>
    <c:category>AWS</c:category>
    <c:abstract>
      <![CDATA[After spending some time playing around on Single-Node pseudo-distributed cluster, it's time to get into real world hadoop. 
      Depending on what works best – Its important to note that there are multiple ways to achieve this and I am going to cover how to setup multi-node hadoop cluster on Amazon EC2. ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1></c:r1>
    </c:related>
  </c:article>



  <c:article>
    <c:title>IOS Professional</c:title>
    <c:articleLink>/blog/articles/ios/ios-pro.shtml</c:articleLink>
    <c:pubDate>20140808</c:pubDate>
    <c:tags>IOS</c:tags>
    <c:category>IOS</c:category>
    <c:abstract>
      <![CDATA[]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
        <c:r1>/blog/articles/ios/objective-c.shtml</c:r1>
        <c:r1>/blog/articles/ios/beginning-autolayout-on-ios-7-part-1.shtml</c:r1>
        <c:r1>/blog/articles/ios/Create-Static-Table-View-Using-Storyboard.shtml</c:r1>
    </c:related>
  </c:article>



  <c:article>
    <c:title>Objective-C</c:title>
    <c:articleLink>/blog/articles/ios/objective-c.shtml</c:articleLink>
    <c:pubDate>20140808</c:pubDate>
    <c:tags>IOS</c:tags>
    <c:category>IOS</c:category>
    <c:abstract>
      <![CDATA[Cocoa 和 Objective-C 是 苹果公司 Mac OS X 操作系统的核心]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/ios/ios-pro.shtml</c:r1>
    </c:related>
  </c:article>




  <c:article>
    <c:title>Xml Processing in hadoop</c:title>
    <c:articleLink>/blog/articles/big-data/Xml-Processing-in-hadoop.shtml</c:articleLink>
    <c:pubDate>20140805</c:pubDate>
    <c:tags>Hadoop</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract>
      <![CDATA[In this post, I will describe how to process xml files using hadoop. 
      XML files can be process using Hadoop streaming but we will process an other way which is more efficient than hadoop streaming. ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/big-data/creating-custom-hadoop-writable-data-type.shtml</c:r1>
      <c:r1>/blog/articles/big-data/XML-parsing-with-Mapreduce.shtml</c:r1>
    </c:related>
  </c:article>




  <c:article>
    <c:title>XML parsing with Mapreduce</c:title>
    <c:articleLink>/blog/articles/big-data/XML-parsing-with-Mapreduce.shtml</c:articleLink>
    <c:pubDate>20140805</c:pubDate>
    <c:tags>Hadoop</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract>
      <![CDATA[Recently I worked with XML data stored in HDFS and wrote a map reduce code to write data to HBase. 
      To work with xml type input data we can use XmlInputFormat class from mahout (No need to have mahout installed, we just need the class from mahout-integration jar). ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/big-data/creating-custom-hadoop-writable-data-type.shtml</c:r1>
      <c:r1>/blog/articles/big-data/Xml-Processing-in-hadoop.shtml</c:r1>
    </c:related>
  </c:article>





  <c:article>
    <c:title>Creating Custom Hadoop Writable Data Type</c:title>
    <c:articleLink>/blog/articles/big-data/creating-custom-hadoop-writable-data-type.shtml</c:articleLink>
    <c:pubDate>20140804</c:pubDate>
    <c:tags>Hadoop</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract>
      <![CDATA[<p>If none of the built-in Hadoop Writable data types matches our requirements some times, then we can create&nbsp;custom Hadoop data type by implementing <strong><span style="font-family: georgia, palatino;">Writable </span></strong>interface or <strong><span style="font-family: georgia, palatino;">WritableComparable </span></strong>interface.</p>]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/big-data/Xml-Processing-in-hadoop.shtml</c:r1>
      <c:r1>/blog/articles/big-data/XML-parsing-with-Mapreduce.shtml</c:r1>
    </c:related>
  </c:article>



  <c:article>
    <c:title>How to Connect to A VPN In Ubuntu</c:title>
    <c:articleLink>/blog/articles/linux/How-to-Connect-to-A-VPN-In-Ubuntu.shtml</c:articleLink>
    <c:pubDate>20140804</c:pubDate>
    <c:tags>VPN</c:tags>
    <c:category>VPN</c:category>
    <c:abstract>
      <![CDATA[There are many reasons why you need to connect to a VPN. 
      Maybe you need to connect to your office network so you can access some confidential files from your Home PC, or that you need an American IP to watch Hulu and listen to Pandora. 
      Whatever the reason is, you can easily configure a VPN connection in Ubuntu and no extra installation is required.]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>


  <c:article>
    <c:title>利用 AWS 免费账户搭建 PPTP VPN</c:title>
    <c:articleLink>/blog/articles/aws/aws-pptp-vpn.shtml</c:articleLink>
    <c:pubDate>20140802</c:pubDate>
    <c:tags>AWS</c:tags>
    <c:category>AWS</c:category>
    <c:abstract>
      <![CDATA[...]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/linux/How-to-Connect-to-A-VPN-In-Ubuntu.shtml</c:r1>
    </c:related>
  </c:article>


  <c:article>
    <c:title>How To Install Glib 2.36.3 on Ubuntu and Linux Mint</c:title>
    <c:articleLink>/blog/articles/linux/how-to-install-glib-2-36-3-on-ubuntu-and-linux-mint.shtml</c:articleLink>
    <c:pubDate>20140714</c:pubDate>
    <c:tags>Linux</c:tags>
    <c:category>Linux</c:category>
    <c:abstract>
      <![CDATA[<a target="_blank" href="https://developer.gnome.org/glib/">GLib</a> provides the core application building blocks for libraries and applications written in C. It provides the core object system used in GNOME, the main loop implementation, and a large set of utility functions for strings and common data structures.]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Code Pro</c:title>
    <c:articleLink>/blog/articles/code-pro.shtml</c:articleLink>
    <c:pubDate>20140705</c:pubDate>
    <c:tags>CODE</c:tags>
    <c:category>CODE</c:category>
    <c:abstract>
      <![CDATA[
                ...
            ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>


  <c:article>
    <c:title>Installing Hadoop 2.4 on Ubuntu 14.04</c:title>
    <c:articleLink>/blog/articles/big-data/installing-hadoop-2-4-on-ubuntu-14-04.shtml</c:articleLink>
    <c:pubDate>20140630</c:pubDate>
    <c:tags>Big Data</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract>
      <![CDATA[
      ...
    ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/big-data/Setup-Hadoop-2-x-on-Mac-OS-X.shtml</c:r1>
      <c:r1>/blog/articles/big-data/hadoop-on-windows.shtml</c:r1>
      <c:r1>/blog/articles/mac/How-To-Enable-SSH-on-Your-Mac.shtml</c:r1>
      <c:r1>/blog/articles/big-data/solr-nutch-hadoop.shtml</c:r1>
      <c:r1>/blog/articles/big-data/hadoop.shtml</c:r1>
      <c:r1>/blog/articles/big-data/hbase.shtml</c:r1>
    </c:related>
  </c:article>

  <c:article>
    <c:title>Installing VmWare Workstation on a system with Hyper-V</c:title>
    <c:articleLink>/blog/articles/win/installing-vmware-workstation-on-a-system-with-hyper-v.shtml</c:articleLink>
    <c:pubDate>20140624</c:pubDate>
    <c:tags>Windows</c:tags>
    <c:category>WIN</c:category>
    <c:abstract>
      <![CDATA[
      转自: http://blog.simonw.se/installing-vmware-workstation-on-a-system-with-hyper-v/
    ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>BUILDING APACHE HADOOP FROM SOURCE</c:title>
    <c:articleLink>/blog/articles/big-data/building-apache-hadoop-from-source.shtml</c:articleLink>
    <c:pubDate>20140624</c:pubDate>
    <c:tags>Big Data</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract>
      <![CDATA[
      In order to build Apache Hadoop from Source, first step is install all required softwares and then checkout latest Apache Hadoop code from trunk and build it.
    ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
    <c:related>
      <c:r1>/blog/articles/big-data/installing-hadoop-2-4-on-ubuntu-14-04.shtml</c:r1>
      <c:r1>/blog/articles/big-data/Setup-Hadoop-2-x-on-Mac-OS-X.shtml</c:r1>
      <c:r1>/blog/articles/big-data/hadoop-on-windows.shtml</c:r1>
      <c:r1>/blog/articles/mac/How-To-Enable-SSH-on-Your-Mac.shtml</c:r1>
      <c:r1>/blog/articles/big-data/solr-nutch-hadoop.shtml</c:r1>
      <c:r1>/blog/articles/big-data/hadoop.shtml</c:r1>
      <c:r1>/blog/articles/big-data/hbase.shtml</c:r1>
    </c:related>
  </c:article>


  <c:article>
    <c:title>Hadoop 在 Windows下的配置与运行</c:title>
    <c:articleLink>/blog/articles/big-data/hadoop-on-windows.shtml</c:articleLink>
    <c:pubDate>20140620</c:pubDate>
    <c:tags>Big Data</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract>
      <![CDATA[
      转自: http://my.oschina.net/sunzy/blog/175900
    ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>How To Install Themes In Ubuntu 14.04 &amp; 13.10</c:title>
    <c:articleLink>/blog/articles/linux/how-to-install-themes-in-ubuntu-13-10.shtml</c:articleLink>
    <c:pubDate>20140620</c:pubDate>
    <c:tags>LINUX</c:tags>
    <c:category>LINUX</c:category>
    <c:abstract>
      <![CDATA[
      If you are bored with default Ambiance theme and icons in Ubuntu 13.10, why not try changing icons or the theme completely? 
      In this article I am going to show you how to install themes in Ubuntu 14.04 and 13.10.
    ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Ubuntu/Liunx 下 GoAgent 翻墙教程</c:title>
    <c:articleLink>/blog/articles/gae/gae-on-ubuntu.shtml</c:articleLink>
    <c:pubDate>20140620</c:pubDate>
    <c:tags>GAE</c:tags>
    <c:category>GAE</c:category>
    <c:abstract>
      <![CDATA[
      转自：http://blog.dimpurr.com/ubuntu-gae/
    ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Setup Hadoop 2.x on Mac OS X</c:title>
    <c:articleLink>/blog/articles/big-data/Setup-Hadoop-2-x-on-Mac-OS-X.shtml</c:articleLink>
    <c:pubDate>20140618</c:pubDate>
    <c:tags>Big Data</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract>
      <![CDATA[
      This tutorial will give the reader instructions to setup Hadoop 2.2.0 on Mac OS X with minimal configurations for exercise and development purposes. 
      I have done the installation on my 13-inc MacBook Pro Retina.
    ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>How To Enable SSH on Your Mac</c:title>
    <c:articleLink>/blog/articles/mac/How-To-Enable-SSH-on-Your-Mac.shtml</c:articleLink>
    <c:pubDate>20140613</c:pubDate>
    <c:tags>Secure Shell</c:tags>
    <c:category>SSH</c:category>
    <c:abstract>
      <![CDATA[
      SSH (or <a target="_blank" href="http://en.wikipedia.org/wiki/Secure_Shell">Secure Shell</a>) is a great service to enable on your Mac at home or work. 
      This useful tool not only enables the ability to remotely access the command line interface of your Mac, 
      but also to remotely access your files through a secure FTP (SFTP) connection, 
      which gives you the ability to transfer files at will. 
      Read on to find out how to transfer files between your own computers over a secure network connection using any modern FTP program.
    ]]>
    </c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Solr + Nutch + Hadoop</c:title>
    <c:articleLink>/blog/articles/big-data/solr-nutch-hadoop.shtml</c:articleLink>
    <c:pubDate>20140611</c:pubDate>
    <c:tags>Big Data</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract><![CDATA[分布式爬虫系统Nutch，伪分布式的 Hadoop 存储爬取的网页结果，用solr来对爬下来的网页进行搜索。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>HBase</c:title>
    <c:articleLink>/blog/articles/big-data/hbase.shtml</c:articleLink>
    <c:pubDate>20140610</c:pubDate>
    <c:tags>Big Data</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract><![CDATA[Hadoop HDFS 适合存储非结构化数据，且受限于 Hadoop MapReduce 编程框架的高延迟数据处理机制，使得 Hadoop 无法满足大规模数据实时处理应用的需求。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Hadoop</c:title>
    <c:articleLink>/blog/articles/big-data/hadoop.shtml</c:articleLink>
    <c:pubDate>20140513</c:pubDate>
    <c:tags>Big Data</c:tags>
    <c:category>HADOOP</c:category>
    <c:abstract><![CDATA[Hadoop 是一个开源的分布式编程框架， 它遵循谷歌的方法实现了 MapReduce 算法，用以查询在互联网上分布的数据集。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>GoAgent 搭建网络代理</c:title>
    <c:articleLink>/blog/articles/gae/goagent-proxy.shtml</c:articleLink>
    <c:pubDate>20140128</c:pubDate>
    <c:tags>gae,goagent,proxy</c:tags>
    <c:category>GAE</c:category>
    <c:abstract><![CDATA[GoAgent 是使用跨平台语言 Python 开发的代理软件，利用 Google App Engine 的服务器充当代理，帮助用户浏览网络上的内容。
<br />
GoAgent 支持的操作系统包括 Microsoft Windows、OS X、iOS、Linux（及多个基于 Linux 开发的移动操作系统、路由器固件，如 Android 和 OpenWRT。
<br />
由于 GoAgent 所使用的 Google App Engine 被认为可以作为开放式代理，因此其使用的美国加利福尼亚州山景城 Google 数据中心的出口 IP 地址段会受到部分网站的封锁或限制，以防止恶意攻击。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>谷歌应用引擎 (Google App Enging)</c:title>
    <c:articleLink>/blog/articles/gae/google-app-engine.shtml</c:articleLink>
    <c:pubDate>20140128</c:pubDate>
    <c:tags>gae</c:tags>
    <c:category>GAE</c:category>
    <c:abstract><![CDATA[Google App Engine 是一个开发、托管网络应用程序的平台，使用Google管理的数据中心。它在2008年4月发布了第一个beta版本。
<br />
Google App Engine 使用了云计算技术。它跨越多个服务器和数据中心来虚拟化应用程序。其他基于云的平台还有Amazon Web Services和微软的Azure服务平台等。
<br />
Google App Engine 在用户使用一定的资源时是免费的。支付额外的费用可以获得应用程序所需的更多的存储空间、带宽或是CPU负载。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Git 基础</c:title>
    <c:articleLink>/blog/articles/git/git-pro-basis.shtml</c:articleLink>
    <c:pubDate>20140225</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>GIT</c:category>
    <c:abstract><![CDATA[一些常用的命令]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Git Pro 起步</c:title>
    <c:articleLink>/blog/articles/git/git-pro-beginning.shtml</c:articleLink>
    <c:pubDate>20140225</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>GIT</c:category>
    <c:abstract><![CDATA[同生活中的许多伟大事件一样，Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众广的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用分布式版本控制系统 BitKeeper 来管理和维护代码。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>构建 J2EE 开发环境</c:title>
    <c:articleLink>/blog/articles/j2ee/setup-j2ee-environment.shtml</c:articleLink>
    <c:pubDate>20140127</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>JAVA</c:category>
    <c:abstract><![CDATA[...]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <c:article>
    <c:title>Mac Pro</c:title>
    <c:articleLink>/blog/articles/mac/mac-pro.shtml</c:articleLink>
    <c:pubDate>20140310</c:pubDate>
    <c:tags>MAC</c:tags>
    <c:category>Mac Pro</c:category>
    <c:abstract><![CDATA[Mac Pro]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>

  <!--c:article>
    <c:title>使用 Maven 构建 Struts2 项目</c:title>
    <c:articleLink>/blog/articles/struts2/build-by-maven.shtml</c:articleLink>
    <c:pubDate>20140317</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>SC</c:category>
    <c:abstract><![CDATA[...]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article-->
  <c:article>
    <c:title>Struts2： Hello World！</c:title>
    <c:articleLink>/blog/articles/struts2/hello-world.shtml</c:articleLink>
    <c:pubDate>20140226</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[Struts2 是第二代基于 Model-View-Controller（MVC）模型的 web 应用框架。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>在 GAE 上创建 Struts2 应用程序</c:title>
    <c:articleLink>/blog/articles/gae/host-an-app-on-gae.shtml</c:articleLink>
    <c:pubDate>20140220</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>GAE</c:category>
    <c:abstract><![CDATA[In this tutorial, we will show you how to develop Struts 2 web application in Google App Engine (GAE) environment.]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Struts2 拦截器</c:title>
    <c:articleLink>/blog/articles/struts2/interceptor.shtml</c:articleLink>
    <c:pubDate>20140220</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[不理解拦截器如何工作，就永远不会真正理解 Struts。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>开发自定义拦截器</c:title>
    <c:articleLink>/blog/articles/struts2/interceptor-dev.shtml</c:articleLink>
    <c:pubDate>20140225</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[编写自定义拦截器时需要实现 com.opensymphony.xwork2.interceptor.Interceptor 接口]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>文件上传</c:title>
    <c:articleLink>/blog/articles/struts2/interceptor-file-up-load.shtml</c:articleLink>
    <c:pubDate>20140219</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[Struts2 框架使用拦截器从动作分层出常见任务的惯用模式]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Struts2 中的数据转移和类型转换</c:title>
    <c:articleLink>/blog/articles/struts2/ognl.shtml</c:articleLink>
    <c:pubDate>20140227</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[OGNL 代表 Object-Graph Navigation Language，它被集成在 Struts2 框架中用来帮助实现数据转移和类型转换。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Struts2 结果组件</c:title>
    <c:articleLink>/blog/articles/struts2/result-components.shtml</c:articleLink>
    <c:pubDate>20140312</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[在 Struts2 中默认的结果类型是 JSP，也原生支持多种不同类型的结果 Velocity 和 FreeMarker 等。也可以编写自定义的结果。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>在 Struts 中集成 String 和 Hibernate/JPA</c:title>
    <c:articleLink>/blog/articles/struts2/spring-and-jpa.shtml</c:articleLink>
    <c:pubDate>20140313</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[Hibernate 是一个非常流行的 ORM 框架，JPA 是一个使用持久化技术的新标准接口。可以使用 JPA 标准编码，然后底层使用 Hibernate。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Struts2 标签</c:title>
    <c:articleLink>/blog/articles/struts2/tags-lib.shtml</c:articleLink>
    <c:pubDate>20140301</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[Struts2 自带了很多不同类型的标签。这些标签可分为四种类别: 数据标签 (data tag)、流程控制标签 (control-flow tag)、UI 标签 (UI tag) 和其它标签 (miscellaneous tag)。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Struts2 UI 组件标签</c:title>
    <c:articleLink>/blog/articles/struts2/tags-ui.shtml</c:articleLink>
    <c:pubDate>20140307</c:pubDate>
    <c:tags>git</c:tags>
    <c:category>STRUTS</c:category>
    <c:abstract><![CDATA[Struts2 UI 组件标签与框架的各个部分紧密集成在一起，从数据转移和数据验证到国际化和界面外观。]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Maven ARCHETYPE</c:title>
    <c:articleLink>/blog/articles/mvn/maven-archetype.shtml</c:articleLink>
    <c:pubDate>20140318</c:pubDate>
    <c:tags>mvn</c:tags>
    <c:category>MVN</c:category>
    <c:abstract><![CDATA[Maven2 包含若干 archetype 项目原型，利用 archetype 原型可以快速构建项目...]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>struts2-archetype-starter</c:title>
    <c:articleLink>/blog/articles/struts2/archetype-starter.shtml</c:articleLink>
    <c:pubDate>20140319</c:pubDate>
    <c:tags>struts</c:tags>
    <c:category>J2EE</c:category>
    <c:abstract><![CDATA[利用 struts2-archetype-starter 原型可以快速构建 Struts2 项目...]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>MAC 下安装与配置 MySQL</c:title>
    <c:articleLink>/blog/articles/db/mysql.shtml</c:articleLink>
    <c:pubDate>20140324</c:pubDate>
    <c:tags>mysql</c:tags>
    <c:category>MYSQL</c:category>
    <c:abstract><![CDATA[MySQL]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>常用 JPA annotation 参考</c:title>
    <c:articleLink>/blog/articles/persistence/jpa-annotation.shtml</c:articleLink>
    <c:pubDate>20140325</c:pubDate>
    <c:tags>jpa</c:tags>
    <c:category>JPA</c:category>
    <c:abstract><![CDATA[JPA annotation]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
  <c:article>
    <c:title>Linux Pro</c:title>
    <c:articleLink>/blog/articles/linux/linux-pro.shtml</c:articleLink>
    <c:pubDate>20140709</c:pubDate>
    <c:tags>Linux</c:tags>
    <c:category>Linux</c:category>
    <c:abstract><![CDATA[Linux 基础]]></c:abstract>
    <c:articleImage></c:articleImage>
    <c:video></c:video>
  </c:article>
</c:articleMaster>
