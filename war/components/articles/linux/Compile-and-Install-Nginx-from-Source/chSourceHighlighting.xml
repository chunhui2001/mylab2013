<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[
<div>
nginx pronounced as "engine x" is an HTTP and reverse proxy server, as well as a mail proxy server.
</div><div style="margin-top:.5em;">
nginx is an opensource web server which uses epoll mechanism to serve clients as opposed to Apache which uses a thread based model which delegates the requests to an instance in the thread pool. nginx is being used more over Apache because of its speed. nginx has over 13% market share and increasing continuously.</div>
]]>
  </c:abstract>

  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Why compile from source</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<div><b>Compiling from the source code is useful when:</b></div>
<ul style="list-style-type: decimal;margin-left: 2.5em;">
  <li>Upgrading to the latest version right after the release.</li>
  <li>Fixing security vulnerabilities</li>
  <li>Fixing known bugs which has been impacting your service</li>
  <li>Modifying defaults like the server name</li>
  <li>Applying patches with fixing known bugs</li>
  <li>Software repositories are not upgraded with the latest version because of the dependency hierarchy</li>
</ul>
<div style="margin-top:.5em;"><b>Its painful because:</b></div>
<ul style="list-style-type: decimal;margin-left: 2.5em;">
  <li>You need to keep up to date with software versions</li>
  <li>Your server software might depend on older versions in the dependency tree</li>
</ul>
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>

  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Setup</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sudo apt-get -y update && apt-get -y upgrade
$ sudo apt-get install -y build-essential autoconf libssl-dev curl libcurl4-gnutls-dev zlib1g 
$ sudo apt-get zlib1g-dev libxml2 libxml2-dev libxslt-dev 
$ sudo apt-get libreadline6-dev libpcre3 libpcre3-dev libssl-dev
$ sudo apt-get install openssl libssl-dev libperl-dev 
$ sudo apt-get libgd-dev libgeoip-dev libpam-dev libatomic-ops-dev
$ sudo apt-get build-dep nginx
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Install Lua" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ apt-get install -y lua5.1 liblua5.1-0 liblua5.1-0-dev

# Make sure to symlink library so linker can find it 
$ ln -s /usr/lib/x86_64-linux-gnu/liblua5.1.so /usr/lib/liblua.so 

$ sudo ldconfig

# On CentOS7:
# ln -s /usr/local/lib/libluajit-5.1.so.2 /lib64/libluajit-5.1.so.2
 ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Install LuaJIT" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ wget "http://luajit.org/download/LuaJIT-2.0.1.tar.gz"
$ tar -xzvf LuaJIT-2.0.1.tar.gz
$ cd LuaJIT-2.0.1
$ make
$ sudo make install
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Download dependencies" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# Download all files
$ wget -O "nginx-1.0.15.tar.gz" "http://nginx.org/download/nginx-1.0.15.tar.gz"
$ wget -O "pcre-8.30.tar.gz" "ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.30.tar.gz"
$ wget -O "zlib-1.2.7.tar.gz" "http://zlib.net/zlib-1.2.7.tar.gz"
$ wget -O "openssl-1.0.1c.tar.gz" "http://www.openssl.org/source/openssl-1.0.1c.tar.gz"
$ wget -O "nginx_devkit.tar.gz" "https://github.com/simpl/ngx_devel_kit/tarball/v0.2.17rc2"
$ wget -O "nginx_lua.tar.gz" "https://github.com/chaoslawful/lua-nginx-module/tarball/v0.5.0rc31"
$ git clone https://github.com/FRiCKLE/ngx_cache_purge.git
$ git clone https://github.com/msva/nginx-ey-balancer.git

# Extract everything
$ tar -zxf nginx-1.0.15.tar.gz
$ tar -zxf pcre-8.30.tar.gz
$ tar -zxf zlib-1.2.7.tar.gz
$ tar -zxf openssl-1.0.1c.tar.gz
$ tar -zxf nginx_devkit.tar.gz
$ tar -zxf nginx_lua.tar.gz


$ cd nginx-XXX
$ mkdir modules && mv ../nginx-ey-balancer ./modules

# edit first line of load balancer module's Makefile to point to your build dir
$ vim modules/nginx-ey-balancer/Makefile

# apply a patch from load balancer module
patch -p0 < modules/nginx-ey-balancer/patches/nginx-XXX.patch
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Config and build" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# Configure and build nginx
$ cd nginx-1.0.15
$ export LUAJIT_LIB=/usr/local/lib
$ export LUAJIT_INC=/usr/local/include/luajit-2.0

./configure \
        --user=nginx \
        --group=nginx \
        --prefix=/usr/local/nginx \
        --with-http_gzip_static_module \
        --with-http_ssl_module \
        --with-http_stub_status_module \
        --with-http_geoip_module \
        --with-ipv6 \
        --with-debug \
        --with-pcre \
        --with-file-aio \
        --with-http_realip_module \
        --with-http_addition_module \
        --with-http_sub_module \
        --with-http_flv_module \
        --with-http_dav_module \
        --with-http_perl_module \
        --with-mail \
        --with-mail_ssl_module \
        --with-select_module \
        --with-poll_module \
        --with-file-aio \
        --with-http_xslt_module \
        --with-http_image_filter_module \
        --with-http_mp4_module \
        --with-http_gunzip_module \
        --with-http_gzip_static_module \
        --with-http_auth_request_module \
        --with-http_random_index_module \
        --with-http_secure_link_module \
        --with-http_degradation_module \
        --with-cpp_test_module \
        --with-cpu-opt=CPU \
        --with-pcre-jit \
        --with-md5-asm \
        --with-sha1-asm  \
        --with-zlib-asm=CPU \
        --with-ld-opt="-Wl,-E" \
        --with-libatomic \
        --with-zlib=../zlib-1.2.8 \
        --with-openssl=../openssl-1.0.2h \
        --add-module=../ngx_devel_kit-0.3.0 \
        --add-module=../lua-nginx-module-0.10.6rc1 \
        --add-module=../ngx_cache_purge \
        --add-module=./modules/nginx-ey-balancer \
        --add-module=../ngx-hdfs

# Build and install
$ make && make install
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<ul style="list-style-type: decimal;margin-left: 2.5em;">
  <li><b>--with-http_gzip_static_module</b> option enables nginx to use gzip (Before serving a file from disk to a gzip-enabled client, this module will look for a precompressed file in the same location that ends in ".gz". The purpose is to avoid compressing the same file each time it is requested.).[recommended for reducing size of information sent]</li>

<li><b>--with-http_stub_status_module</b> option enables other plugins over nginx to allow us to get the status (This module provides the ability to get some status from nginx.). [recommended for getting stats]</li>

<li><b>--with-http_ssl_module</b> - required if you want to run a HTTPS server. See <a href="https://www.digitalocean.com/community/articles/how-to-create-a-ssl-certificate-on-nginx-for-centos-6" target="_blank">How To Create a SSL Certificate on nginx for CentOS 6</a></li>

<li><b>--with-pcre</b> option enables to match routes via <a href="https://www.digitalocean.com/community/articles/using-grep-regular-expressions-to-search-for-text-patterns-in-linux" target="_blank">Regular Expression Matching</a> when defining routes. [recommended, you will find more use of this once you start adding and matching routes]</li>

<li><b>--with-file-aio</b> - enables asynchronous I/O, better than the default send file option (recommended if you are allowing users to download static files)</li>

<li><b>--with-http_realip_module</b> is used for getting the IP of the client when behind a load balancer. This is useful when serving content behind <a href="https://www.cloudflare.com/" target="_blank">CloudFlare</a> like services.</li>

<li><b>--without-http_scgi_module</b> - Disable SCGI module (normally used when running CGI scripts)</li>

<li><b>--without-http_uwsgi_module</b> - Disable UWSGI module (normally used when running CGI scripts)</li>

<li><b>--without-http_fastcgi_module</b> - Disable FastCGI module (normally used when running CGI scripts)</li>

<li><b>ngx_cache_purge</b> - This module to clear a single page from the caching proxy.   
Get it from <a target="_blank" href="https://github.com/FRiCKLE/ngx_cache_purge">https://github.com/FRiCKLE/ngx_cache_purge</a>.</li>

<li><b>nginx-ey-balancer</b> - Allows to load balance requests across multiple servers and limit the number of concurrent connections sent to the backend. Since version 1.2 of Nginx you need to use this forked version 
<a href="https://github.com/msva/nginx-ey-balancer.git">https://github.com/msva/nginx-ey-balancer.git </a>
if you plan on using a previous version you can get it from 
<a href="https://github.com/ry/nginx-ey-balancer">https://github.com/ry/nginx-ey-balancer</a>
. Either versions require a patch to be applied</li>

<li><b>ngx-hdfs</b> - https://github.com/chunhui2001/ngx-hdfs</li>
</ul>
    ]]>
    </c:sourceContent>



    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Dynamic nginx upstreams with Lua and Redis</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<a href="/blog/articles/linux/dynamic-nginx-upstreams-with-lua-and-redis.shtml">Dynamic nginx upstreams with Lua and Redis</a>
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:3em;">
    <c:title>Running the NGINX</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="" title="Add the user nginx to the system (Optional)" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ useradd -r nginx
$ usermod -s /sbin/nologin nginx
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="We need to setup the file /etc/init.d/nginx to run when system starts:" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
#!/bin/sh
#
# nginx - this script starts and stops the nginx daemin
#
# chkconfig:   - 85 15
# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \
#               proxy and IMAP/POP3 proxy server
# processname: nginx
# config:      /etc/nginx/nginx.conf
# pidfile:     /var/run/nginx.pid
# user:        nginx

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

nginx="/usr/sbin/nginx"
prog=$(basename $nginx)

NGINX_CONF_FILE="/etc/nginx/nginx.conf"

lockfile=/var/run/nginx.lock

start() {
    [ -x $nginx ] || exit 5
    [ -f $NGINX_CONF_FILE ] || exit 6
    echo -n $"Starting $prog: "
    daemon $nginx -c $NGINX_CONF_FILE
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc $prog -QUIT
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    configtest || return $?
    stop
    start
}

reload() {
    configtest || return $?
    echo -n $"Reloading $prog: "
    killproc $nginx -HUP
    RETVAL=$?
    echo
}

force_reload() {
    restart
}

configtest() {
  $nginx -t -c $NGINX_CONF_FILE
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
            ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}"
        exit 2
esac
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Optionally, you can obtain the source from:
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sudo wget -O /etc/init.d/nginx https://gist.github.com/sairam/5892520/raw/b8195a71e944d46271c8a49f2717f70bcd04bf1a/etc-init.d-nginx
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
OR
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sudo wget https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx -O /etc/init.d/nginx
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
This file should be made executable so that we can use it via 'service nginx ':
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ chmod +x /etc/init.d/nginx
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Set the service to start whenever the system boots:
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ update-rc.d -f nginx defaults
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Configure /etc/nginx/nginx.conf to set <b>types_hash_bucket_size</b> and <b>server_names_hash_bucket_size</b> which needs to be increased.
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
http {
    include       mime.types;
    default_type  application/octet-stream;
    # add the below 2 lines under http around line 20
    types_hash_bucket_size 64;
    server_names_hash_bucket_size 128;
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Start the server. This will start the VPS on port 80.
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ service nginx start
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:3em;">
    <c:title>First Lua site</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Create a simple plain text file named conf/nginx.conf with the following contents in it:
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
worker_processes  1;
error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    server {
        listen 8080;
        location / {
            default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>")
            ';
        }
    }
}
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Then we start the nginx server with our config file this way:
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
nginx -p `pwd`/ -c conf/nginx.conf
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
We can use curl to access our new web service that says HelloWorld:
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
curl http://localhost:8080/
    ]]>
    </c:sourceContent>


    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>






  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:1em;">
    <c:title>Compiling Third-Party Modules Into Nginx</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<a href="https://serversforhackers.com/compiling-third-party-modules-into-nginx">
  https://serversforhackers.com/compiling-third-party-modules-into-nginx</a>
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:1em;">
    <c:title>How to Fix 504 Gateway Timeout using Nginx</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<a href="https://www.scalescale.com/tips/nginx/504-gateway-time-out-using-nginx/">
  https://www.scalescale.com/tips/nginx/504-gateway-time-out-using-nginx/</a>
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:1em;">
    <c:title>Servers for Hackers</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<a href="https://book.serversforhackers.com/">
  https://book.serversforhackers.com/</a>
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>




  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:6em;">
    <c:title>Compiling PHP (with Php-fpm) For Nginx</c:title>
    <c:desc>
      <c:desc1> <![CDATA[ <div style="font-size:1.1em;">In this part we will be adding the php-fpm daemon. Php-fpm is the way to go if you want to run php inside nginx. So let’s get started.</div>]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="Compiling Php (with php-fpm)" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Download latest stable version of PHP from <a href="http://php.net/downloads.php">http://php.net/downloads.php</a>
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# remove current php5
$ sudo apt-get remove --purge php5
$ sudo aptitude search php5

$ wget http://ca.php.net/get/php-5.4.32.tar.gz/from/this/mirror -O php-5.4.32.tar.gz
$ tar -xzf php-5.4.32.tar.gz
$ cd php-5.4.32
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Install Dependencies" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sudo apt-get install build-essential autoconf libtool \
    libxml2 libxml2-dev openssl \
    libcurl4-openssl-dev  \
    libbz2-1.0 libbz2-dev libjpeg-dev libpng-dev libpng12-dev libfreetype6 libfreetype6-dev \
    libldap-2.4-2 libldap2-dev libmcrypt4 libmcrypt-dev libmysqlclient-dev \
    libxslt1.1 libxslt1-dev libxt-dev libpq-dev libicu-dev libxslt-dev

$ sudo apt-get install libxml2-dev libpcre3-dev libbz2-dev \
    libcurl4-openssl-dev libjpeg-dev libpng12-dev libxpm-dev \
    libfreetype6-dev libmysqlclient-dev libgd2-xpm-dev \
    libgmp-dev libsasl2-dev libmhash-dev unixodbc-dev \
    freetds-dev libpspell-dev libsnmp-dev libtidy-dev \
    libxslt1-dev libmcrypt-dev 

$ sudo apt-get install apache2 apache2-dev

# Install the necessary development headers for compiling PHP from source: 
$ sudo apt-get install aptitude
$ sudo aptitude build-dep php5 LD_LIBRARY_PATH=/usr/local/lib/ 
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="Configuration" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
I like to create a create a script called <b>configure.sh</b> which can be reused to recompile with updates later on. Note that you might have to change the location of <b>--with-libdir=lib/x86_64-linux-gnu</b> to something else depending on your version of linux.
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
#!/bin/bash
./configure \
        --with-config-file-path=/usr/local/php7/apache2 \
        --with-apxs2=/usr/bin/apxs2 \
        --enable-fpm \
        --enable-pdo \
        --enable-sockets \
        --enable-exif \
        --enable-soap \
        --enable-ftp \
        --enable-shmop \
        --enable-wddx \
        --enable-pcntl \
        --enable-soap \
        --enable-bcmath \
        --enable-mbstring \
        --enable-dba \
        --enable-gd-native-ttf \
        --enable-zip \
        --enable-calendar \
        --with-mysql \
        --with-mysqli \
        --enable-embedded-mysqli \
        --with-pgsql \
        --with-pdo-mysql \
        --with-pdo-sqlite \
        --with-iconv \
        --with-zlib \
        --with-bz2 \
        --with-gettext \
        --with-xmlrpc \
        --with-openssl \
        --with-mhash \
        --with-mcrypt \
        --with-xsl \
        --with-curl \
        --with-pcre-regex \
        --with-gd \
        --with-imap-ssl \
        --with-freetype-dir \
        --with-jpeg-dir \
        --with-png-dir \
        --with-ldap \
        --enable-intl \
        --with-pear \
        --with-fpm-user=www-data \
        --with-fpm-group=www-data \
        --with-config-file-scan-dir= \
        (change the location something else depending on your version of linux)
        --with-libdir=lib/x86_64-linux-gnu 



$ chmod +x ./configure.sh
$ ./configure.sh
 
$ make && sudo make install
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
PHP is now installed you can test by issuing the following command
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
/usr/local/bin/php -v
# Outputs: 
# PHP 5.4.4 (cli) (built: Jun 29 2012 17:00:35)
# Copyright (c) 1997-2012 The PHP Group
# Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologiesnginx version: nginx/1.2.1
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Lastly we copy the provided init.d scripts and php.ini
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sudo cp php.ini-production /usr/local/lib/php.ini
$ sudo ln -s /usr/local/lib/php.ini /etc (Optional)
 
$ sudo cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
$ sudo chmod +x /etc/init.d/php-fpm
$ sudo update-rc.d php-fpm defaults
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Apache's configuration file will now require some changes in order to correctly handle PHP files. Ubuntu's Apache configuration is a little strange and could be a whole discussion by itself. Essentially, you need to add the following lines:    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
LoadModule php5_module  modules/libphp5.so

AddHandler php7-script .php
AddType application/x-http-php  .php

DirectoryIndex  index.php  index.html
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
The first two can be stuck at the end of /etc/apache2/apache2.conf and the DirectoryIndex by checking <b>mods-available/dir.conf</b> and ensuring that index.php is in the list. Strictly speaking, you would create a file in mods-available and enable it with the a2enmod command but this is left as an exercise!
<br /><br />
Once this has been completed, you just need to restart Apache...   ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Before starting php-fpm you need to create the php-fpm configuration
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sudo cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
Then uncoment the pid and error_log lines in /usr/local/etc/php-fpm.conf.
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
We’re now ready to start php-fpm
    ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# start it
$ sudo /etc/init.d/php-fpm start
 
# check that it's running
$ sudo netstat -tlnp |grep php-fpm
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Fix an error" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<p style="color:red;">ERROR: Unable to globalize ‘/usr/local/NONE/etc/php-fpm.d/*.conf’ (ret=2) from /usr/local/etc/php-fpm.conf at line 125.
ERROR: failed to load configuration file ‘/usr/local/etc/php-fpm.conf’ </p>
<br />
<p style="color:blue;">解决方案:<br />
编辑 /usr/local/etc/php-fpm.conf 文件,引入 *.conf 部分, 修改为正确的路径 include=/usr/local/etc/php-fpm.d/*.conf</p>

<br />
<p style="color:green;">
$ cd /usr/local/etc/php-fpm.d
<br />
$ cp www.conf.default www.conf <br />
$ sudo service php-fpm start <br />
$ sudo netstat -tlnp |grep php-fpm</p>

<br />
<br />

<p style="color:red;">ERROR: Apache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe.  You need to recompile PHP.</p>
<br />
<p style="color:blue;">解决方案:<br />
1. Check if modules are disabled for Apache:<br />
$ apache2ctl -M | egrep "mpm|php"<br />
Syntax OK<br />
<br />
2. Enable php and mpm_prefork modules:<br />
$ ln -s /etc/apache2/mods-available/php5.conf /etc/apache2/mods-enabled/php5.conf<br />
$ ln -s /etc/apache2/mods-available/mpm_prefork.conf /etc/apache2/mods-enabled/mpm_prefork.conf<br />
$ ln -s /etc/apache2/mods-available/mpm_prefork.load /etc/apache2/mods-enabled/mpm_prefork.load<br />
<br />
3. Reload Apache configuration:<br />
$ service apache reload
</p>
    ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
That’s it we now have a working php installation.
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


</c:component>
