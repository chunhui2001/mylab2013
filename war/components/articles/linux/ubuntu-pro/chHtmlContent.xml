<?xml version="1.0" encoding="utf-8"?>
<c:component type="chHtmlContent" componentId="chHtmlContent_1" xmlns:c="http://com.snnmo.website">

  <c:content>
    <![CDATA[
        
        <h2 style="color:rgb(189, 21, 208);font-size:2.5em;">Utilities</h2>
        
        <h2 style="color:green;font-size:1.5em;">&diams; gnome-web-photo</h2>
        <div style="margin-bottom:2.5em;">
        <b style="color:rgb(211, 98, 49);">$ sudo apt-get install gnome-web-photo</b>
        </div>
        
        <h2 style="color:green;font-size:1.5em;">&diams; Install FreeTDS</h2>
        <div style="margin-bottom:2.5em;">
        The MS SQL extension is in the "php5-sybase" package.
        <br />
        <span>
        <b style="color:rgb(211, 98, 49);">
        $ sudo apt-get install freetds-common freetds-bin unixodbc php5-sybase
        </b>
        </span>
        <br />
        <br />
        <span>From: <b>https://davejamesmiller.com/blog/connecting-php-to-microsoft-sql-server-on-linux</b></span>
        
        </div>
        
        <h2 style="color:green;font-size:1.5em;">&diams; Enable SSH in Ubuntu 14.04 Trusty Tahr</h2>
        <div style="margin-bottom:2.5em;">
        <span><b style="color:rgb(211, 98, 49);">$ sudo apt-get install openssh-server<br />
        $ sudo ufw allow 22</b></span><br />
        <br />
        <span>Once installed, you can change the port, disable root login and do other changes by editing the config file:<br />
        <b style="color:rgb(211, 98, 49);">$ sudo vi /etc/ssh/sshd_config</b></span><br />
        <br />
        <span>restart:<br />
        <b style="color:rgb(211, 98, 49);">$ sudo /etc/init.d/ssh restart</b></span>
        </div>


<h2 style="color:green;font-size:1.5em;">&diams; Install RabbitVCS Svn, Git Client On Ubuntu 12.10/12.04/11.10/11.04</h2>
<div style="margin-bottom:2.5em;">
<a href="http://www.xuebuyuan.com/62300.html" target="_blank">http://linuxdrops.com/install-rabbitvcs-svn-git-client-on-ubuntu-12-1012-0411-1011-04/#</a>
</div>

<br />
<br />
<br />
<br />



<h2 style="color:rgb(189, 21, 208);font-size:2.5em;">LEMP for Ubuntu</h2>

<h2 style="color:green;font-size:1.5em;">&diams; Install MySQL</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ apt-get install mysql-server php5-mysql
<br />
$ mysql_install_db <br />
$ mysql_secure_installation</b>
</div>

<h2 style="color:green;font-size:1.5em;">&diams; Config MySQL</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">...</b>
</div>




<br />
<br />
<br />





<h2 style="color:green;font-size:1.5em;">&diams; Install Nginx</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ apt-get install lsb-core <br />
$ echo "deb http://ppa.launchpad.net/nginx/stable/ubuntu $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/nginx-stable.list <br />
$ apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C300EE8C <br />
$ apt-get update <br />
$ apt-get install nginx
<br />
<br />
$ service nginx start <br />
$ ifconfig eth0 | grep inet | awk '{ print $2 }'
</b>
</div>




<br />
<br />
<br />





<h2 style="color:green;font-size:1.5em;">&diams; Install php5-fpm</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ apt-get install php5-fpm</b>
</div>


<h2 style="color:green;font-size:1.5em;">&diams; Config PHP for Nginx</h2>
<div style="margin-bottom:2.5em;">
<span><b style="color:rgb(211, 98, 49);">$ vi /etc/php5/fpm/php.ini</b></span>
<br />
<br />
<span>
Find the line, cgi.fix_pathinfo=1, and change the 1 to 0. <br />
<b style="color:rgb(211, 98, 49);">cgi.fix_pathinfo=0</b>
<br />
<br />
</span>
<span style="color:gray;">
If this number is kept as 1, the php interpreter will do its best to process the file that is as near to the requested file as possible. This is a possible security risk. If this number is set to 0, conversely, the interpreter will only process the exact file path—a much safer alternative. Save and Exit. We need to make another small change in the php5-fpm configuration.Open up www.conf:
</span>
<br />
<br />
<span>
<b style="color:rgb(211, 98, 49);">$ vi /etc/php5/fpm/pool.d/www.conf</b>
<br />
<br />
Find the line, listen = 127.0.0.1:9000, and change the 127.0.0.1:9000 to /var/run/php5-fpm.sock.
<br />
<b style="color:rgb(211, 98, 49);">listen = /var/run/php5-fpm.sock</b>
</span>

</div>




<br />
<br />
<br />





<h2 style="color:green;font-size:1.5em;">&diams; Config Nginx</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ vi /etc/nginx/sites-available/default</b>
<br />
<pre style="color:gray;background-color:rgb(236, 236, 236);padding:1em;margin:.3em 0;">
[...]
server {
    listen   80;

    root /usr/share/nginx/www;
    index index.php index.html index.htm;

    server_name example.com;

    location / {
        try_files $uri $uri/ /index.html;
    }

    error_page 404 /404.html;

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/www;
    }

    # pass the PHP scripts to FastCGI server listening on the php-fpm socket
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}
[...]
</pre>
<br />
<p>
    <span>Here are the details of the changes:</span> <br />
    <ul style="margin-left:2em;list-style:decimal;">
        <li>Add index.php to the index line.</li>
        <li>Change the server_name from local host to your domain name or IP address (replace the example.com in the configuration)</li>
        <li>Change the correct lines in “location ~ \.php$ {“ section</li>
    </ul>
</p>
</div>




<br />
<br />
<br />





<h2 style="color:green;font-size:1.5em;">&diams; Create a php info page</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">....</b>
</div>




<h2 style="color:green;font-size:1.5em;">&diams; restart service </h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ service nginx restart</b>
<b style="color:rgb(211, 98, 49);">$ service php5-fpm restart</b>
</div>

<br />
<br />
<br />


<h2 style="color:rgb(189, 21, 208);font-size:2.5em;">Set Up Apache Virtual Hosts on Ubuntu 14.04 LTS</h2>

<h2 style="color:green;font-size:1.5em;">&diams; Install Apache2</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ sudo apt-get update <br />
$ sudo apt-get install apache2 php5 libapache2-mod-php5 </b>
</div>

<h2 style="color:green;font-size:1.5em;">&diams; Create the Directory Structure</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ sudo mkdir -p /var/www/example.com/public_html <br />
$ sudo mkdir -p /var/www/test.com/public_html </b>
</div>

<h2 style="color:green;font-size:1.5em;">&diams; Grant Permissions</h2>
<div style="margin-bottom:2.5em;">
<span>Now we have the directory structure for our files, but they are owned by our root user.
If we want our regular user to be able to modify files in our web directories,
we can change the ownership by doing this:</span>
<br />
<b style="color:rgb(211, 98, 49);">$ sudo chown -R $USER:$USER /var/www/example.com/public_html <br />
$ sudo chown -R $USER:$USER /var/www/test.com/public_html </b>

<br />
<br />

<span>We should also modify our permissions a little bit to ensure that read access is permitted to the general web directory and all of the files and folders it contains so that pages can be served correctly:</span>
<br />
<b style="color:rgb(211, 98, 49);">$ sudo chmod -R 755 /var/www </b>
<br />
<br />
<span>Your web server should now have the permissions it needs to serve content, and your user should be able to create content within the necessary folders.</span>
</div>

<h2 style="color:green;font-size:1.5em;">&diams; Create Demo Pages for Each Virtual Host</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ vi /var/www/example.com/public_html/index.html <br />
$ vi /var/www/test.com/public_html/index.html </b>
</div>

<h2 style="color:green;font-size:1.5em;">&diams; Create New Virtual Host Files</h2>
<div style="margin-bottom:2.5em;">
<span>Virtual host files are the files that specify the actual configuration of our virtual hosts and dictate how the Apache web server will respond to various domain requests.
<br />
<br />
Apache comes with a default virtual host file called 000-default.conf that we can use as a jumping off point. We are going to copy it over to create a virtual host file for each of our domains.
<br />
<br />
We will start with one domain, configure it, copy it for our second domain, and then make the few further adjustments needed. The default Ubuntu configuration requires that each virtual host file end in .conf.
</span>
<br />
<br />
<b style="color:rgb(211, 98, 49);">
$ sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf <br />
$ sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/test.com.conf <br />
<br />
$ vi /etc/apache2/sites-available/example.com.conf</b>
<br />
<br />
Modify the virtualhost file and should look like this:
<br />
<pre style="color:gray;background-color:rgb(236, 236, 236);padding:1em;margin:.3em 0;">
&lt;VirtualHost *:80&gt;
    ServerAdmin admin@example.com
    ServerName <b style="color:black;">example.com</b>
    ServerAlias <b style="color:black;">www.example.com</b>
    DocumentRoot <b style="color:black;">/var/www/example.com/public_html</b>
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
&lt;/VirtualHost&gt;
</pre>
<br />
$ vi /etc/apache2/sites-available/test.com.conf</b>
<br />
<br />
Modify the virtualhost file and should look like this:
<br />
<pre style="color:gray;background-color:rgb(236, 236, 236);padding:1em;margin:.3em 0;">
&lt;VirtualHost *:80&gt;
ServerAdmin admin@example.com
ServerName <b style="color:black;">test.com</b>
ServerAlias <b style="color:black;">www.test.com</b>
DocumentRoot <b style="color:black;">/var/www/test.com/public_html</b>
ErrorLog ${APACHE_LOG_DIR}/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined
&lt;/VirtualHost&gt;
</pre>
</div>



<h2 style="color:green;font-size:1.5em;">&diams; Enable the New Virtual Host Files and restart Apache2</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ sudo a2ensite example.com.conf <br />
$ sudo a2ensite test.com.conf <br />
<br />
$ sudo service apache2 restart</b>
</div>



<h2 style="color:green;font-size:1.5em;">&diams; Set Up Local Hosts File (Optional)</h2>
<div style="margin-bottom:2.5em;">
<b style="color:rgb(211, 98, 49);">$ vi /etc/hosts<br />
<br />
....</b>
</div>


]]>
    </c:content>
</c:component>










