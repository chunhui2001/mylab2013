<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[
   "GnuPG uses public-key cryptography so that users may communicate securely. In a public-key system, each user has a pair of keys consisting of a private key and a public key. A user's private key is kept secret; it need never be revealed. The public key may be given to anyone with whom the user wants to communicate." From 
       <a target="_blank" href="https://www.gnupg.org/gph/en/manual.html">The GNU Privacy Handbook</a>
]]>
  </c:abstract>

  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>GnuPG, GPG, PGP and OpenPGP</c:title>
    <c:desc>
      <c:desc1> <![CDATA[<div style="font-size:1.1em;line-height:1.5em;">The terms "OpenPGP", "PGP", and "GnuPG / GPG" are often used interchangeably. This is a common mistake, since they are distinctly different.</div>]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="OpenPGP" id="sourceContent1"
                     titleStyle="padding-left:0;color:black;font-size:1.8em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
      <![CDATA[
      <b>OpenPGP</b> is technically a proposed standard, although it is widely used. OpenPGP is not a program, and shouldn't be referred to as such.
      <br />
      <br />
      PGP and GnuPG are computer programs that implement the OpenPGP standard.
    ]]>
    </c:sourceContent>


    <c:sourceContent type="html" title="PGP" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.8em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
      <![CDATA[
      <b>PGP</b> is an acronym for Pretty Good Privacy, a computer program which provides cryptographic privacy and authentication. For more information, see this <a target="_blank" href="http://en.wikipedia.org/wiki/GNU_Privacy_Guard">Wikipedia</a> article.
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="GnuPG" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.8em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
      <![CDATA[
      <b>GnuPG</b> is an acronym for Gnu Privacy Guard, another computer program which provides cryptographic privacy and authentication. For further information on GnuPG, see this <a target="_blank" href="http://en.wikipedia.org/wiki/GNU_Privacy_Guard">Wikipedia</a> article.
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


<c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>Generate a GPG key</c:title>
    <c:desc>
      <c:desc1> <![CDATA[<div style="font-size:1.1em;line-height:1.5em;">You might know this situation: you want to generate a GPG or SSL key, and during that operation, your system tells you that no more random bytes are available and that it needs to collect more entropy, and you are stuck. This short guide tells you how to solve this problem with the package <b>rng-tools</b> on Debian Lenny.</div>]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="Generate a GPG key" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.8em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
      <![CDATA[
      <pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --gen-key</pre>
      <div>If you are unlucky, the command might stop in the middle with a message like this:</div>
      <pre style="margin:1em 0;background-color:#F9E1E1;font-size:.8em;color:red;padding:.5em;">We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
++++++++++..+++++.+++++++++++++++.++++++++++...+++++++++++++++...++++++
+++++++++++++++++++++++++++++.+++++..+++++.+++++.+++++++++++++++++++++++++&gt;.
++++++++++>+++++...........................................................+++++

<b>Not enough random bytes available. Please do some other work to give
the OS a chance to collect more entropy! (Need 284 more bytes)</b></pre>

<div>So we have to increase entropy somehow. This can be done with <b>rng-tools</b>, a package to use a hardware true number generator (TRNG). Don't worry, you don't need any extra hardware, we will use /dev/urandom as our true number generator.</div>
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Installing And Configuring rng-tools" id="sourceContent1"
                     style="margin-top:3em;"
                     titleStyle="padding-left:0;color:black;font-size:1.8em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
      <![CDATA[
<div style="margin-top:1.5em;">The rng-tools package can be installed as follows:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">apt-get install rng-tools</pre>

<div style="margin-top:1.5em;">Next open /etc/default/rng-tools...</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">vi /etc/default/rng-tools</pre>


<div style="margin-top:1.5em;">add the line HRNGDEVICE=/dev/urandom:</div>
    ]]>
    </c:sourceContent>

    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:black;font-size:1.8em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
      <![CDATA[
# Configuration for the rng-tools initscript
# $Id: rng-tools.default,v 1.1.2.5 2008-06-10 19:51:37 hmh Exp $

# This is a POSIX shell fragment

# Set to the input source for random data, leave undefined
# for the initscript to attempt auto-detection.  Set to /dev/null
# for the viapadlock driver.
#HRNGDEVICE=/dev/hwrng
#HRNGDEVICE=/dev/null
HRNGDEVICE=/dev/urandom

# Additional options to send to rngd. See the rngd(8) manpage for
# more information.  Do not specify -r/--rng-device here, use
# HRNGDEVICE for that instead.
#RNGDOPTIONS="--hrng=intelfwh --fill-watermark=90% --feed-interval=1"
#RNGDOPTIONS="--hrng=viakernel --fill-watermark=90% --feed-interval=1"
#RNGDOPTIONS="--hrng=viapadlock --fill-watermark=90% --feed-interval=1"
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="padding-left:0;color:black;font-size:1.8em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
      <![CDATA[
<div style="margin-top:1.5em;">Now start the rng-tools daemon:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">/etc/init.d/rng-tools start</pre>

<div style="margin-top:1.5em;">That's it! Now try to generate your key again, e.g.</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --gen-key</pre>

<div style="margin-top:1.5em;">This will take you through a few questions that will configure your keys.</div>

<ul style="list-style-type:disc;margin:1em 0;margin-left:2em;">
<li>Please select what kind of key you want: (1) RSA and RSA (default)</li>
<li>What keysize do you want? 4096</li>
<li>Key is valid for? 0</li>
<li>Is this correct? y</li>
<li>Real name: your real name here</li>
<li>Email address: your_email@address.com</li>
<li>Comment: Optional comment that will be visible in your signature</li>
<li>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O</li>
<li>Enter passphrase: Enter a secure passphrase here (upper & lower case, digits, symbols)</li>
</ul>

<div>At this point, it will need to generate the keys using entropy. This is basically a term to describe the amount of unpredictability that exists in a system. GPG uses this entropy to generate a random set of keys.
<br /><br />
It is best to open a new terminal and ssh into the VPS while this runs. Install some software, do some work, and just use the machine as much as possible to let it generate the needed entropy.
<br /><br />
This process may take a long time, depending on how active you can make your system. There is an article here about how to generate additional entropy with haveged, which may be of use.</div>
    ]]>
    </c:sourceContent>



    <c:sourceContent type="html" title="How To Import Other Users' Public Keys" id="sourceContent1"
                     style="margin-top:3em;"
                     titleStyle="padding-left:0;color:black;font-size:1.8em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
      <![CDATA[
<div style="margin-top:1em;">GPG would be pretty useless if you could not accept other public keys from people you wished to communicate with.
<br />
<br />
You can import someone's public key in a variety of ways. If you've obtained a public key from someone in a text file, GPG can import it with the following command:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --import <b>name_of_pub_key_file</b></pre>

<div style="margin-top:1.5em;">There is also the possibility that the person you are wishing to communicate with has uploaded their key to a public key server. These key servers are used to house people's public keys from all over the world.
<br /><br />
A popular key server that syncs its information with a variety of other servers is the MIT public key server. You can search for people by their name or email address by going here in your web browser:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">http://pgp.mit.edu/</pre>

<div style="margin-top:1.5em;">You can also search the key server from within GPG by typing the following:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --keyserver pgp.mit.edu  --search-keys <b>search_parameters</b></pre>
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>
</c:component>
