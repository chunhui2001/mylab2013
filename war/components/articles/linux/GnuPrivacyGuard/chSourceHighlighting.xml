<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[
   "GnuPG uses public-key cryptography so that users may communicate securely. In a public-key system, each user has a pair of keys consisting of a private key and a public key. A user's private key is kept secret; it need never be revealed. The public key may be given to anyone with whom the user wants to communicate." From 
       <a target="_blank" href="https://www.gnupg.org/gph/en/manual.html">The GNU Privacy Handbook</a>
]]>
  </c:abstract>

  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>GnuPG, GPG, PGP and OpenPGP</c:title>
    <c:desc>
      <c:desc1> <![CDATA[<div style="font-size:1.1em;line-height:1.5em;">The terms "OpenPGP", "PGP", and "GnuPG / GPG" are often used interchangeably. This is a common mistake, since they are distinctly different.</div>]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="OpenPGP" id="sourceContent1"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
      <b>OpenPGP</b> is technically a proposed standard, although it is widely used. OpenPGP is not a program, and shouldn't be referred to as such.
      <br />
      <br />
      PGP and GnuPG are computer programs that implement the OpenPGP standard.
    ]]>
    </c:sourceContent>


    <c:sourceContent type="html" title="PGP" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
      <b>PGP</b> is an acronym for Pretty Good Privacy, a computer program which provides cryptographic privacy and authentication. For more information, see this <a target="_blank" href="http://en.wikipedia.org/wiki/GNU_Privacy_Guard">Wikipedia</a> article.
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="GnuPG" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
      <b>GnuPG</b> is an acronym for Gnu Privacy Guard, another computer program which provides cryptographic privacy and authentication. For further information on GnuPG, see this <a target="_blank" href="http://en.wikipedia.org/wiki/GNU_Privacy_Guard">Wikipedia</a> article.
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


<c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Generate a GPG key</c:title>
    <c:desc>
      <c:desc1> <![CDATA[<div style="font-size:1.1em;line-height:1.5em;">You might know this situation: you want to generate a GPG or SSL key, and during that operation, your system tells you that no more random bytes are available and that it needs to collect more entropy, and you are stuck. This short guide tells you how to solve this problem with the package <b>rng-tools</b> on Debian Lenny.</div>]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="Generate a GPG key" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
      <pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --gen-key</pre>
      <div>If you are unlucky, the command might stop in the middle with a message like this:</div>
      <pre style="margin:1em 0;background-color:#F9E1E1;font-size:.8em;color:red;padding:.5em;">We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
++++++++++..+++++.+++++++++++++++.++++++++++...+++++++++++++++...++++++
+++++++++++++++++++++++++++++.+++++..+++++.+++++.+++++++++++++++++++++++++&gt;.
++++++++++>+++++...........................................................+++++

<b>Not enough random bytes available. Please do some other work to give
the OS a chance to collect more entropy! (Need 284 more bytes)</b></pre>

<div>So we have to increase entropy somehow. This can be done with <b>rng-tools</b>, a package to use a hardware true number generator (TRNG). Don't worry, you don't need any extra hardware, we will use /dev/urandom as our true number generator.</div>
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Installing And Configuring rng-tools" id="sourceContent1"
                     style="margin-top:3em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<div style="margin-top:1.5em;">The rng-tools package can be installed as follows:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">apt-get install rng-tools</pre>

<div style="margin-top:1.5em;">Next open /etc/default/rng-tools...</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">vi /etc/default/rng-tools</pre>


<div style="margin-top:1.5em;">add the line HRNGDEVICE=/dev/urandom:</div>
    ]]>
    </c:sourceContent>

    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# Configuration for the rng-tools initscript
# $Id: rng-tools.default,v 1.1.2.5 2008-06-10 19:51:37 hmh Exp $

# This is a POSIX shell fragment

# Set to the input source for random data, leave undefined
# for the initscript to attempt auto-detection.  Set to /dev/null
# for the viapadlock driver.
#HRNGDEVICE=/dev/hwrng
#HRNGDEVICE=/dev/null
HRNGDEVICE=/dev/urandom

# Additional options to send to rngd. See the rngd(8) manpage for
# more information.  Do not specify -r/--rng-device here, use
# HRNGDEVICE for that instead.
#RNGDOPTIONS="--hrng=intelfwh --fill-watermark=90% --feed-interval=1"
#RNGDOPTIONS="--hrng=viakernel --fill-watermark=90% --feed-interval=1"
#RNGDOPTIONS="--hrng=viapadlock --fill-watermark=90% --feed-interval=1"
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<div style="margin-top:1.5em;">Now start the rng-tools daemon:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">/etc/init.d/rng-tools start</pre>

<div style="margin-top:1.5em;">That's it! Now try to generate your key again, e.g.</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --gen-key</pre>

<div style="margin-top:1.5em;">This will take you through a few questions that will configure your keys.</div>

<ul style="list-style-type:disc;margin:1em 0;margin-left:2em;">
<li>Please select what kind of key you want: (1) RSA and RSA (default)</li>
<li>What keysize do you want? 4096</li>
<li>Key is valid for? 0</li>
<li>Is this correct? y</li>
<li>Real name: your real name here</li>
<li>Email address: your_email@address.com</li>
<li>Comment: Optional comment that will be visible in your signature</li>
<li>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O</li>
<li>Enter passphrase: Enter a secure passphrase here (upper & lower case, digits, symbols)</li>
</ul>

<div>At this point, it will need to generate the keys using entropy. This is basically a term to describe the amount of unpredictability that exists in a system. GPG uses this entropy to generate a random set of keys.
<br /><br />
It is best to open a new terminal and ssh into the VPS while this runs. Install some software, do some work, and just use the machine as much as possible to let it generate the needed entropy.
<br /><br />
This process may take a long time, depending on how active you can make your system. There is an article here about how to generate additional entropy with haveged, which may be of use.</div>
    ]]>
    </c:sourceContent>



    <c:sourceContent type="html" title="How To Import Other Users' Public Keys" id="sourceContent1"
                     style="margin-top:3em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<div style="margin-top:1em;">GPG would be pretty useless if you could not accept other public keys from people you wished to communicate with.
<br />
<br />
You can import someone's public key in a variety of ways. If you've obtained a public key from someone in a text file, GPG can import it with the following command:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --import <b>name_of_pub_key_file</b></pre>

<div style="margin-top:1.5em;">There is also the possibility that the person you are wishing to communicate with has uploaded their key to a public key server. These key servers are used to house people's public keys from all over the world.
<br /><br />
A popular key server that syncs its information with a variety of other servers is the MIT public key server. You can search for people by their name or email address by going here in your web browser:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">http://pgp.mit.edu/</pre>

<div style="margin-top:1.5em;">You can also search the key server from within GPG by typing the following:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --keyserver pgp.mit.edu  --search-keys <b>search_parameters</b></pre>
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>





<c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>How To Verify and Sign Keys</c:title>
    <c:desc>
      <c:desc1> <![CDATA[<div style="font-size:1.1em;line-height:1.5em;">While you can freely distribute your generated public key file and people can use this to contact you in an encrypted way, there is still an issue of trust in the initial public key transmission.</div>]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="Verify the Other Person's Identity" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[      
      <div>How do you know that the person giving you the public key is who they say they are? In some cases, this may be simple. You may be sitting right next to the person with your laptops both open and exchanging keys. This should be a pretty secure way of identifying that you are receiving the correct, legitimate key.
<br />
<br />
But there are many other circumstances where such personal contact is not possible. You may not know the other party personally, or you may be separated by physical distance. If you never want to communicate over insecure channels, verification of the public key could be problematic.
<br />
<br />
Luckily, instead of verifying the entire public keys of both parties, you can simply compare the "fingerprint" derived from these keys. This will give you a reasonable assurance that you both are using the same public key information.
<br />
<br />
You can get the fingerprint of a public key by typing:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --fingerprint <b>your_email@address.com</b></pre>

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">pub   4096R/311B1F84 2013-10-04
      Key fingerprint = <b>CB9E C70F 2421 AF06 7D72  F980 8287 6A15 311B 1F84</b>
uid                  Test User <test.user@address.com>
sub   4096R/8822A56A 2013-10-04</pre>

<div>This will produce a much more manageable string of numbers to compare. You can compare this string with the person themselves, or someone else who has access to that person.</div>
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Sign Their Key" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[      
      <div>Signing a key tells your software that you trust the key that you have been provided with and that you have verified that it is associated with the person in question.
        <br />
        <br />
      To sign a key that you've imported, simply type:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --sign-key <b>email@example.com</b></pre>

<div>After you've signed the key, it means you verify that you trust the person is who he/she claims to be. This can help other people decide whether to trust that person too. If someone trusts you, and they see that you've signed this person's key, they may be more likely to trust their identity too.
<br />
<br />
You should allow the person whose key you are signing the advantages of your trusted relationship by sending them back the signed key. You can do this by typing:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --export --armor email@example.com</pre>

<div>You'll have to type in your passphrase again. Afterwards, their public key, signed by you, will be spit out on the screen. Send them this, so that they can benefit from gaining your "stamp of approval" when interacting with others.
<br />
<br />
When they receive this new, signed key, they can import it, adding on the signing information you've generated, into their GPG database. They can do this by typing:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --import file_name</pre>
    ]]>
    </c:sourceContent>

        <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



<c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>How To Make Your Public Key Highly Available</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[    
<div>
      There is not really anything malicious that can happen if unknown people have your public key.
<br />
<br />
Because of this, it may be beneficial to make your public key easily available. People can then easily find your information to send you secure messages, from the very first communication.
<br />
<br />
You can send anyone your public key by requesting it from the GPG system:  
</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --armor --export your_email@address.com</pre>

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.11 (GNU/Linux)

mQINBFJPCuABEACiog/sInjg0O2SqgmG1T8n9FroSTdN74uGsRMHHAOuAmGLsTse
9oxeLQpN+r75Ko39RVE88dRcW710fPY0+fjSXBKhpN+raRMUKJp4AX9BJd00YA/4
EpD+8cDK4DuLlLdn1x0q41VUsznXrnMpQedRmAL9f9bL6pbLTJhaKeorTokTvdn6
5VT3pb2o+jr6NETaUxd99ZG/osPar9tNThVLIIzG1nDabcTFbMB+w7wOJuhXyTLQ
JBU9xmavTM71PfV6Pkh4j1pfWImXc1D8dS+jcvKeXInBfm2XZsfOCesk12YnK3Nc
u1Xe1lxzSt7Cegum4S/YuxmYoh462oGZ7FA4Cr2lvAPVpO9zmgQ8JITXiqYg2wB3
. . .</pre>
<div>You can then copy and paste this or send this in an appropriate medium.
<br />
<br />
If you want to publish your key to a key server, you can do it manually through the forms available on most of the server sites.
<br />
<br />
Another option is to do this through the GPG interface.
<br />
<br />
Look up your key ID by typing:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --list-keys <b>your_email@address.com</b></pre>

<div>The highlighted portion is your key ID. It is a short way to reference the key to the internal software.</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">pub   4096R/<b style="color:red;">311B1F84</b> 2013-10-04
uid                  Test User <test.user@address.com>
sub   4096R/8822A56A 2013-10-04</pre>

<div>To upload your key to a certain key server, you can then use this syntax:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --send-keys --keyserver pgp.mit.edu <b>key_id</b></pre>
       ]]>
    </c:sourceContent>

        <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>




<c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Encrypt and Decrypt Messages with GPG</c:title>
    <c:desc>
      <c:desc1> <![CDATA[<div style="font-size:1.1em;">You can easily encrypt and decrypt messages after you have configured your keys with the other party.</div>]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="Encrypt Messages" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[    
<div>You can encrypt messages using the "--encrypt" flag for GPG. The basic syntax would be:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --encrypt --sign --armor -r <b>person@email.com</b> name_of_file</pre>

<div>The parameters basically encrypt the email, sign it with your private key to guarantee that it is coming from you, and generates the message in a text format instead of raw bytes.
<br />
<br />
You should also include a second "-r" recipient with your own email address if you want to be able to read the message ever. This is because the message will be encrypted with each person's public key, and will only be able to be decrypted with the associated private key.
<br />
<br />
So if it was only encrypted with the other party's public key, you would not be able to view the message again, unless you somehow obtained their private key. Adding yourself as a second recipient encrypts the message two separate times, one for each recipient.</div>
       ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Decrypt Messages" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[    
<div>When you receive a message, simply call GPG on the message file:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg file_name</pre>

<div>The software will prompt you as necessary.
<br />
<br />
If you have the message as a raw text stream, you can copy and paste it after you just typing gpg without any arguments. You can press "CTRL-D" to signify the end of the message and GPG will decrypt it for you.</div>
       ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Key Maintenance" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[    
<div>There are a number of procedures that you may need to use on a regular basis to manage your key database.
<br />
<br />
To list your available GPG keys that you have from other people, you can issue this command:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --list-keys</pre>

<div>Your key information can become outdated if you are relying on information pulled from public key servers. You do not want to be relying on revoked keys, because that would mean you are trusting potentially compromised keys.
<br />
<br />
You can update the key information by issuing:</div>

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --refresh-keys</pre>

<div>This will fetch new information from the key servers.

You can pull information from a specific key server by using:</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">gpg --keyserver <b>key_server</b> --refresh-keys</pre>
       ]]>
    </c:sourceContent>

        <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>






<c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Export and import a set of GPG keys from one computer to another</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="Export The GPG Key" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[    

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ gpg --list-keys</pre>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">pub 1024D/<b>ABCDFE01</b> 2008-04-13
uid firstname lastname (description) 
sub 2048g/DEFABC01 2008-04-13</pre>

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ gpg --output mygpgkey_pub.gpg --armor --export ABCDFE01
$ gpg --output mygpgkey_sec.gpg --armor --export-secret-key ABCDFE01</pre>

<div><br />Copy thos files over to the remote host:</div>

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ scp mygpgkey_pub.gpg mygpgkey_sec.gpg user@remotehost:~/</pre>
       ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Import The GPG Key" id="sourceContent1"
                     style="margin-top:2em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[    

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ ssh user@remotehost</pre>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">user@remotehost:~$ gpg --import ~/mygpgkey_pub.gpg
user@remotehost:~$ gpg --allow-secret-key-import --import ~/mygpgkey_sec.gpg</pre>

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ gpg --list-keys</pre>

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">pub 1024D/ABCDFE01 2008-04-13
uid firstname lastname (description) 
sub 2048g/DEFABC01 2008-04-13</pre>

<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ rm ~/mygpgkey_sec.gpg ~/mygpgkey_pub.gpg</pre>
       ]]>
    </c:sourceContent>

        <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


<c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Signing Emails in Mail</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[    
<div>When you installed the GPGTools a plugin for OS X mail should have been installed as well. When you now go to your Mail settings, a new preference panel for GPGMail should have been added. Additionally, when you create a new email which you're sending from the email, some new options are available.</div>

<img style="margin: .5em 0;" src="https://driesvints.com/img/using-gpg-keys-to-sign-off-git-commits-and-emails-image-1.png" />

<div><br />The new options allow you to encrypt and sign your email message. Encrypting the email will make sure it's securely transferred from you to the recipient. You can read more about encrypting emails <a href="http://support.gpgtools.org/kb/how-to/your-first-encrypted-mail">here</a>.
<br />
<br />
Signing off emails will verify you as the actual sender for the email message.</div>

<img style="margin: .5em 0;" src="https://driesvints.com/img/using-gpg-keys-to-sign-off-git-commits-and-emails-image-2.png" />

<br />
<br />
<a target="_blank" href="https://gpgtools.org/gpgmail/index.html">Image courtesy of GPGTools</a>
       ]]>
    </c:sourceContent>

        <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


<c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Signing Commits in Git</c:title>
    <c:desc>
      <c:desc1> <![CDATA[<div style="font-size:1em;font-family:monospace;line-height:1.8em;">In more recent versions of Git (v1.7.9 and above), you can now also sign individual commits. If you’re interested in signing commits directly instead of just the tags, all you need to do is add a -S to your git commit command.</div>]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[   
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ git commit -a -S -m 'signed commit'</pre>

<div><br />To see and verify these signatures, there is also a <b>--show-signature</b> option to <b>git log</b>.</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ git log --show-signature -1</pre>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">commit 5c3386cf54bba0a33a32da706aa52bc0155503c2
gpg: Signature made Wed Jun  4 19:49:17 2014 PDT using RSA key ID 0A46826A
gpg: Good signature from "Scott Chacon (Git signing key) <schacon@gmail.com>"
Author: Scott Chacon <schacon@gmail.com>
Date:   Wed Jun 4 19:49:17 2014 -0700

    signed commit</pre>


<div><br />Additionally, you can configure <b>git log</b> to check any signatures it finds and list them in it’s output with the <b>%G?</b> format.</div>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">$ git log --pretty="format:%h %G? %aN  %s"</pre>
<pre style="background-color:#F9F9F9;padding:.5em .8em;border:solid 1px #E2E2E2;margin:.8em 0;">5c3386c G Scott Chacon  signed commit
ca82a6d N Scott Chacon  changed the version number
085bb3b N Scott Chacon  removed unnecessary test code
a11bef0 N Scott Chacon  first commit</pre>

<div><br />
<b>Everyone Must Sign</b>
<br />Signing tags and commits is great, but if you decide to use this in your normal workflow, you’ll have to make sure that everyone on your team understands how to do so. If you don’t, you’ll end up spending a lot of time helping people figure out how to rewrite their commits with signed versions. Make sure you understand GPG and the benefits of signing things before adopting this as part of your standard workflow.

<br />
<br />
One article about signing commits may be you like: <a target="_blank" href="http://www.oschina.net/translate/git-horror-story">http://www.oschina.net/translate/git-horror-story</a></div>
       ]]>
    </c:sourceContent>

        <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>




<c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;">
    <c:title>Conclusion</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[    
Using GPG correctly can help you secure your communications with different people. This is extremely helpful, especially when dealing with sensitive information, but also when dealing with regular, every day messaging.
<br /><br />
Because of the way that certain encrypted communications can be flagged by monitoring programs, it is recommended to use encryption for everything, not just "secret" data. That will make it more difficult for people to know when you are sending important data or just sending a friendly hello.
<br /><br />
GPG encryption is only useful when both parties use good security practices and are vigilant about their other security practices. Educate those who you communicate regularly with about the importance of these practices if you want to have the possibility of cryptographically secure communication.
       ]]>
    </c:sourceContent>

       <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>
</c:component>
