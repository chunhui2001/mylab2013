<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[After spending some time playing around on Single-Node pseudo-distributed cluster, it's time to get into real world hadoop.
    Depending on what works best – Its important to note that there are multiple ways to achieve this and I am going to cover how to setup multi-node hadoop cluster on Amazon EC2. 
    We are going to setup 4 node hadoop cluster as below.
    <br />
    <br />
    <ul style="padding-left:1.5em;list-style:disc;">
        <li>NameNode (Master)</li>
        <li>SecondaryNameNode</li>
        <li>DataNode (Slave1)</li>
        <li>DataNode (Slave2)</li>
    </ul>]]>
  </c:abstract>
  

  <c:entry style="margin-top:2em;">
    <c:title>Requirements</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <ul style="padding-left:1.5em;list-style:disc;">
          <li> Amazon AWS Account</li>
          <li> PuTTy Windows Client (to connect to Amazon EC2 instance)</li>
          <li> PuTTYgen (to generate private key – this will be used in putty to connect to EC2 instance)</li>
          <li> WinSCP (secury copy)</li>
      </ul>
    ]]>
    </c:sourceContent>
    


    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>

  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.5em;">
    <c:title>Setting up Amazon EC2 Instances</c:title>
    <c:desc>
      <c:desc1> <![CDATA[With 4 node clusters and minimum volume size of 8GB there would be an average $2 of charge per day with all 4 running instances. 
      You can stop the instance anytime to avoid the charge, but you will loose the public IP and host and restarting the instance will create new ones. 
      You can also terminate your Amazon EC2 instance anytime and by default it will delete your instance upon termination, so just be careful what you are doing.]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="Get Amazon AWS Account" id="sourceContent1"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          If you do not already have a account, please create a new one. I already have AWS account and going to skip the sign-up process. Amazon EC2 comes with eligible free-tier instances.
      </span>
      <img src="//c2.staticflickr.com/6/5585/14636640858_c63fc59fba.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>
    
    <c:sourceContent type="html" title="Launch Instance" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          Once you have signed up for Amazon account. Login to Amazon Web Services, click on My Account and navigate to Amazon EC2 Console
      </span>
      <img src="//c1.staticflickr.com/3/2908/14821028494_736c8cc3f7_z.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Select AMI" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          I am picking Ubuntu Server 14.04 LTS 64-bit OS
      </span>
      <img src="//c2.staticflickr.com/4/3884/14636773318_19249991ed_z.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Select Instance Type" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          Select the micro instance
      </span>
      <img src="//c2.staticflickr.com/4/3848/14858092935_d75b5f62e6_b.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Configure Number of Instances" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          As mentioned we are setting up 4 node hadoop cluster, so please enter 4 as number of instances. 
          Please check Amazon EC2 free-tier requirements, you may setup 3 node cluster with < 30GB storage size to avoid any charges.  
          In production environment you want to have SecondayNameNode as separate machine
      </span>
      <img src="//c2.staticflickr.com/4/3859/14878009273_56b330663e_b.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Add Storage" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          Minimum volume size is 8GB
      </span>
      <img src="//c2.staticflickr.com/4/3863/14671511289_04384ea419_b.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Instance Description" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
         Give your instance name and description
      </span>
      <img src="//c2.staticflickr.com/4/3892/14671516679_3dd3286d1c_b.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Define a Security Group" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
         Create a new security group, later on we are going to modify the security group with security rules.
      </span>
      <img src="//c2.staticflickr.com/4/3911/14857807722_0a877e6063_b.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Launch Instance and Create Security Pair" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
         Review and Launch Instance. <br />
         <br />
         Amazon EC2 uses public–key cryptography to encrypt and decrypt login information. 
         Public–key cryptography uses a public key to encrypt a piece of data, such as a password, then the recipient uses the private key to decrypt the data. 
         The public and private keys are known as a <b>key pair</b>. <br />
         <br />
         Create a new keypair and give it a name “hadoopec2cluster” and download the keypair (.pem) file to your local machine. Click Launch Instance
      </span>
      <img src="//c2.staticflickr.com/6/5596/14878037423_a5a6af75da.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Launching Instances" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
         Once you click “Launch Instance” 4 instance should be launched with “pending” state
      </span>
      <img src="//c2.staticflickr.com/6/5593/14671551648_33c5a254c4_b.jpg" style="max-width:100%;" />
      <br />
      <span style="display:block;margin-bottom:.5em;">
         Once in “running” state we are now going to rename the instance name as below.
         
      </span>
      <ul style="padding-left:1.5em;list-style:disc;">
          <li>HadoopNameNode (Master)</li>
          <li>HadoopSecondaryNameNode</li>
          <li>HadoopSlave1 (data node will reside here)</li>
          <li>HaddopSlave2  (data node will reside here)</li>
      </ul>
      <br />
      <img src="//c2.staticflickr.com/6/5596/14671488210_59d4c2f388_b.jpg" style="max-width:100%;" />
      <br />
      <span style="display:block;margin-bottom:.5em;">
         Please note down the Instance ID, Public DNS/URL (ec2-54-209-221-112.compute-1.amazonaws.com)  and Public IP for each instance for your reference.
         We will need it later on to connect from Putty client.  Also notice we are using “HadoopEC2SecurityGroup”.
      </span>
      <img src="//c2.staticflickr.com/6/5584/14671642597_a4397d0af4_b.jpg" style="max-width:100%;" />
      <br />
      <span style="display:block;margin-bottom:.5em;">
        You can use the existing group or create a new one. 
        When you create a group with default options it add a rule for SSH at port 22.In order to have TCP and ICMP access we need to add 2 additional security rules.
        Add ‘All TCP’, ‘All ICMP’ and ‘SSH (22)’ under the inbound rules to “HadoopEC2SecurityGroup”. 
        This will allow ping, SSH, and other similar commands among servers and from any other machine on internet. 
        Make sure to “Apply Rule changes” to save your changes.
        <br />
        <br />
        These protocols and ports are also required to enable communication among cluster servers. 
        As this is a test setup we are allowing access to all for TCP, ICMP and SSH and not bothering about the details of individual server port and security.
      </span>
      <img src="//c2.staticflickr.com/6/5557/14855120971_962b579de5.jpg" style="max-width:100%;" />
    ]]>
    </c:sourceContent>




    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>

  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.5em;">
    <c:title>Setting up client access to Amazon Instances</c:title>
    <c:desc>
      <c:desc1>
        <![CDATA[
          Now, lets make sure we can connect to all 4 instances.
          For that we are going to use Putty client We are going setup password-less SSH access among servers to setup the cluster. 
          This allows remote access from Master Server to Slave Servers so Master Server can remotely start the Data Node and Task Tracker services on Slave servers.
            <br /><br />
          We are going to use downloaded hadoopec2cluster.pem file to generate the private key (.ppk). 
          In order to generate the private key we need Puttygen client. 
          You can download the putty and puttygen and various utilities in zip from <a target="_blank" href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html">here</a>.
        ]]>
      </c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="Generating Private Key" id="sourceContent1"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          Let’s launch PUTTYGEN client and import the key pair we created during launch instance step – “hadoopec2cluster.pem”
          <br /><br />
          Navigate to Conversions and “Import Key”
      </span>
      <img src="//c2.staticflickr.com/4/3875/14855172271_b7ed4ab7db.jpg" style="max-width:100%;" />
      <br />
      <img src="//c2.staticflickr.com/4/3902/14671617149_24d3aee25b_z.jpg" style="max-width:100%;" />
      <br />
      you import the key You can enter passphrase to protect your private key or leave the passphrase fields blank to use the private key without any passphrase.
      Passphrase protects the private key from any unauthorized access to servers using your machine and your private key.
      <br /><br />
      Any access to server using passphrase protected private key will require the user to enter the passphrase to enable the private key enabled access to AWS EC2 server.
    ]]>
    </c:sourceContent>
    
    <c:sourceContent type="html" title="Save Private Key" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          Now save the private key by clicking on “Save Private Key” and click “Yes” as we are going to leave passphrase empty.
      </span>
      <img src="//c2.staticflickr.com/4/3888/14858236625_e28236b77e_n.jpg" style="max-width:100%;" />
      <br />
      Save the .ppk file and give it a meaningful name<br /><br />
      <img src="//c2.staticflickr.com/6/5574/14671724357_43513dd705.jpg" style="max-width:100%;" />
      <br />
      Now we are ready to connect to our Amazon Instance Machine for the first time.
    ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="Connect to Amazon Instance" id="sourceContent1" style="margin-top:2em;"
                     titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;">
      <![CDATA[
      <span style="display:block;margin-bottom:.5em;">
          Let’s connect to HadoopNameNode first. Launch Putty client, grab the public URL , import the .ppk private key that we just created for password-less SSH access. 
          As per amazon documentation, for Ubuntu machines username is “ubuntu”
      </span>
    ]]>
    </c:sourceContent>
    
    
    
    <c:sourceContent type="html" title="Provide private key for authentication" id="sourceContent1" style="margin-top:2em;"
        titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
        bodyStyle="background-color:white;padding:0;">
        <![CDATA[
            <img src="//c2.staticflickr.com/4/3851/14688823348_8afbda25c4_b.jpg" style="max-width:100%;" />
        ]]>
    </c:sourceContent>
    
    
    <c:sourceContent type="html" title="Hostname and Port and Connection Type" id="sourceContent1" style="margin-top:2em;"
        titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
        bodyStyle="background-color:white;padding:0;">
        <![CDATA[
            <span style="display:block;margin-bottom:.5em;">
            and “Open” to launch putty session
            </span>
            <img src="//c2.staticflickr.com/4/3850/14875113522_5dfbb47278_n.jpg" style="max-width:100%;" />
            
            <span style="display:block;margin-bottom:.5em;">
            when you launch the session first time, you will see below message, click “Yes”
            </span>
            <img src="//c2.staticflickr.com/4/3917/14875120212_e3c76c6db8_z.jpg" style="max-width:100%;" />
            
            <span style="display:block;margin-bottom:.5em;">
            and will prompt you for the username, enter ubuntu, if everything goes well you will be presented welcome message with Unix shell at the end.
            </span>
            <img src="//c2.staticflickr.com/4/3902/14688856878_c5a0573118.jpg" style="max-width:100%;" />
            
            <span style="display:block;margin-bottom:.5em;">
            If there is a problem with your key, you may receive below error message
            </span>
            <img src="//c2.staticflickr.com/6/5569/14895339223_6e24617b8c.jpg" style="max-width:100%;" />
            
            <span style="display:block;margin-bottom:.5em;">
            Similarly connect to remaining 3 machines HadoopSecondaryNameNode, HaddopSlave1,HadoopSlave2 respectively to make sure you can connect successfully.
            </span>
            <img src="//c2.staticflickr.com/6/5590/14688874738_702481f11f_z.jpg" style="max-width:100%;" />
        ]]>
    </c:sourceContent>


<c:sourceContent type="html" title="Enable Public Access" id="sourceContent1" style="margin-top:2em;"
    titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
    bodyStyle="background-color:white;padding:0;">
    <![CDATA[
        <span style="display:block;margin-bottom:.5em;">
        Issue ifconfig command and note down the ip address.
        Next, we are going to update the hostname with ec2 public URL and finally we are going to update /etc/hosts file to map  the ec2 public URL with ip address.
        This will help us to configure master ans slaves nodes with hostname instead of ip address.
        <br />
        <br />
        Following is the output on HadoopNameNode ifconfig
        </span>
        <img src="//c2.staticflickr.com/4/3837/14872466211_a458ac6252_z.jpg" style="max-width:100%;" />
        <br />
        <img src="//c2.staticflickr.com/6/5577/14875526425_b02319f0ac_z.jpg" style="max-width:100%;" />
        <br />
        
        <span style="display:block;margin-bottom:.5em;">
        now, issue the hostname command, it will display the ip address same as inet address from ifconfig command.
        </span>
        <img src="//c2.staticflickr.com/4/3837/14688936468_0e43b80cd0.jpg" style="max-width:100%;" />
        
        <span style="display:block;margin-bottom:.5em;">
        We need to modify the hostname to ec2 public URL with below command
        <br />
        <br />
        prebuffer_0nbsp;<b>sudo hostname ec2-54-209-221-112.compute-1.amazonaws.com</b>
        </span>
        <img src="//c2.staticflickr.com/6/5565/14852563996_26b402545d_b.jpg" style="max-width:100%;" />
         ]]>
</c:sourceContent>


<c:sourceContent type="html" title="Modify /etc/hosts" id="sourceContent1" style="margin-top:2em;background-color:white;"
    titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
    bodyStyle="background-color:white;padding:0;">
    <![CDATA[
        <span style="display:block;margin-bottom:.5em;">
        Lets change the host to EC2 public IP and hostname.
        <br />
        <br />
        Open the /etc/hosts in vi, in a very first line it will show 127.0.0.1 localhost, we need to replace that with amazon ec2 hostname and ip address we just collected.
        </span>
        <img src="//c2.staticflickr.com/6/5593/14895432933_affce22cc4_b.jpg" style="max-width:100%;" />
        <br />
        <span style="display:block;margin-bottom:.5em;">
        Modify the file and save your changes
        </span>
        <img src="//c2.staticflickr.com/6/5580/14688898320_600fb20f94.jpg" style="max-width:100%;" />
        <br />
        
        <span style="display:block;margin-bottom:.5em;">
        Repeat 2.3 and 2.4 sections for remaining 3 machines.
        </span>
    ]]>
</c:sourceContent>


<c:sourceContent type="html" title="Setup WinSCP access to EC2 instances" id="sourceContent1" style="margin-top:2em;background-color:white;"
    titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
    bodyStyle="background-color:white;padding:0;">
    <![CDATA[
        <span style="display:block;margin-bottom:.5em;">
        In order to securely transfer files from your windows machine to Amazon EC2 WinSCP is a handy utility.
        <br />
        <br />
        Provide hostname, username and private key file and save your configuration and Login
        
        </span>
        <img src="//c2.staticflickr.com/6/5563/14852621606_c6523a59a2_c.jpg" style="max-width:100%;" />
        <br />
        <img src="//c2.staticflickr.com/4/3908/14875612135_1551b2393b.jpg" style="max-width:100%;" />
        <br />
        <span style="display:block;margin-bottom:.5em;">
        If you see above error, just ignore and you upon successful login you will see unix file system of a logged in user /home/ubuntu your Amazon EC2 Ubuntu machine.
        
        </span>
        <img src="//c2.staticflickr.com/6/5589/14688990789_f58e490bee_b.jpg" style="max-width:100%;" />
        
        <br />
         <span style="display:block;margin-bottom:.5em;">
        Upload the .pem file to master machine (HadoopNameNode). It will be used while connecting to slave nodes during hadoop startup daemons.
        </span>
    ]]>
</c:sourceContent>
    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>
  
  
  
  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.5em;">
      <c:title>Install and setup Hadoop cluster</c:title>
      <c:desc>
          <c:desc1>
              <![CDATA[
                  <ul style="padding-left:1.5em;list-style:disc;">
                      <li>HadoopNameNode will be referred as <b>master</b></li>
                      <li>HadoopSecondaryNameNode will be referred as <b>SecondaryNameNode</b> or <b>SNN</b></li>
                      <li>HadoopSlave1 and HadoopSlave2 will be referred as <b>slaves</b> (where data nodes will reside)</li>
                  </ul>
              ]]>
          </c:desc1>
      </c:desc>
      <c:sourceContent type="html" title="Install Java" id="sourceContent1" style="background-color:white;"
          titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
          bodyStyle="background-color:white;padding:0;">
          <![CDATA[
              <span style="display:block;margin-bottom:.5em;">
              <b>sudo apt-get update && sudo add-apt-repository ppa:webupd8team/java <br />
              sudo apt-get update && sudo apt-get install oracle-jdk7-installer
              </b>
              <br />
              <br />
              Repeat this for SNN and 2 slaves.
              </span>
          ]]>
      </c:sourceContent>


<c:sourceContent type="html" title="Install Hadoop" id="sourceContent1" style="background-color:white;margin-top:2em;"
    titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
    bodyStyle="background-color:white;padding:0;">
    <![CDATA[
        <span style="display:block;margin-bottom:.5em;">
        I am going to use haddop 1.2.1 stable version
        <br />
        <br />
        <b>$ wget http://apache.mirror.gtcomm.net/hadoop/common/hadoop-1.2.1/hadoop-1.2.1.tar.gz</b>
        <br />
        <br />
        ...
        </span>
    ]]>
</c:sourceContent>



<c:sourceContent type="html" title="Setup Environment Variable" id="sourceContent1" style="background-color:white;margin-top:2em;"
    titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
    bodyStyle="background-color:white;padding:0;">
    <![CDATA[
        <span style="display:block;margin-bottom:.5em;">
        $ vi .bashrc<br />
        <br />
        
        Add following at the end of file<br />
        <br />
        
        export HADOOP_CONF=/home/ubuntu/hadoop/conf<br />
        export HADOOP_PREFIX=/home/ubuntu/hadoop<br />
        <br />
        
        #Set JAVA_HOME<br />
        export JAVA_HOME=/usr/lib/jvm/java-7-oracle<br />
        <br />
        
        # Add Hadoop bin/ directory to path<br />
        export PATH=$PATH:$HADOOP_PREFIX/bin<br />
        <br />
        
        
        source ~/.bashrc<br /><br />
        echo $HADOOP_PREFIX<br />
        echo $HADOOP_CONF<br /><br />
        Repeat 1.3 and 1.4  for remaining 3 machines (SNN and 2 slaves).<br />
        </span>
    ]]>
</c:sourceContent>



<c:sourceContent type="html" title="Setup Password-less SSH on Servers" id="sourceContent1" style="background-color:white;margin-top:2em;"
    titleStyle="padding-left:0;color:black;font-size:1.3em;background-color:white;"
    bodyStyle="background-color:white;padding:0;">
    <![CDATA[
        <span style="display:block;margin-bottom:.5em;">
        Master server remotely starts services on salve nodes, whichrequires password-less access to Slave Servers. AWS Ubuntu server comes with pre-installed OpenSSh server.
        <br />
        <br />
        Quick Note:<br />
        The public part of the key loaded into the agent must be put on the target system in ~/.ssh/authorized_keys. This has been taken care of by the AWS Server creation process <br />
        <br />
        Now we need to add the AWS EC2 Key Pair identity haddopec2cluster.pem to SSH profile. In order to do that we will need to use following ssh utilities
        <br />
        <br />
        <b>‘ssh-agent’</b> is a background program that handles passwords for SSH private keys. <br />
        <b>‘ssh-add’</b> command prompts the user for a private key password and adds it to the list maintained by ssh-agent.
        <br />
        <br />
        Once you add a password to ssh-agent, you will not be asked to provide the key when using SSH or SCP to connect to hosts with your public key.
        <br />
        <br />
        
        Amazon EC2 Instance  has already taken care of ‘authorized_keys’ on master server, execute following commands to allow password-less SSH access to slave servers.
        <br />
        <br />
        
        First of all we need to protect our keypair files, if the file permissions are too open (see below) you will get an error
        </span>
        <img style="max-width:100%;" src="//c2.staticflickr.com/4/3909/14875817675_768300bd57_z.jpg" />
        <br />
    ]]>
</c:sourceContent>


<c:comment>
    <c:comment1>
        <![CDATA[]]>
    </c:comment1>
</c:comment>
  </c:entry>
  
</c:component>
