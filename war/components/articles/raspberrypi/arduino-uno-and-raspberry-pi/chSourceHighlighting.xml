<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[
    <div>
      Arduino 和 Raspberry Pi 使业余电子爱好者进入电子世界变得简单. 在流行的 Raspberry Pi 和 Arduino 平台上可以使用 Pi 或 Arduino 设备操控运动、光、声音.
    </div>
    <div style="margin-top:.625em;">
      可以把 Raspberry Pi 当作一台通用计算机，而 Arduino 只需要做好一件事，即： 连接和控制电子元件. 
    </div>
    <div style="margin-top:.625em;">
      <b>PIO:</b> <br />
      <span style="color: fuchsia;">Raspberry Pi 的 GPIO 引脚只能用于提供大约 <b>16mA</b> 的电流，而 Ardunio 引脚的额定值为 <b>40mA</b>。你可以直接连接一个东西(例如一个明亮的 LED) 到 Arduino, 但是不能将其直接连接到 Raspberry Pi 上。</span>
    </div>
    <div style="margin-top:.625em;">
      <b>电压(V):</b> <br />
      <span style="color: fuchsia;">Raspberry Pi 的 工作电压时 <b>3.3V</b>, 而 Arduino 的工作电压是 <b>5V</b>. 如果将 5V 连接到 Raspberry Pi 的 GPIO 引脚可能会损坏 GPIO 引脚甚至损坏整个 Raspberry Pi.</span>
    </div>
]]>
  </c:abstract>





  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>Arduino Uno</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
      
      ]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<img src="/images/raspberry/ARDUINO_UNO_A06.png" width="750px;" />
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="安装 Arduino IDE" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
按照 Arduino 网站 (https://www.arduino.cc/en/Main/Software) 上的说明进行操作，根据您的操作系统安装相应版本的 Arduino IDE.  <br /><br />
注：Windows 和 Mac 用户需要安装 USB 驱动程序。 <br /><br />
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.625;font-family:monospace;">
                     <![CDATA[
<div>
  使用 USB 线将 Arduino 连接到要用来对 Arduino 进行编程的计算机上. 打开 Arduino IDE, 在工具菜单中选择相应的端口和开发板, 然后在示例应用中选择：Basic -> Blink 
</div>
<div>
  <img src="/images/raspberry/arduino-ide-settings.jpg" width="950px;" />
</div>

<div>
点击 Arduino IDE 中的上传按钮将示例程序上传至 Arduino 中. 上传过程中在 Arduino IDE 窗口的日志区域会显示消息，等待几秒钟后会提示上传完毕. 
</div>

<div>
注：如果你的 Arduino 没有出现在工具菜单的开发板列表中，通常是因为没有正确安装 USB 驱动程序. 
</div>
  ]]>
    </c:sourceContent>


    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>Raspberry Pi 3 B+</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
      
      ]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<img src="/images/raspberry/raspberry_pi_3_model_b_motherboard_expansion_board_8_-zp3021380602000.jpg" width="950px;" />
  ]]>
    </c:sourceContent>
    

    <c:sourceContent type="html" title="RaspberryPi 初体验" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<div>
  <b>前期准备:</b>
</div>
<div style="margin-top:.625em;">
  1个键盘、1个鼠标、1个HDMI显示器、Raspberry Pi 3 B+、5V microUSB 电源、8G sd闪存卡
</div>
  ]]>
    </c:sourceContent>

    <c:sourceContent type="" title="Steps: " id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:black;font-size:.9em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.9em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
1. format sd card to fat 32
   > mac -> 磁盘工具 -> 抹掉 -> MS-DOC(FAT)

2. Download NOOBS: NOOBS-v2-4-5.zip
   > https://www.raspberrypi.org/downloads/

3. 解压 NOOBS-v2-4-5.zip, 将解压后的文件夹内容复制到SD卡跟路径下, 确保不是一个文件夹下
   1). unzip NOOBS-v2-4-5.zip ./ && rsync -azP ./NOOBS/ /sdcard-path-here/
   2). Enable SSH, by default the ssh has been disabled on Raspbian:
     $ sudo touch /sdcard-path-here/ssh   (The file can contain anything or be empty)
   3). Setup Wi-Fi configuration: 
     $ sudo touch /sdcard-path-here/wpa_supplicant.conf
     > Raspbian will move it to /etc/wpa_supplicant/ when the system is booted
     > For Raspbian Jessie: 
     network={
         ssid="huawei_nuva_by_keesh"
         psk="password here"
         key_mgmt=WPA-PSK
       }
     > For Raspbian Stretch: 
     ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
     network={
       ssid="huawe_nuva_by_keesh"
       psk="password here"
       key_mgmt=WPA-PSK    
       }
    4). Customizing the installer
      $ sudo touch /sdcard-path-here/installer-config.txt
      > # This is default, but here as a reminder.
      > preset=server

      > # Hostname and root password
      > hostname=rubus
      > rootpw=raspbian
     

4. 不要在RaspberryPi插电的情况下插拔任何设备, 否则会损坏文件系统并且丢失存储在RaspberryPi上的重要数据

5. 启动RaspberryPi前的注意事项: 
   -- 将格式化好的并切含有NOOBS的SD卡插入RaspberryPi的底部卡槽中
   -- 将HDMI连接线缆连接到显示器上, 必须先插入HDMI线缆在打开显示器电源
   -- 插入键盘和鼠标
   -- 连接 RaspberryPi micro-USB 电源(5V,2A电源,700mA供电电流), 普通电脑的USB口只能提供500mA电流
      (劣质USB线缆引起的电压不足或劣质电源引起的电流不足都可能导致崩溃及文件系统损坏, 确保开机前有足够的电压和电流)
   -- 上电后, RaspberryPi上的LED状态指示灯会点亮, 红色LED(PWR)会一直亮, 绿色LED(ACT)表示活跃性会不规则的闪烁
   -- 如果PWR亮但是ACT在几秒钟内没有闪烁, 可能是SD卡不工作的信号, 可能是SD卡连接错误, 或卡的格式或安装不正确 
   -- 如果PWR闪烁不定: 尝试使用不同的供电电源(更大的电流), 或更换micro-USB线缆
   -- 如果ACT在几秒钟内没有闪烁: 尝试重置SD卡、关闭电源、拔下SD卡重新插入，检查SD卡的格式和NBOOS软件的安装
   -- 观察ACT几秒钟, 查看器活跃性. 一旦确定RaspberryPi正常工作后，检查显示器
   -- 检查显示器: 启动时RaspberryPi短暂显示一张信号测试图, 接着用几秒钟时间显示恢复画面, 接着进入NOOBS安装程序
   -- 如果ACT工作正常但是没有看到NOOBS安装画面: 
      1). 确保显示器电源处于打开状态, 并且显示器输入设置正确(很容易忘记将输入从VGA切换到HDMI)
      2). 如果使用HDMI尝试切换到安全模式: 在NOOBS中按下键盘上的数据2键, 安全模式强制使用绝大多数显示器都支持的640x480、60Hz方案. 并且增强了HDMI信号

6. 安装带有NOOBS的Raspbian:
   -- 在NOOBS安装画面中选择Raspbian,然后选择Install,安装过程大约耗时20mins
   -- 安装完成点击OK按钮后RaspberryPi将重启并开始Raspbian的初次设置
   -- Raspbian 是一个基于Debian的Linux操作系统

7. 首次启动时, Raspbian 被配置为自动进入并运行RaspberryPi软件配置工具raspi-config
   -- 默认用户密码: pi/raspberry
   -- 建议的raspi-config: 修改口令、激活Pi相机、设置/确认存储器被分为128MB、激活SPI、激活I2C、关闭串行口。
      如果忘记修改其中的任何一项可以在任何时候重新设置 raspi-config
   -- 完成raspi-config配置修改后按下tab键, 选择Finish. RaspberryPi将会重启并提供首次登录提示.
   -- 如果重新配置raspi-config, 在命令行输入 sudo raspi-config

8. 安全关机:
   -- 如果RaspberryPi运行时断开电源可能会损坏文件系统, 导致系统崩溃和数据丢失
   -- 在拔掉RaspberryPi电源之前确保使用如下命令正确关机: sudo shutdown -h now (sudo halt)
   -- 该命令会终止所有用户的连接, 干净地关闭文件系统
   -- 当看到ACT顺序闪烁10次时, 表示可以拔掉Pi电源了
   -- 正确重启命令: sudo shutdown -r now (sudo reboot)

9. RaspberryPi入网:
   -- 要使计算机与RaspberryPi通信, 必须将计算机和RaspberryPi置于相同的网络中 
   -- 通过以太网连接:
      1). 如果有一台作为DHCP服务器的路由器，只需要将网线插入RaspberryPi网口即可
      2). 插入网线后RaspberryPi会自动尝试从DHCP服务器获取一个网络地址
      3). 使用以下命令检查RaspberryPi获取到的IP地址:
          ip addr show eth0
   -- 通过本地计算机网络连接:
      1). 使用网络电缆将RaspberryPi直接连接到PC上
      2). RaspberryPi网络适配器拥有检测并匹配电缆类型的auto-MDIX, 所以既可以使用交叉电缆, 也可以使用更普通的网络电缆
      3). 最简单的办法是为计算机和RaspberryPi都分配一个静态IP地址, 这样它们就处于一个相同的子网中, 通常使用为局域网预留的 192.168.x.x 子网
      4). 编辑 /boot/cmdline.txt: (编辑保存后重启RaspberryPi)
          $ sudo vi /boot/cmdline.txt
          > 在行尾输入 ip=192.168.111.111
   -- 通过无线Wi-Fi网络连接:
      1). 该方法需要一个兼容RaspberryPi的Wi-Fi USB适配器. 
          (通常RaspberryPi能够很好的支持使用了RTL8188CUS芯片集的Wi-Fi设备)
      2). 对于Pi B+二代已经内置Wi-Fi设备, 对于较老型号的Pi需自行购买与该型号匹配的Wi-Fi适配器
      3). Raspbian预装了wpa_supplicant并构建了一个无线网络, 需要通过命令行将网络配置选项添加进来
          > 要完成这项工作, 建议使用WPA命令行工具(wpa_cli), 该工具允许你扫描网络并添加新的wpa_supplicant配置
          > 相比直接编辑配置文件, wpa_cli命令行工具在配置过程中不会由于标点符号的丢失或格式不符而产生错误
          > 在wpa_cli配置过程中需要将ssid和psk替换成本地网络配置的SSID和共享秘钥
          > wpa_cli假定你使用的是广播SSID的网络. 这种配置同时支持WPA和WPA2网络. WPA2是安全性最高的网络配置、 WEP最不安全、WPA相对安全
      4). 在命令行输入wpa_cli接着输入scan扫描无线网络:
    $ wpa_cli
      > scan          -----> OK
      > scan_results      -----> out put wifi connect name list
      > add_network       -----> 0
      > set_network 0 ssid "your_wifi_name_here"  -----> OK
      > set_network 0 psk "your_password_here"  -----> OK
      > enable_network 0        -----> OK
      > save_config         -----> OK
      > reconnect         -----> OK
      > quit

10. 给RaspberryPi设置一个独一无二的hostname(主机名):
    1). 由于Pi的IP地址可能在重启后发生变化, 查找新的IP地址会很麻烦
    2). 一个可选方案是使用Bonjour/Zeroconf, 它会通过多点传送来广播你的主机名. 
    3). 在OS X和Ubuntu Linux中都预先安装了Bounjour
    3). 一旦Pi主机名被广播后, 就可以在同一网络的任何一台计算机上通过主机名访问该Pi
    1). 通过raspi-config修改主机名:
        $ sudo raspi-config
        > 在该配置菜单的高级选项中完成这项工作, 并重启你的Pi
        > 一个标准的主机名原则上只能包含字母或数字, 不能以数字开头
    2). 重启后在命令行安装libnss-mdns(Bonjour/Zeroconf)
        $ sudo apt-get install libnss-mdns
        $ sudo apt-get install avahi-daemon
        > 安装完毕后就可以在网络上通过hostname访问你的Pi了
  > 在同一网络中多点传送能够到达的任何一台计算机上, 都可以通过使用Pi的主机名访问该Pi
  > ping keesh.pi.local
 
11. 在RaspberryPi中开启SSH远程连接:
    1). 查看RaspberryPi的SSH识别码, 该识别码确保创建加密连接的设备正是你打算用于进行连接通信的设备
        $ ssh-keygen -l -f /etc/ssh/ssh_host_rsa_key.pub
        > 2048 SHA256:RnhjkjkhkjHKkhHKJhkhhhkkkKKhHHkhHgG8 root@raspberrypi (RSA)
    2). 在RaspiberryPi配置选项中启用SSH:
        $ sudo raspi-config
        > Interfacing Options -> SSH -> YES (ENABLE SSH)
    3). 修改RaspberryPi的pi用户密码
        $ sudo raspi-config
        > Change User Password for current user 

12. Post Installation Linux Configuration:
    1). Locales and timezone
      $ sudo locale-gen en_US.UTF-8
      $ sudo dpkg-reconfigure locales
      $ sudo dpkg-reconfigure tzdata  
      $ sudo apt-get update && sudo apt-get upgrade
      $ sudo apt-get clean


  ]]>
    </c:sourceContent>


    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>




</c:component>
