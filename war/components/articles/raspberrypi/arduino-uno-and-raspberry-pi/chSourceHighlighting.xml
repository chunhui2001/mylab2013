<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[
    <div>
      Arduino 和 Raspberry Pi 使业余电子爱好者进入电子世界变得简单. 在流行的 Raspberry Pi 和 Arduino 平台上可以使用 Pi 或 Arduino 设备操控运动、光、声音.
    </div>
    <div style="margin-top:.625em;">
      可以把 Raspberry Pi 当作一台通用计算机，而 Arduino 只需要做好一件事，即： 连接和控制电子元件. 
    </div>
    <div style="margin-top:.625em;">
      <b>PIO:</b> <br />
      <span style="color: fuchsia;">Raspberry Pi 的 GPIO 引脚只能用于提供大约 <b>16mA</b> 的电流，而 Ardunio 引脚的额定值为 <b>40mA</b>。你可以直接连接一个东西(例如一个明亮的 LED) 到 Arduino, 但是不能将其直接连接到 Raspberry Pi 上。</span>
    </div>
    <div style="margin-top:.625em;">
      <b>电压(V):</b> <br />
      <span style="color: fuchsia;">Raspberry Pi 的 工作电压时 <b>3.3V</b>, 而 Arduino 的工作电压是 <b>5V</b>. 如果将 5V 连接到 Raspberry Pi 的 GPIO 引脚可能会损坏 GPIO 引脚甚至损坏整个 Raspberry Pi.</span>
    </div>
]]>
  </c:abstract>





  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>树莓派各版本对比</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
      
      ]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<table style="width:100%;border-top:solid 2px gray;">
  <thead>
    <tr style="border-bottom:solid 1px gray;">
      <th style="text-align:center;border-right:solid 1px gray;">特性</th>
      <th colspan="3" style="text-align:center;">树莓派1</th>
      <th style="text-align:center;">树莓派2</th>
    </tr>
  </thead>
  <tbody>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">型号</td>
      <td style="text-align:center;border-right:solid 1px gray;">B</td>
      <td style="text-align:center;border-right:solid 1px gray;">A+</td>
      <td style="text-align:center;border-right:solid 1px gray;">B+</td>
      <td style="text-align:center;">B</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">处理器</td>
      <td style="text-align:center;border-right:solid 1px gray;" colspan="3">博通BCM2835</td>
      <td style="text-align:center;">博通BCM2836</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">处理器核心</td>
      <td style="text-align:center;border-right:solid 1px gray;" colspan="3">单核</td>
      <td style="text-align:center;">四核</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">速率</td>
      <td style="text-align:center;border-right:solid 1px gray;" colspan="3">700MHz</td>
      <td style="text-align:center;">900MHz</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">RAM</td>
      <td style="text-align:center;border-right:solid 1px gray;">512MB</td>
      <td style="text-align:center;border-right:solid 1px gray;">256MB</td>
      <td style="text-align:center;border-right:solid 1px gray;">512MB</td>
      <td style="text-align:center;">1024MB</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">图形处理器单元(GPU)</td>
      <td style="text-align:center;" colspan="4">VideoCoreIV</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">GPIO引脚插槽</td>
      <td style="text-align:center;border-right:solid 1px gray;">26针</td>
      <td style="text-align:center;border-right:solid 1px gray;">40针</td>
      <td style="text-align:center;border-right:solid 1px gray;">40针</td>
      <td style="text-align:center;">40针</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">音频与视频接口</td>
      <td style="text-align:center;border-right:solid 1px gray;">RCA和HDMI端口</td>
      <td style="text-align:center;" colspan="3">集成式3.5mm耳机插孔，音频和复合视频接口，HDMI端口</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">以太网接口</td>
      <td style="text-align:center;border-right:solid 1px gray;">有</td>
      <td style="text-align:center;border-right:solid 1px gray;">无</td>
      <td style="text-align:center;border-right:solid 1px gray;">有</td>
      <td style="text-align:center;">有</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">USB接口</td>
      <td style="text-align:center;border-right:solid 1px gray;">2个</td>
      <td style="text-align:center;border-right:solid 1px gray;">1个</td>
      <td style="text-align:center;border-right:solid 1px gray;">4个</td>
      <td style="text-align:center;">4个</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">电源</td>
      <td style="text-align:center;" colspan="4">MicroUSB电源接口</td>
    </tr>
    <tr style="border-bottom:solid 1px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">数字接口</td>
      <td style="text-align:center;" colspan="4">CSI(摄像头)和DSI(显示屏)排线接口</td>
    </tr>
    <tr style="border-bottom:solid 2px gray;">
      <td style="text-align:center;border-right:solid 1px gray;">数字接口</td>
      <td style="text-align:center;border-right:solid 1px gray;">SD</td>
      <td style="text-align:center;" colspan="3">MicroSD</td>
    </tr>
  </tbody>
  <tfooter>
    <tr style="font-size:.95em;color:gray;">
      <td colspan="5"><br />
      注1：A型和B型树莓派可用的最大电流为1A，所以如果需要将耗电量超过1A的USB设备连接到树莓派上，则必须通过外部的USB集线器进行连接。<br />
      注2：B+型树莓派可用的最大电流为2A，在任何情况下不要让流经树莓派的外围设备电流值超过2.4A，那会毁掉你的树莓派。<br />
      注3：可以将7英寸的LCD显示器连接到树莓派的复合视频接口，用于嵌入式产品开发。(1英寸=25.4mm)</td>
    </tr>
  </tfooter>
</table>
  ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>





  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>Arduino Uno</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
      
      ]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<img src="/images/raspberry/ARDUINO_UNO_A06.png" width="750px;" />
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="安装 Arduino IDE" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
按照 Arduino 网站 (https://www.arduino.cc/en/Main/Software) 上的说明进行操作，根据您的操作系统安装相应版本的 Arduino IDE.  <br /><br />
注：Windows 和 Mac 用户需要安装 USB 驱动程序。 <br /><br />
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.625;font-family:monospace;">
                     <![CDATA[
<div>
  使用 USB 线将 Arduino 连接到要用来对 Arduino 进行编程的计算机上. 打开 Arduino IDE, 在工具菜单中选择相应的端口和开发板, 然后在示例应用中选择：Basic -> Blink 
</div>
<div>
  <img src="/images/raspberry/arduino-ide-settings.jpg" width="950px;" />
</div>

<div>
点击 Arduino IDE 中的上传按钮将示例程序上传至 Arduino 中. 上传过程中在 Arduino IDE 窗口的日志区域会显示消息，等待几秒钟后会提示上传完毕. 
</div>

<div>
注：如果你的 Arduino 没有出现在工具菜单的开发板列表中，通常是因为没有正确安装 USB 驱动程序. 
</div>
  ]]>
    </c:sourceContent>


    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>Raspberry Pi 3 B+</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
      
      ]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<img src="/images/raspberry/raspberry_pi_3_model_b_motherboard_expansion_board_8_-zp3021380602000.jpg" width="950px;" />
  ]]>
    </c:sourceContent>
    

    <c:sourceContent type="html" title="RaspberryPi 初体验" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<div>
  <b>前期准备:</b>
</div>
<div style="margin-top:.625em;">
  1个键盘、1个鼠标、1个HDMI显示器、Raspberry Pi 3 B+、5V microUSB 电源、8G sd闪存卡
</div>
  ]]>
    </c:sourceContent>

    <c:sourceContent type="" title="Steps: " id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:black;font-size:.9em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.9em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
1. format sd card to fat 32
   > mac -> 磁盘工具 -> 抹掉 -> MS-DOC(FAT)

2. Download NOOBS: NOOBS-v2-4-5.zip
   > https://www.raspberrypi.org/downloads/

3. 解压 NOOBS-v2-4-5.zip, 将解压后的文件夹内容复制到SD卡跟路径下, 确保不是一个文件夹下
   1). unzip NOOBS-v2-4-5.zip ./ && rsync -azP ./NOOBS/ /sdcard-path-here/
   2). Enable SSH, by default the ssh has been disabled on Raspbian:
     $ sudo touch /sdcard-path-here/ssh   (The file can contain anything or be empty)
   3). Setup Wi-Fi configuration: 
     $ sudo touch /sdcard-path-here/wpa_supplicant.conf
     > Raspbian will move it to /etc/wpa_supplicant/ when the system is booted
     > For Raspbian Jessie: 
     network={
         ssid="huawei_nuva_by_keesh"
         psk="password here"
         key_mgmt=WPA-PSK
       }
     > For Raspbian Stretch: 
     ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
     network={
       ssid="huawe_nuva_by_keesh"
       psk="password here"
       key_mgmt=WPA-PSK    
       }
    4). Customizing the installer
      $ sudo touch /sdcard-path-here/installer-config.txt
      > # This is default, but here as a reminder.
      > preset=server

      > # Hostname and root password
      > hostname=rubus
      > rootpw=raspbian
     

4. 不要在RaspberryPi插电的情况下插拔任何设备, 否则会损坏文件系统并且丢失存储在RaspberryPi上的重要数据

5. 启动RaspberryPi前的注意事项: 
   -- 将格式化好的并切含有NOOBS的SD卡插入RaspberryPi的底部卡槽中
   -- 将HDMI连接线缆连接到显示器上, 必须先插入HDMI线缆在打开显示器电源
   -- 插入键盘和鼠标
   -- 连接 RaspberryPi micro-USB 电源(5V,2A电源,700mA供电电流), 普通电脑的USB口只能提供500mA电流
      (劣质USB线缆引起的电压不足或劣质电源引起的电流不足都可能导致崩溃及文件系统损坏, 确保开机前有足够的电压和电流)
   -- 上电后, RaspberryPi上的LED状态指示灯会点亮, 红色LED(PWR)会一直亮, 绿色LED(ACT)表示活跃性会不规则的闪烁
   -- 如果PWR亮但是ACT在几秒钟内没有闪烁, 可能是SD卡不工作的信号, 可能是SD卡连接错误, 或卡的格式或安装不正确 
   -- 如果PWR闪烁不定: 尝试使用不同的供电电源(更大的电流), 或更换micro-USB线缆
   -- 如果ACT在几秒钟内没有闪烁: 尝试重置SD卡、关闭电源、拔下SD卡重新插入，检查SD卡的格式和NBOOS软件的安装
   -- 观察ACT几秒钟, 查看器活跃性. 一旦确定RaspberryPi正常工作后，检查显示器
   -- 检查显示器: 启动时RaspberryPi短暂显示一张信号测试图, 接着用几秒钟时间显示恢复画面, 接着进入NOOBS安装程序
   -- 如果ACT工作正常但是没有看到NOOBS安装画面: 
      1). 确保显示器电源处于打开状态, 并且显示器输入设置正确(很容易忘记将输入从VGA切换到HDMI)
      2). 如果使用HDMI尝试切换到安全模式: 在NOOBS中按下键盘上的数据2键, 安全模式强制使用绝大多数显示器都支持的640x480、60Hz方案. 并且增强了HDMI信号

6. 安装带有NOOBS的Raspbian:
   -- 在NOOBS安装画面中选择Raspbian,然后选择Install,安装过程大约耗时20mins
   -- 安装完成点击OK按钮后RaspberryPi将重启并开始Raspbian的初次设置
   -- Raspbian 是一个基于Debian的Linux操作系统

7. 首次启动时, Raspbian 被配置为自动进入并运行RaspberryPi软件配置工具raspi-config
   -- 默认用户密码: pi/raspberry
   -- 建议的raspi-config: 修改口令、激活Pi相机、设置/确认存储器被分为128MB、激活SPI、激活I2C、关闭串行口。
      如果忘记修改其中的任何一项可以在任何时候重新设置 raspi-config
   -- 完成raspi-config配置修改后按下tab键, 选择Finish. RaspberryPi将会重启并提供首次登录提示.
   -- 如果重新配置raspi-config, 在命令行输入 sudo raspi-config

8. 安全关机:
   -- 如果RaspberryPi运行时断开电源可能会损坏文件系统, 导致系统崩溃和数据丢失
   -- 在拔掉RaspberryPi电源之前确保使用如下命令正确关机: sudo shutdown -h now (sudo halt)
   -- 该命令会终止所有用户的连接, 干净地关闭文件系统
   -- 当看到ACT顺序闪烁10次时, 表示可以拔掉Pi电源了
   -- 正确重启命令: sudo shutdown -r now (sudo reboot)

9. RaspberryPi入网:
   -- 要使计算机与RaspberryPi通信, 必须将计算机和RaspberryPi置于相同的网络中 
   -- 通过以太网连接:
      1). 如果有一台作为DHCP服务器的路由器，只需要将网线插入RaspberryPi网口即可
      2). 插入网线后RaspberryPi会自动尝试从DHCP服务器获取一个网络地址
      3). 使用以下命令检查RaspberryPi获取到的IP地址:
          ip addr show eth0
   -- 通过本地计算机网络连接:
      1). 使用网络电缆将RaspberryPi直接连接到PC上
      2). RaspberryPi网络适配器拥有检测并匹配电缆类型的auto-MDIX, 所以既可以使用交叉电缆, 也可以使用更普通的网络电缆
      3). 最简单的办法是为计算机和RaspberryPi都分配一个静态IP地址, 这样它们就处于一个相同的子网中, 通常使用为局域网预留的 192.168.x.x 子网
      4). 编辑 /boot/cmdline.txt: (编辑保存后重启RaspberryPi)
          $ sudo vi /boot/cmdline.txt
          > 在行尾输入 ip=192.168.111.111
   -- 通过无线Wi-Fi网络连接:
      1). 该方法需要一个兼容RaspberryPi的Wi-Fi USB适配器. 
          (通常RaspberryPi能够很好的支持使用了RTL8188CUS芯片集的Wi-Fi设备)
      2). 对于Pi B+二代已经内置Wi-Fi设备, 对于较老型号的Pi需自行购买与该型号匹配的Wi-Fi适配器
      3). Raspbian预装了wpa_supplicant并构建了一个无线网络, 需要通过命令行将网络配置选项添加进来
          > 要完成这项工作, 建议使用WPA命令行工具(wpa_cli), 该工具允许你扫描网络并添加新的wpa_supplicant配置
          > 相比直接编辑配置文件, wpa_cli命令行工具在配置过程中不会由于标点符号的丢失或格式不符而产生错误
          > 在wpa_cli配置过程中需要将ssid和psk替换成本地网络配置的SSID和共享秘钥
          > wpa_cli假定你使用的是广播SSID的网络. 这种配置同时支持WPA和WPA2网络. WPA2是安全性最高的网络配置、 WEP最不安全、WPA相对安全
      4). 在命令行输入wpa_cli接着输入scan扫描无线网络:
    $ wpa_cli
      > scan          -----> OK
      > scan_results      -----> out put wifi connect name list
      > add_network       -----> 0
      > set_network 0 ssid "your_wifi_name_here"  -----> OK
      > set_network 0 psk "your_password_here"  -----> OK
      > enable_network 0        -----> OK
      > save_config         -----> OK
      > reconnect         -----> OK
      > quit

10. 给RaspberryPi设置一个独一无二的hostname(主机名):
    1). 由于Pi的IP地址可能在重启后发生变化, 查找新的IP地址会很麻烦
    2). 一个可选方案是使用Bonjour/Zeroconf, 它会通过多点传送来广播你的主机名. 
    3). 在OS X和Ubuntu Linux中都预先安装了Bounjour
    3). 一旦Pi主机名被广播后, 就可以在同一网络的任何一台计算机上通过主机名访问该Pi
    1). 通过raspi-config修改主机名:
        $ sudo raspi-config
        > 在该配置菜单的高级选项中完成这项工作, 并重启你的Pi
        > 一个标准的主机名原则上只能包含字母或数字, 不能以数字开头
    2). 重启后在命令行安装libnss-mdns(Bonjour/Zeroconf)
        $ sudo apt-get install libnss-mdns
        $ sudo apt-get install avahi-daemon
        > 安装完毕后就可以在网络上通过hostname访问你的Pi了
  > 在同一网络中多点传送能够到达的任何一台计算机上, 都可以通过使用Pi的主机名访问该Pi
  > ping keesh.pi.local
 
11. 在RaspberryPi中开启SSH远程连接:
    1). 查看RaspberryPi的SSH识别码, 该识别码确保创建加密连接的设备正是你打算用于进行连接通信的设备
        $ ssh-keygen -l -f /etc/ssh/ssh_host_rsa_key.pub
        > 2048 SHA256:RnhjkjkhkjHKkhHKJhkhhhkkkKKhHHkhHgG8 root@raspberrypi (RSA)
    2). 在RaspiberryPi配置选项中启用SSH:
        $ sudo raspi-config
        > Interfacing Options -> SSH -> YES (ENABLE SSH)
    3). 修改RaspberryPi的pi用户密码
        $ sudo raspi-config
        > Change User Password for current user 

12. Post Installation Linux Configuration:
    1). Locales and timezone
      $ sudo locale-gen en_US.UTF-8
      $ sudo dpkg-reconfigure locales
      $ sudo dpkg-reconfigure tzdata  
      $ sudo apt-get update && sudo apt-get upgrade
      $ sudo apt-get clean


  ]]>
    </c:sourceContent>



    <c:sourceContent type="" title="安装 RaspberryPi 实用库" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
$ sudo apt-get update & apt-get upgrade
$ sudo apt-get install -y git-core

# wiringPi: 由 Gordon 用C语言编写的库，它支持你扩展GPIO的C程序
$ git clone git://git.drogon.net/wiringPi & cd wiringPi
$ git pull origin & ./build

# 验证安装
$ gpio -v
$ gpio readall

# python-gpio: 最新版树莓派已经内置安装了python-gpio, 以下是在旧版树莓派上安装 python-gpio
$ wget https://pypi.python.org/packages/source/R/RPi.GPIO/RPi.GPIO-0.5.7.tar.gz
$ tar -zxvf RPi.GPIO-0.5.7.tar.gz & mv RPi.GPIO-0.5.7 python_gpio & cd python_gpio
$ sudo python setup.py install

# spidev: 为 GPIO 上的 Python 串行外围设备接口协议 (Serial Peripheral Interface, SPI) 提供支持的库
$ sudo pip install spidev
  ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>基本的电子学术语和若干基础知识</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
        <ul style="margin-left: 1.5em;list-style-type: disc;">
          <li>通常所说的电子设备，一般指的仅是由若干集成电路 (Integrated Circuit, IC) 和不同电阻、电容、电感、众多其它元器件组成的硬件或电路.  当用可编程集成电路制作硬件时，还需要关注内置程序(软件)。</li>
          <li style="margin-top:.5em;">在微控制器或微处理器中, 可以将程序注入到正在通电的集成电路中 (技术上分为永久烧入或转储程序)。之后电子设备将遵循程序中编写的步骤按照烧入者预想的步骤执行。这就是机器人、洗衣机以及其它智能硬件的工作原理。</li>
        </ul>
      ]]></c:desc1>
    </c:desc>
    <c:sourceContent type="html" title="电子元器件之间的通信协议" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul>
  <li><b>I<sup style="font-weight:bold;">2</sup>C:</b> Inter-Integrated Circuit</li>
  <li><b>UART:</b> 通用异步收发传输器 (Universal Asynchronous Receiver/Transimitter, UART)</li>
  <li><b>SPI:</b> 串行外围设备接口 (Serial Peripheral Interface, SPI)</li>
</ul>
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="电压" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul style="margin-left: 1.5em;list-style-type: disc;">
  <li>电压是两点之间电势之差，用伏特(V)表示. 电压让电荷(电子)从高电势处向低电势处流动。</li>
  <li style="margin-top:.5em;">伟大的科学家 "亚力山德罗.伏打" 发明了 "伏打电池"，后来也被称作电池。</li>
</ul>
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="电流" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul style="margin-left: 1.5em;list-style-type: disc;">
  <li>电流是指电荷(电子)的流动，只要有电压差，就会导致电流沿着正极(高电压)向负极(负极)的固定方向流动。单位是: 安培(A)</li>
  <li style="margin-top:.5em;">电荷和电子统称为电流, 而电子的流动方向是从电池的负极到正极。遵循传统的电流定义为: 电流从正极流向负极</li>
</ul>
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="电阻（resistor）" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul style="margin-left: 1.5em;list-style-type: disc;">
  <li>电阻用来阻挠电流流动, 当电流通过电阻时会在其上出现电压的下降。</li>
  <li style="margin-top:.5em;">欧姆定律用于计算电压降: <b>(V=I*R)</b></li>
  <li style="margin-top:.5em;">例如电阻值为10&Omega;并且流经该电阻的电流为1A，那么经过该电阻后电压下降10V。</li>
  <li style="margin-top:.5em;">当LED接在5V电源上时，要将一个330&Omega;的电阻与LED串联，以避免由于电流过大导致LED丝烧断。</li>
  <li style="margin-top:.5em;">如果不用电阻就直接连接导线，那么根据欧姆定律结果 R=0&Omega;, 然后 I=R/0, 
    所以I=<b style="font-size:1em;">&infin;</b>A (无穷大)。意味着起火或爆炸！！！</li>
</ul>
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="电容" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul style="margin-left: 1.5em;list-style-type: disc;">
  <li>电阻会以发热的形式消耗能量，而电容会在其两个导片之间存储能量。</li>
  <li style="margin-top:.5em;">电容通常用在滤波器电路中滤除电压以及在放大器电路中生成清晰的语音。</b></li>
  <li style="margin-top:.5em;">例如电阻值为10&Omega;并且流经该电阻的电流为1A，那么经过该电阻后电压下降10V。</li>
  <li style="margin-top:.5em;">将电容和传感器一起使用时，电容可以将电压水平维持一段时间，以便能让微处理器有足够的时间读取它的值。</li>
  <li style="margin-top:.5em;">因为传感器的数据变化很大，当微处理器正在读取它的数据值时就需要保持稳定，这样才能避免计算失误。</li>
  <li style="margin-top:.5em;">电容维持电压水平的时间取决于RC时间常数。</li>
</ul>
  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="串联和并连" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[


<div>
  <img src="/images/raspberry/WechatIMG27.jpg" width="550px;" />
</div>
<ul style="margin-left: 1.5em;list-style-type: disc;margin-top:1em;line-height:1.5em;">
  <li>如果流经一个元器件的电流不分流时，就是串联。</li>
  <li style="margin-top:.5em;">如果流经每个元器件的电流都是一样的，就称这些元器件属于串联。</b></li>
  <li style="margin-top:.5em;">如果流经每个元器件的电压都是一样的，就称这些元器件属于并联。</li>
  <li style="margin-top:.5em;">在并连电路中流经各电路的电流可以通过应用电流分配公式计算得到。</li>
  <li style="margin-top:.5em;">串联：V=V1+V2+V3, R=R1+R2+R3, V=I*R</li>
  <li style="margin-top:.5em;">并联：在右边的并连电路图示中，其中每个元器件都具有相同的电压，但是电流却分为几路。I被分为I1和I2，当I1流向下一个节点时再次被分为两部分，分别流向R5和R6。因此在并连电路中: I=I1+I2</li>
  <li style="margin-top:.5em;">基尔霍基夫电流定律: 电路中的任意节点(连接处)，流入该节点(连接处)的电流之和等于流出该节点的电流之和。</li>
  <li style="margin-top:.5em;">基尔霍基夫电压定律: 沿着闭合回路的所有电势差(电压)的代数和为0。</li>
</ul>


  ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="上拉和下拉电阻" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul style="margin-left: 1.5em;list-style-type: disc;">
  <li>上拉电阻将接线端的电压拉升到供电电压，下拉电阻将接线端的电压拉低到接地电压或供电电压。</li>
  <li style="margin-top:.5em;">拉式电阻的重要之处是: 在某个特殊接线端出现输入时，通过将其连接到节点或接线端上而让逻辑电平回归默认值。</b></li>
  <li style="margin-top:.5em;">接入上拉电阻或下拉电阻的好处是使得电路可以忍受噪声, 接线端上的逻辑电平(1或0)不会因为电压的微小变化(噪声导致的)而发生改变。</li>
  <li style="margin-top:.5em;">在使用传感器或集成电路时，如果技术手册中指明了需要使用上拉或下拉电阻，则建议在所有需要之处使用它们。</li>
</ul>
<div>
  <br /> 上拉电阻:
</div>
<div>
  <img src="/images/raspberry/20150421195024300-1.jpg" width="550px;" />
</div>
<div>
  <img src="/images/raspberry/20150421194851941-2.jpg" width="550px;" />
</div>
<div>
  下拉电阻:
</div>
<div>
  <img src="/images/raspberry/20150421195123003-3.jpg" width="550px;" />
</div>
<div>
  <img src="/images/raspberry/20150421195043715-4.jpg" width="550px;" />
</div>
<div>
  带有和不带上拉电阻的电路:
</div>
<div style="margin-top:.3em;">
  <img src="/images/raspberry/WechatIMG26.jpg" width="550px;" />
</div>

<ul style="margin-left: 1.5em;list-style-type: disc;margin-top:1em;line-height:1.5em;">
  <li>不推荐使用左边的电路, 因为当开关打开时(处于OFF状态), 会让输入端浮空。从而任何噪声都可以改变非门的输入状态</li>
  <li style="margin-top:.5em;">中间显示的是一个不带电阻的上拉电路, 不推荐使用这种电路。这种电路称为上拉电路，但是绝不会用到。当开关闭合时VCC会直接接地，从而形成短路，会有大量电流从VCC流向接地端，这将损坏电路。</b></li>
  <li style="margin-top:.5em;">最右边的电路是上拉的最佳方式，因为其中有一个电阻，电阻上会有电压降。当开关断开时，默认情况下非门的接线端电平就会上升至VCC(上拉)。当开关闭合时，非门的输入端就会接地，会成为逻辑0状态，此时流经电阻的电流非常微弱。例如：若果 VCC=5V, R7=1k&Omega;, I=V/R, 那么I=5mA, 这在安全范围内。</li>
  <li style="margin-top:.5em;">对于下拉电阻而言，只需交换开关和电阻的位置即可，电阻连接在接地端和非门输入端之间。</li>
</ul>
  ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>






  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>通信协议</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
        <ul style="margin-left: 1.5em;list-style-type: disc;line-height:1.625em;">
          <li>有很多元器件可以作为微处理器的外围设备，这些设备会生成大量数据并需要发送给微处理器，它们之间如何通信？处理器如何理解传感器发送来的数据？</li>
          <li style="margin-top:.5em;">集成电路和微处理器之间有串行或并行数据连接方式，并行连接比串行连接速度快，但是并行连接需要更多的数据线，PCI总线就是一个并行通信的例子。</li>
          <li style="margin-top:.5em;">串行通信最多需要4条数据线，具体数目取决于所使用的通信协议。</li>
          <li style="margin-top:.5em;">在串行通信中，数据是按帧或包发送的，大块数据被分解为若干块，在数据线上逐帧或逐包发送。</li>
          <li style="color:green;margin-top:.5em;font-weight:bold;">什么是通信协议？通信协议是在将集成电路连接到微处理器时所需要遵守的一套规则，它并不是只对连接进行规定，协议还规定了数据帧的结构、帧的长度、电压水平、数据类型和数据速率等等。</li>
          <li style="margin-top:.5em;">常见的串行通信协议: <b>UART</b>、<b>FireWire</b>、<b>Etherbet</b>、<b>SPI</b> 和 <b>I<sup style="font-weight:bold;">2</sup>C</b>等等。</li>
          <li style="margin-top:.5em;">树莓派在扩展接口上有一个 <b>SPI</b> 引脚、一个 <b>I<sup style="font-weight:bold;">2</sup>C</b> 引脚、一个 <b>UART</b> 引脚</li>
        </ul>
      ]]></c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="&lt;b&gt;UART:&lt;/b&gt; 通用异步收发传输器 (Universal Asynchronous Receiver/Transimitter, UART)" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul style="margin-left: 1.5em;list-style-type: disc;line-height:1.625em;">
  <li>该协议是全双工协议，也被称为RS-232协议，它也是一种包括特定通信的电子、机械和物理特性的全面标准。</li>
  <li style="margin-top:.5em;">当在总线上发送数据时，数据电平需要转换成适合RS-232总线的电平，在总线上传输器发送不断变化的电压。高于3V的电压值即为逻辑0，而低于-3V的电压值即为逻辑1，-3～3V之间的电压值被称为不确定状态。</li>
</ul>
  ]]>
    </c:sourceContent>

    <c:sourceContent type="html" 
      title="&lt;b&gt;I&lt;sup style='font-weight:bold;'&gt;2&lt;/sup&gt;C:&lt;/b&gt; Inter-Integrated Circuit" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul style="margin-left: 1.5em;list-style-type: disc;line-height:1.625em;">
  <li>1</li>
  <li style="margin-top:.5em;">2</li>
</ul>
  ]]>
    </c:sourceContent>

    <c:sourceContent type="html" title="&lt;b&gt;SPI:&lt;/b&gt; 串行外围设备接口 (Serial Peripheral Interface, SPI)" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:blue;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
<ul style="margin-left: 1.5em;list-style-type: disc;line-height:1.625em;">
  <li>1</li>
  <li style="margin-top:.5em;">2</li>
</ul>
  ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>





</c:component>
