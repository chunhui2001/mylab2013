<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[

]]>
  </c:abstract>




  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:2em;">
    <c:title>Hadoop Compiler</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
 
 
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<a href="/blog/articles/big-data/Compile-Hadoop-2.shtml">http://www.snnmo.com/blog/articles/big-data/Compile-Hadoop-2.shtml</a> <br />
<a href="/blog/articles/big-data/building-apache-hadoop-from-source.shtml">http://www.snnmo.com//blog/articles/big-data/building-apache-hadoop-from-source.shtml</a>
    ]]>
    </c:sourceContent>
 

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:1em;">
    <c:title>Hadoop Installation</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
 
    <c:sourceContent type="html" title="" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<a href="/blog/articles/big-data/installing-hadoop-2-4-on-ubuntu-14-04.shtml">http://www.snnmo.com/blog/articles/big-data/installing-hadoop-2-4-on-ubuntu-14-04.shtml</a> <br />
<a href="/blog/articles/aws/How-to-Set-Up-a-Multi-Node-Hadoop-Cluster-on-Amazon-EC2.shtml">How to Set Up a Multi-Node Hadoop Cluster on Amazon EC2</a> <br />
<a href="/blog/articles/big-data/Setup-Hadoop-2-x-on-Mac-OS-X.shtml">Setup Hadoop 2.x on Mac OS X</a> <br />
<a href="/blog/articles/big-data/solr-nutch-hadoop.shtml">Solr + Nutch + Hadoop</a>
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:1em;">
    <c:title>Sqoop </c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
 
    <c:sourceContent type="" title="Installation" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ tar -zxvf sqoop-X.X.X.tar.gz && sudo mv sqoop-* /usr/local/sqoop
$ export $SQOOP_HOME=/usr/local/sqoop && export PATH=$PATH:$SQOOP_HOME/bin
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Added JDBC Driver" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin-top:1em; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sudo cp mysql-connector-java-XXX-bin.jar to $SQOOP_HOME/lib
$ sudo cp sqljdbc_4.0.2206.100_enu.tar.gz to $SQOOP_HOME/lib
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Sqoop import to HDFS" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin-top:1em; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# MySQL Driver
$ sqoop import  --driver com.mysql.jdbc.Driver \
        --connect jdbc:mysql://localhost:3306/test_zh_o2o_db \
        --username root --password Cc \
        --table broker -m 1

# SqlServer Driver
$ sqoop import  --driver com.mysql.jdbc.Driver \
        --connect jdbc:sqlserver://<IP Address>:<Port Number>/test_zh_o2o_db \
        --username root --password Cc \
        --table broker -m 1
    ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:1em;">
    <c:title>HBase </c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
 
    <c:sourceContent type="" title="Installation" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# Download for search apache mirrors by Google
$ tar -zxvf hbase-x.x.x.tar.gz && sudo mv hbase-* /usr/local/hbase

$ export HBASE_HOME=/usr/local/hbase && export PATH=$PATH:$HBASE/bin
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Configuration" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# update $HBASE_HOME/conf/hbase-env.sh
> update JAVA_HOME=XXX

# update $HBASE_HOME/conf/hbase-site.xml
<property>
    <name>hbase.rootdir</name>
    <value>hdfs://localhost:9000/hbase</value>
</property>
<property>
    <name>hbase.cluster.distributed</name>
    <value>false</value>
</property>
      
# When hbase.cluster.distributed is true
<property>
    <name>hbase.zookeeper.property.dataDir</name>
    <value>/usr/local/hadoop/data/zoo-data</value>
</property>

# update /etc/hosts
> append 127.0.0.1 hadoop

    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Hbase Shell" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# http://hadooptutorial.info/hbase-shell-commands-in-practice/#show_filters
$ start-hbase.sh OR stop-hbase.sh
$ hbase shell
 1). > list
 2). > create 'testtable1', 'cf1', 'cf2'
 3). > put 'testtable1', 'row1', 'cf1:a', 'some value here'
 4). > put 'testtable1', 'row1', 'cf1:b', 'other value here'
 5). > scan 'testtable1'
 6). > put 'testtable1', 'row1', 'cf1:a', 'the value updated'
 7). > scan 'testtable1'
 8). > scan 'testtable1', { VERSIONS ＝>3 }
10). > disable 'table_name_here' && drop 'table_name_here'
11). > create_namespace 'zh_oto_store'
12). > list_namespace 'zh_o2o_store'
13). > drop_namespace 'zh_o2o_store'
 9). > exit
    ]]>
    </c:sourceContent>
 

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:1em;">
    <c:title>Zookeeper </c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
 
    <c:sourceContent type="" title="Install" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# Download zookeeper-XXX.tar.gz
$ tar -zxvf zookeeper-x.x.x.tar.gz && sudo mv zookeeper-* /usr/local/zookeeper

$ export ZOOKEEPER_HOME=/usr/local/zookeeper && export PATH=$PATH:$ZOOKEEPER_HOME/bin
$ sudo mkdir $ZOOKEEPER_HOME/zoo_data && sudo echo 1 > $ZOOKEEPER_HOME/zoo_data/myid

# update $ZOOKEEPER_HOME/conf/zoo.cfg
> update: dataDir=$ZOOKEEPER/zoo_data
> append: server.1=localhost:2888:3888

$ zkServer.sh start && jps
    ]]>
    </c:sourceContent>
 
 

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:1em;">
    <c:title>Hive </c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
 
    <c:sourceContent type="" title="Install" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# Download hive-XXX.tar.gz && put mysql OR sqlserver driver to $HIVE_HOME/lib
$ export HIVE_HOME=XXX && export PATH=$PATH:$HIVE_HOME/bin
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Configuration" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
# update $HIVE_HOME/conf/hive-size.xml
<property>
  <name>hive.metestore.warehouse.dir</name>
  <value>/usr/local/hadoop/work/warehouse</value>
</property>

i).
<property>
  <name>hive.metastore.local</name>
  <value>true</value>
</property>
<property>
  <name>javax.jdo.option.ConnectionURL</name>
  <value>jdbc:derby:;databaseName=/usr/local/hadoop/work/warehouse/metastore_db;create=true</value>
</property>
 
OR:
ii).
<property>
  <name>javax.jdo.option.ConnectionURL</name>
  <value>jdbc:mysql://localhost:3306/hive_db?createDatabaseIfNotExist=true</value>
</property>
<property>
  <name>javax.jdo.option.ConnectionDriverName</name>
  <value>com.mysql.jdbc.Driver</value>
</property>
<property>
  <name>javax.jdo.option.ConnectionUserName</name>
  <value>root</value>
</property>
<property>
  <name>javax.jdo.option.ConnectionPassword</name>
  <value>Cc</value>
</property>
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Hive Shell" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ hive
> create database testhivedb;
> create extenral table with hbase table ......;
    ]]>
    </c:sourceContent>
 
 
 

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>




  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:2em;">
    <c:title>Sqoop import to Hbase</c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
 
 
    <c:sourceContent type="" title="Create HBase Table" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
> create_namespace 'ns1_data_store'
> create 'ns1_data_store:broker', 'head', 'addr', 'company', 'account'
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Import to table of ns1_data_store:broker" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sqoop import --driver com.mysql.jdbc.Driver \
    --connect jdbc:mysql://localhost:3306/db_name_here \
    --username root --password Cc \
    --table broker \
    --columns "broker_id,broker_name,broker_cellphone,broker_email,identity_card" \
    --hbase-table ns1_data_store:broker \
    --column-family head \
    --hbase-row-key broker_id -m 1
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Sqoop Append import" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sqoop import --driver com.mysql.jdbc.Driver \
    --connect jdbc:mysql://localhost:3306/db_name_here \
    --username root --password Cc \
    --table broker \
    --columns "broker_id,broker_name,broker_cellphone,broker_email,identity_card" \
    --hbase-table ns1_data_store:broker \
    --column-family head \
    --incremental append \
    --check-column broker_id \
    --last-value **last_id_here** \
    --hbase-row-key broker_id -m 1
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Sqoop Merge import" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sqoop import --driver com.mysql.jdbc.Driver \
    --connect jdbc:mysql://localhost:3306/db_name_here \
    --username root --password Cc \
    --table broker \
    --columns "broker_id,broker_name,broker_cellphone,broker_email,identity_card" \
    --hbase-table ns1_data_store:broker \
    --column-family head \
    --incremental lastmodified \
    --check-column update_time \
    --last-value '**2016-08-02 20:23:14**' \
    --merge-key broker_id -m 1
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Sqoop import with password alias" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ hadoop credential create zh_o2o_db.password.alias \
          -provider jceks://hdfs/user/ericlin/mysql.password.jceks
$ hadoop credential list \
          -provider jceks://hdfs/user/ericlin/mysql.password.jceks

$ sqoop import \
      -Dhadoop.security.credential.provider.path=jceks://hdfs/user/ericlin/mysql.password.jceks \
      --driver com.mysql.jdbc.Driver \
      --connect jdbc:mysql://localhost:3306/db_name_here \
      --username root \
      --password-alias zh_o2o_db.password.alias \
      --table broker \
      --columns "broker_id,broker_name,broker_cellphone,broker_email,identity_card" \
      --hbase-table ns1_data_store:broker \
      --column-family head \
      --incremental lastmodified \
      --check-column update_time \
      --last-value '2016-08-02 20:23:14' \
      --merge-key broker_id -m 1
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Sqoop create job with password alias" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sqoop job \
      -Dhadoop.security.credential.provider.path=jceks://hdfs/user/ericlin/mysql.password.jceks \
      --create incjob_update_broker -- import \
      --driver com.mysql.jdbc.Driver \
      --connect jdbc:mysql://localhost:3306/db_name_here \
      --username root \
      --password-alias zh_o2o_db.password.alias \
      --table broker \
      --columns "broker_id,broker_name,broker_cellphone,broker_email,identity_card" \
      --hbase-table ns1_data_store:broker \
      --column-family head \
      --incremental lastmodified \
      --check-column update_time \
      --last-value '2016-08-02 20:23:14' \
      --merge-key broker_id -m 1
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Sqoop select import" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sqoop import --driver com.mysql.jdbc.Driver \
    --connect jdbc:mysql://localhost:3306/db_name_here \
    --username root --password Cc \
    --query 'SELECT a.*, b.* FROM a JOIN b on (a.id == b.id) WHERE $CONDITIONS' \
    --columns "a.*,b.*" \
    --hbase-table ns1_data_store:broker \
    --column-family head \
    --incremental lastmodified \
    --check-column b.**THE_LAST_UPDATED_TIMESTAMP_FIELD** \
    --last-value "**HANDLE_THIS_THE_WAY_U_R_ALREADY_DOING_IT**" \
    --merge-key broker_id -m 1
    ]]>
    </c:sourceContent>
 
    <c:sourceContent type="" title="Sqoop Shell" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ sqoop version
$ sqoop job --show "**name of job**"
    ]]>
    </c:sourceContent>
 
 

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>






  <c:entry style="font-size:1.8em;color:#0134A0;font-weight:bold;font-style:oblique;margin-top:2em;">
    <c:title>MapReduce Development (WordCount)</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
https://kishorer.in/2014/10/22/running-a-wordcount-mapreduce-example-in-hadoop-2-4-1-single-node-cluster-in-ubuntu-14-04-64-bit/
        ]]></c:desc1>
    </c:desc>
 
 
    <c:sourceContent type="" title="Generic project with Maven" id="sourceContent1"
                     style="margin-top:0em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ mvn archetype:generate -DgroupId=com.mycompany.app \
                         -DartifactId=my-app \
                         -DarchetypeArtifactId=maven-archetype-quickstart \
                         -DinteractiveMode=false
$ cd my-app
$ mvn clean package
$ java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
    ]]>
    </c:sourceContent>
 
 
    <c:sourceContent type="" title="pom.xml" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.asda.app</groupId>
  <artifactId>asad</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>asad</name>
  <url>http://maven.apache.org</url>
  <properties>
      <hadoop.version>2.6.0</hadoop.version>
      <hbase.version>1.2.2</hbase.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-client</artifactId>
        <version>1.2.2</version>
    </dependency>
    <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>2.6.0</version>
    </dependency>
  </dependencies>
</project>
    ]]>
    </c:sourceContent>
 
 
    <c:sourceContent type="" title="WordCountMapper.java" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
package com.asda.app;

import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;

public class WordCountMapper extends MapReduceBase 
                             implements Mapper<LongWritable, Text, Text, IntWritable>
{
    //hadoop supported data types
    private final static IntWritable one = new IntWritable(1);
    private Text word = new Text();

    //map method that performs the tokenizer job and framing the initial key value pairs
    // after all lines are converted into key-value pairs, reducer is called.
    public void map(LongWritable key,
                    Text value,
                    OutputCollector<Text, IntWritable> output,
                    Reporter reporter)
            throws IOException
    {
        //taking one line at a time from input file and tokenizing the same
        String line = value.toString();
        StringTokenizer tokenizer = new StringTokenizer(line, ":/\\.*,><)(_=${}\"'- &;#\t\n!＝　");

        //iterating through all the words available in that line and forming the key value pair
        while (tokenizer.hasMoreTokens())
        {
            word.set(tokenizer.nextToken());
            //sending to output collector which inturn passes the same to reducer
            output.collect(word, one);
        }
    }
}
    ]]>
    </c:sourceContent>
 
 
    <c:sourceContent type="" title="WordCountReducer.java" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
package com.asda.app;

import java.io.IOException;
import java.util.Iterator;

import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;

public class WordCountReducer extends MapReduceBase
                              implements Reducer<Text, IntWritable, Text, IntWritable>
{
    //reduce method accepts the Key Value pairs from mappers, 
    // do the aggregation based on keys and produce the final out put
    public void reduce(Text key,
                       Iterator<IntWritable> values,
                       OutputCollector<Text, IntWritable> output,
                       Reporter reporter)
            throws IOException
    {
        int sum = 0;

        /*iterates through all the values available with a key and add them together and give the
        final result as the key and sum of its values*/
        while (values.hasNext())
        {
            sum += values.next().get();
        }

        if (sum > 1)
        output.collect(key, new IntWritable(sum));
    }
}
    ]]>
    </c:sourceContent>
 
 
    <c:sourceContent type="" title="WordCount.java" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
package com.asda.app;

import org.apache.hadoop.fs.Path;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;
import org.apache.hadoop.util.*;


public class WordCount extends Configured implements Tool{
    public int run(String[] args) throws Exception
    {
        //creating a JobConf object and assigning a job name for identification purposes
        JobConf conf = new JobConf(getConf(), WordCount.class);
        conf.setJobName("WordCount");

        //Setting configuration object with the Data Type of output Key and Value
        conf.setOutputKeyClass(Text.class);
        conf.setOutputValueClass(IntWritable.class);

        //Providing the mapper and reducer class names
        conf.setMapperClass(WordCountMapper.class);
        conf.setReducerClass(WordCountReducer.class);

        //We wil give 2 arguments at the run time, one in input path and other is output path
        Path inp = new Path(args[0]);
        Path out = new Path(args[1]);

        //the hdfs input and output directory to be fetched from the command line
        FileInputFormat.addInputPath(conf, inp);
        FileOutputFormat.setOutputPath(conf, out);

        JobClient.runJob(conf);
        return 0;
    }

    public static void main(String[] args) throws Exception
    {
        // this main function will call run method defined above.
        int res = ToolRunner.run(new Configuration(), new WordCount(),args);
        System.exit(res);
    }
}
    ]]>
    </c:sourceContent>
 
 
    <c:sourceContent type="" title="Run" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="margin:0; background-color:rgb(235, 234, 234);color:rgb(11, 95, 208);padding:.5em 1em;font-weight:bold;font-size:1em;position:relative;padding-left:0;color:black;font-size:1.3em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.8em;font-family:monospace;">
      <![CDATA[
$ mvn clean package
$ java jar target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.WordCount input/ output/
    ]]>
    </c:sourceContent>
 

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>





</c:component>
