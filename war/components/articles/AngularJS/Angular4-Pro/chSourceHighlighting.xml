<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[
   
]]>
  </c:abstract>





  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>Installation Angular-Cli</c:title>
    <c:desc>
      <c:desc1> <![CDATA[
      
      ]]></c:desc1>
    </c:desc>
    <c:sourceContent type="" title="Runing Angular4 Application" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
# install node env
$ install nodejs v6.0+
$ install npm v5.3.0+
$ sudo npm install -g node-gyp
$ sudo npm install -g @angular/cli@latest

# create a new app with angluar-cli
$ ng new a4app

# update package.json angular version to ^4.3.0
$ ..

$ cd a4app && npm install --registry https://registry.cnpmjs.org
$ ng serve
  ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Update tsline.json" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
{
  "rulesDirectory": [
    "node_modules/codelyzer"
  ],
  "rules": {
    ...
    "semicolon": [
      true,
      "always",
      "ignore-interfaces"   // add ***
    ],
    ...
    "use-host-property-decorator": false,   // update to false ***
    ...
    "no-trailing-whitespace": false   // add ***
  }
}

  ]]>
    </c:sourceContent>



    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>




  <c:entry style="margin-top:1em;color:rgb(175, 0, 190);font-size:2.2em;">
    <c:title>Angular 4 HttpClient </c:title>
    <c:desc>
      <c:desc1> <![CDATA[
      
      ]]></c:desc1>
    </c:desc>
    <c:sourceContent type="" title="update src/app/app.module.ts" id="sourceContent1" 
                     style="background-color:white;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';

import { HttpClientModule } from '@angular/common/http'; // import HttpClientModule ***

import { AppComponent } from './app.component';


@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    HttpClientModule    // import HttpClientModule ***
  ],
  providers: [],
  bootstrap: [AppComponent]
})

export class AppModule { }

  ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Update src/app/app.component.ts (Http Get and Post)" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
import { Component, OnInit } from '@angular/core';

import { HttpClient, HttpErrorResponse } from '@angular/common/http';


interface UserResponse {
  login: string,
  bio: string,
  company: string
}

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {

  title = 'Angular4 Application Demo 2';

  constructor(private  http: HttpClient) {

  }

  ngOnInit(): void {

    this.http.get<UserResponse>('https://api.github.com/users/chunhui2001').subscribe(
      data => {
          console.log(data.login);
          console.log(data.bio);
          console.log(data.company);
      },
      (err: HttpErrorResponse) => {
        if (err.error instanceof Error) {
          console.log(err.message, '#Client-side Error Occured');
        } else {
          console.log(err.message, ' #Server-side Error Occured');
        }
      }
    );


    const req = this.http.post('http://jsonplaceholder.typicode.com/posts', {
      title: '长成你回忆',
      body: 'this is body',
      userId: 1
    }).subscribe(
      res => {
        console.log(res);
      },
      (err: HttpErrorResponse) => {
        if (err.error instanceof Error) {
          console.log(err.message, 'Client-side Error Occured');
        } else {
          console.log(err.message, ' #Server-side Error Occured');
        }
      }
    );

  }

}


  ]]>
    </c:sourceContent>


    <c:sourceContent type="" title="Implements an Intecepor (GitHubAuthIntercepor)" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
import { Injectable } from '@angular/core';
import { HttpEvent, HttpRequest, HttpHandler, HttpInterceptor } from '@angular/common/http';
import { Observable } from 'rxjs/observable';

@Injectable()
export class GitHubAuthIntercepor implements HttpInterceptor {

  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {

    const authReq = req.clone({
      headers: req.headers.set('Authorization', 'token [pick token from github profile setting page] ')
    });

    return next.handle(authReq);

  }

}


  ]]>
    </c:sourceContent>




    <c:sourceContent type="" title="import new Inteceport: GitHubAuthIntercepor" id="sourceContent1" 
                     style="background-color:white;margin-top:1em;"
                     titleStyle="padding-left:0;color:black;font-size:1.2em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1.2em;line-height:1.3;font-family:monospace;">
                     <![CDATA[
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';

import { HttpClientModule, HTTP_INTERCEPTORS } 
      from '@angular/common/http'; // import HTTP_INTERCEPTORS ***

import { AppComponent } from './app.component';

import { GitHubAuthIntercepor } 
      from './githubauth.interceptor';   // import GitHubAuthIntercepor ***

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    HttpClientModule
  ],
  providers: [      // update providers to import GitHubAuthIntercepor ***
    {
      provide: HTTP_INTERCEPTORS,
      useClass: GitHubAuthIntercepor,
      multi: true
    }
  ],
  bootstrap: [AppComponent]
})

export class AppModule { }


  ]]>
    </c:sourceContent>



    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>

</c:component>
