<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract style="font-size:1em;line-height:1.6em;">
    <![CDATA[]]>
  </c:abstract>
  

  <c:entry style="margin-top:2em;">
    <c:title><![CDATA[<div style="color:blue;font-size:1.2em;">Prepare</div>]]></c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="" title="Generator project by maven archetype maven-archetype-webapp" id="sourceContent1"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
$ mvn archetype:generate \
        -DgroupId=com.mkyong \
        -DartifactId=CounterWebApp \
        -DarchetypeArtifactId=maven-archetype-webapp \
        -DinteractiveMode=false
   ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="Import to IntelliJ IDEA" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
ç•¥
   ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="Update pom.xml" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<div>1. Definetion <b>java-version</b> and <b>spring-framework-version</b> in pom.xml </div>
<div>2. Search <b>"Spring Documentation"</b> on Google Enging </div>
<div>3. Search <b>"bill of materials" (BOM)</b> inside Spring Documentation</div>
<div>4. Copy and Paste <b>"Spring dependencyManagement"</b> section to current pom.xml </div>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.6em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<properties>
    <java-version>1.8</java-version>
    <spring-framework-version>4.2.4.RELEASE</spring-framework-version>
</properties>

<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-framework-bom</artifactId>
            <version>${spring-framework-version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
</dependencyManagement>

<dependencies>
    <!-- Spring Framework -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
    </dependency>
</dependencies>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="Add maven compiler and maven tomcat plugin to pom.xml" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<div>1. Search <b>"maven compiler"</b> and <b>"tomcat embedded"</b> on Google Enging </div>
<div>2. Copy and Paste <b>maven compiler</b> and <b>maven tomcat</b> plugin to the pom.xml </div>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.6em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<plugins>
  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.3</version>
    <configuration>
      <source>${java-version}</source>
      <target>${java-version}</target>
    </configuration>
  </plugin>
  <plugin>
    <groupId>org.apache.tomcat.maven</groupId>
    <artifactId>tomcat7-maven-plugin</artifactId>
    <version>2.2</version>
  </plugin>
</plugins>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="Update web.xml" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
Do a Search inside Spring Documentation by keyword <b>web-app</b>, then Copy and Paste bellow content to web.xml
   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.5em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                             http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
        version="3.0">

    ...

</web-app>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="Definetion Spring DispatcherServlet" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.6em;font-family:monospace;">
      <![CDATA[

   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.2em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                             http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
        version="3.0">  
  <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <servlet>
      <servlet-name>spring-dispatcher</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>      
      <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
      <servlet-name>spring-dispatcher</servlet-name>
      <url-pattern>/</url-pattern>
  </servlet-mapping>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      /WEB-INF/spring-dispatcher-servlet.xml
    </param-value>
  </context-param>

</web-app>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="Create spring-dispatcher-servlet.xml under folder WEB-INF" 
                     id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.6em;font-family:monospace;">
      <![CDATA[

   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="" id="sourceContent1"
                     style="margin-top:.2em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-mvc.xsd">
    
    <context:component-scan base-package="net.snnmo.sad" />
    <mvc:annotation-driven />

</beans>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Update spring-dispatcher-servlet.xml to add jspViewResolver" 
                     id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <!-- Default viewResolver is JSP -->
    <!-- <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> -->
    <property name="prefix" value="/WEB-INF/views/"/>
    <property name="suffix" value=".jsp"/>
</bean>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Create HomeController.class" 
                     id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:1em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
package net.snnmo.sad.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class HomeController {
    @RequestMapping(value={"/", "/welcome"}, method = RequestMethod.GET)
    public ModelAndView index() {
        ModelAndView mv = new ModelAndView("home/index");
        mv.addObject("message", "This is Spring MVC index page");
        return mv;
    }
}

   ]]>
    </c:sourceContent>


    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


  <c:entry style="margin-top:2em;">
    <c:title><![CDATA[<div style="color:blue;font-size:1.2em;">jUnit</div>]]></c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="" title="Added jUnit dependencies" id="sourceContent1"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<!-- jUnit Dependencies -->
<dependency>
  <groupId>junit</groupId>
  <artifactId>junit</artifactId>
  <version>4.12</version>
  <scope>test</scope>
</dependency>
<dependency>
  <groupId>org.mockito</groupId>
  <artifactId>mockito-all</artifactId>
  <version>1.10.19</version>
  <scope>test</scope>
</dependency>
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-test</artifactId>
  <scope>test</scope>
</dependency>


   ]]>
    </c:sourceContent>
    <c:sourceContent type="html" title="Tester Classes" id="sourceContent1"
                     style="margin-top:1.5em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
1. Create folder src/test/java. <br/>
2. Create a class Calculate.class under folder src/main/java. <br />
3. Create a Test class TestCalculate under folder src/test/java.
   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="Calculate.class" id="sourceContent1"
                     style="margin-top:1.5em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
public class Calculate {
    public int abs(int arg) {
        if (arg < 0) {
            return arg*-1;
        }

        return arg;
    }
}

   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="TestCalculate.class" id="sourceContent1"
                     style="margin-top:1.5em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
import org.junit.Test;

import static org.junit.Assert.*;

public class TestCalculate {
    
    @Mock
    private Calculate calculate;

    @Before
    public void setup() {
        //calculate = new Calculate();
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testAbs() {

        when(calculate.abs(-3)).thenReturn(3);

        int expected    = 3;
        int actual      = calculate.abs(-3);
        assertEquals(expected, actual);
    }
}
   ]]>
    </c:sourceContent>


    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>



  <c:entry style="margin-top:2em;">
    <c:title><![CDATA[<div style="color:blue;font-size:1.2em;">@Mock and @InjectMocks</div>]]></c:title>
    <c:desc>
      <c:desc1> <![CDATA[]]></c:desc1>
    </c:desc>
    <c:sourceContent type="" title="IEngine.class" id="sourceContent1"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
public interface IEngine {
    public void increaseRpm();
    public int getRpm();
}

   ]]>
    </c:sourceContent>

    <c:sourceContent type="" title="Car.class" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
public class Car {
    private IEngine engine;

    private String warningMessage;

    public Car(IEngine engine) {
        this.engine = engine;
    }

    public void accelerate() {
        this.engine.increaseRpm();

        if (engine.getRpm() > 3000) {
            this.warningMessage = "Slow Down!";
        }
    }

    public String getWarningMessage() {
        return warningMessage;
    }

    public void setWarningMessage(String warningMessage) {
        this.warningMessage = warningMessage;
    }
}

   ]]>
    </c:sourceContent>

    <c:sourceContent type="" title="TestCar.class" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class TestCar {
    @Mock
    private IEngine engine;

    @InjectMocks
    private Car car;

    @Before
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testWarning() {
        when(engine.getRpm()).thenReturn(2000);

        car.accelerate();

        assertEquals("Slow Down!", car.getWarningMessage());
    }
}
   ]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>





  <c:entry style="margin-top:2em;">
    <c:title><![CDATA[<div style="color:blue;font-size:1.2em;">JSON Response And Test Controller (HttpMessageConverters)</div>]]></c:title>
    <c:desc>
      <c:desc1> <![CDATA[<div style="font-size:1.1em;">Please search HttpMessageConverters inside Spring Documentation to see details.</div>]]></c:desc1>
    </c:desc>
    <c:sourceContent type="" title="jackson json library" id="sourceContent1"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
<!-- JSON Procession -->
<dependency>
  <groupId>com.fasterxml.jackson.core</groupId>
  <artifactId>jackson-core</artifactId>
  <version>2.6.4</version>
</dependency>
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-annotations</artifactId>
    <version>2.6.4</version>
</dependency>
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.6.4</version>
</dependency>

<!-- JsonPath is to JSON what XPATH is to XML -->
<dependency>
    <groupId>com.jayway.jsonpath</groupId>
    <artifactId>json-path</artifactId>
    <version>2.0.0</version>
    <scope>test</scope>
</dependency>
<dependency>
    <groupId>com.jayway.jsonpath</groupId>
    <artifactId>json-path-assert</artifactId>
    <version>2.0.0</version>
    <scope>test</scope>
</dependency>

<!-- Servlet (Copy and Paste servlet depends from spring-webmvc-xxx.RELEASE.pom) -->
<!-- Just used for test controllers -->
<dependency>
  <groupId>javax.servlet</groupId>
  <artifactId>javax.servlet-api</artifactId>
  <version>3.0.1</version>
  <scope>provided</scope>
</dependency>
   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="HomeController.class" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class HomeController {
    @RequestMapping(value={"/", "/welcome"}, method = RequestMethod.GET)
    public ModelAndView index() {
        ModelAndView mv = new ModelAndView("home/index");
        mv.addObject("message", "This is Spring MVC index page");
        return mv;
    }

    @RequestMapping(value = "/test/user", method = RequestMethod.GET)
    public ResponseEntity<Object> user() {
        UserEntity user = new UserEntity();
        user.setName("zhangæ˜¥æ™–");
        return new ResponseEntity(user, HttpStatus.OK);
    }

    @RequestMapping(value = "/test/user2", method = RequestMethod.GET)
    public @ResponseBody UserEntity user2() {
        UserEntity user = new UserEntity();
        user.setName("zhangæ˜¥æ™–");
        return user;
    }

    @RequestMapping(value = "/test/user3", method = RequestMethod.POST)
    public @ResponseBody UserEntity user2(@RequestBody UserEntity userEntity) {
        UserEntity user = userEntity;
        return user;
    }
}
   ]]>
    </c:sourceContent>
    <c:sourceContent type="" title="TestHomeController.class" id="sourceContent1"
                     style="margin-top:1em;"
                     titleStyle="padding-left:0;color:gray;font-size:1em;background-color:white;"
                     bodyStyle="background-color:white;padding:0;font-size:.95em;line-height:1.6em;font-family:monospace;">
      <![CDATA[import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.MockitoAnnotations;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import java.net.URI;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;

public class TestHomeController {
    @InjectMocks
    private HomeController homeController;

    private MockMvc mockMvc;

    @Before
    public void setup() {
        MockitoAnnotations.initMocks(this);
        mockMvc = MockMvcBuilders.standaloneSetup(homeController).build();
    }

    @Test
    public void testIndex() throws Exception {
        mockMvc.perform(get("/welcome")).andDo(print());
        mockMvc.perform(get("/test/user")).andDo(print());
        mockMvc.perform(get("/test/user2")).andDo(print());
        mockMvc.perform(
                post("/test/user3")
                        .content("{\"name\":\"keesh\"}")
                        .contentType(MediaType.APPLICATION_JSON)
        )//.andExpect(jsonPath("$.name", is("keesh")))
        .andDo(print());
    }
}]]>
    </c:sourceContent>

    <c:comment>
      <c:comment1>
        <![CDATA[]]>
      </c:comment1>
    </c:comment>
  </c:entry>


</c:component>
