<?xml version="1.0" encoding="utf-8"?>
<c:component type="chSourceHighlighting" componentId="chSourceHighlighting_1" xmlns:c="http://com.snnmo.website">
  <c:abstract>
    <![CDATA[
    <div style="font-family:monospace;">
     After we published the iCloud programming tutorial, the first question from our readers is not about iCloud but related to the static table view. 
     If you’ve followed our tutorials, you should have a basic understanding about table view. 
     However, the table views that we’ve covered are of dynamic content. 
     The “Add Note” controller that we built in the previous tutorial, on the other hand, makes use of the static table view. 
     If you have problem with static table view, this tutorial is for you. 
     We’ll show you how to create static table view using Storyboard.
     <br />
     <br />
     To illustrate how easy you can use Storyboard to implement static table view, we’ll build a simple Setting screen.
     Static table views are ideal in situations where a pre-defined number of data items to be displayed. 
     A setting screen is an obvious use of static table view.
</div>
    ]]>
  </c:abstract>

  <c:hero type="image">http://www.appcoda.com/wp-content/uploads/2013/03/Static-Table-View-Demo-App1.jpg</c:hero>

  <c:entry style="margin-top:1em;color:rgb(156, 25, 197);font-weight:bold;">
    <c:title>Creating Xcode Project</c:title>
    <c:desc>
      <c:desc1>
        <![CDATA[
          
        ]]>
      </c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="" id="sourceContent1" style="background-color:white;"
                     bodyStyle="padding:0;font-size:1.2em;">
      <![CDATA[
        <div>To get started, launch Xcode and create a new project using the Single View Application template.</div>
        <div style="margin:1em 0;">
          <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/New-Xcode-Project-Static-Table.jpg" />
        </div>
        
        <div>Name your project as “StaticTableDemo” and don’t forget to select “Storyboard” in your project setting.</div>
        <div style="margin:1em 0;">
          <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/Static-Table-Project-Setting.jpg" />
        </div>
      ]]>
    </c:sourceContent>
    <c:comment style="margin-top:2em;">
      <c:comment1 style="color:black;">
        <![CDATA[
                ]]>
      </c:comment1>
    </c:comment>
  </c:entry>

  <c:entry style="margin-top:1em;color:rgb(156, 25, 197);font-weight:bold;">
    <c:title>Designing Static Table View</c:title>
    <c:desc>
      <c:desc1>
        <![CDATA[
          
        ]]>
      </c:desc1>
    </c:desc>

    <c:sourceContent type="html" title="" id="sourceContent1" style="background-color:white;"
                     bodyStyle="padding:0;font-size:1.2em;">
      <![CDATA[
        <div>In Storyboard, first delete the default view controller and drag a Table View Controller from the Object library.</div>
        <div style="margin:1em 0;">
          <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/Static-Table-Table-View-Controller.jpg" />
        </div>
        
        <div>By default, Xcode sets the table view for dynamic content. You can easily change the table view from dynamic to static cells by altering the content property. Once changed, you’ll have a table view with three empty static cells.</div>
        <div style="margin:1em 0;">
          <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/Change-to-Static-Cells.jpg" />
        </div>
        
        <div>To get the desired view of the Settings screen, change the table style from “Plain” to “Grouped” in the Attributes inspector of the table view. You have two ways to change the number of table row from 3 to 2. The easiest way is to select one of the table rows and press delete button to remove it. Alternatively, select the Table View Section in the document navigator and change the row number.</div>
        <div style="margin:1em 0;">
          <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/Static-Table-View-Section.jpg" />
        </div>
        
        <div>
        <div>
        You can use header and footer to display addition information for the table section. Set the header and footer as shown in the above screen.
            <br />
            <br />
        Next we’ll design the table view cell with the following steps:
        </div>
        <br />
        <ul style="list-style-type:decimal;margin-left:1.5em;">
        <li>
        Drag a label object into the table view cell and adjust its size to 17. Set the label to “Mobile Notification”.
        </li>
        <li>
        Drag another label object into the table view cell and place it under the previous label.
        Adjust its size to 10 and set the label to “Do you want to receive push notification?”.
        </li>
        <li>
        Drag a Switch object into the table view cell.
        </li>
        <li>
        Repeat the above procedures to implement the “Email Notification” cell.
        </li>
        </ul>
        </div>
        <div style="margin:1em 0;">
        <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/Static-Table-View-Cell.jpg" />
        </div>
        
        <div>We’ve created the first table section. To add the second section, select the Table View and change the “Sections” value in Attributes inspector to 2. As soon as you update the section number, Xcode adds a new section and the same content of the first section is automatically copied.</div>
        <div style="margin:1em 0;">
        <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/Static-Table-View-Change-Section-No.jpg" />
        </div>
        
        <div>Simply change the section and the table cells to make them look like the following:</div>
        <div style="margin:1em 0;">
        <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/Static-Table-View-Sync-Section.jpg" />
        </div>
        
        <div>To complete the layout of the Settings screen, embed the table view controller in a navigation controller. Select the table view controller and select Editor &rarr; Embed in &rarr; Navigation Controller from the Xcode menu.</div>
        <div style="margin:1em 0;">
        <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/Static-Table-View-Embed-Navigation-Controller.jpg" />
        </div>
      ]]>
    </c:sourceContent>
    <c:comment style="margin-top:2em;">
      <c:comment1 style="color:black;">
        <![CDATA[
                ]]>
      </c:comment1>
    </c:comment>
  </c:entry>


<c:entry style="margin-top:1em;color:rgb(156, 25, 197);font-weight:bold;">
    <c:title>Compile and Run the App</c:title>
    <c:desc>
        <c:desc1>
            <![CDATA[
                
            ]]>
        </c:desc1>
    </c:desc>
    
    <c:sourceContent type="html" title="" id="sourceContent1" style="background-color:white;"
        bodyStyle="padding:0;font-size:1.2em;">
        <![CDATA[
            <div>That’s it! Finally compile and run the app in Simulator. You should have a Settings screen look like this:</div>
            <div style="margin:1em 0;">
            <img style="max-width:100%;" src="http://www.appcoda.com/wp-content/uploads/2013/03/StaticTableDemo-App.jpg" />
            </div>
            
            
        ]]>
    </c:sourceContent>
    <c:comment style="margin-top:2em;">
        <c:comment1 style="color:black;">
            <![CDATA[
            ]]>
        </c:comment1>
    </c:comment>
</c:entry>


<c:entry style="margin-top:1em;color:rgb(156, 25, 197);font-weight:bold;">
    <c:title>Summary</c:title>
    <c:desc>
        <c:desc1>
            <![CDATA[
                
            ]]>
        </c:desc1>
    </c:desc>
    
    <c:sourceContent type="html" title="" id="sourceContent1" style="background-color:white;"
        bodyStyle="padding:0;font-size:1.2em;">
        <![CDATA[
            <div>In this short tutorial, we demonstrate how you can create a static table view using Storyboard. While you can use dynamic table to display data from data source, static table view provides a great way to display a finite quantity of data that are already known beforehand. Settings screen is a common example that you can make use of the static table view.
            </div>
            
            
        ]]>
    </c:sourceContent>
    <c:comment style="margin-top:2em;">
        <c:comment1 style="color:black;">
            <![CDATA[
            ]]>
        </c:comment1>
    </c:comment>
</c:entry>


</c:component>
