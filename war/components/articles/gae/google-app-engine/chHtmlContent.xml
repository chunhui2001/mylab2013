<?xml version="1.0" encoding="utf-8"?>
<c:component type="chHtmlContent" componentId="chHtmlContent_1" xmlns:c="http://com.snnmo.website">
	<c:content style="background-image:url(http://res.cloudinary.com/hzxejch6p/image/upload/v1371103255/dhjstjbku62tgmzswh2z.png);background-repeat:no-repeat;background-position:right top;background-size:30%;">
    <![CDATA[ 
      <h3>Google App Engine</h3>
      <div class="content-paragraph">
         <p> Google App Engine 是一个开发、托管网络应用程序的平台，使用Google管理的数据中心。它在2008年4月发布了第一个beta版本。</p>     
         <p> Google App Engine 使用了云计算技术。它跨越多个服务器和数据中心来虚拟化应用程序。其他基于云的平台还有Amazon Web Services和微软的Azure服务平台等。</p>   
         <p> Google App Engine 在用户使用一定的资源时是免费的。支付额外的费用可以获得应用程序所需的更多的存储空间、带宽或是CPU负载。</p> 
      </div>   
      
      <h3>支持的编程语言和框架</h3>
      <div class="content-paragraph">
         <p>当前，Google App Engine 支持的编程语言是 Python、Java、PHP 和 Go（通过扩展，可以支持其他JVM语言，诸如Groovy、JRuby、Scala和Clojure）。
         支持Django、WebOb、PyYAML的有限版本。Google说它准备在未来支持更多的语言，Google App Engine也将会独立于某种语言。
         任何支持WSGI的使用CGI的Python框架可以使用。框架可以与开发出的应用程序一同上传，也可以上传使用Python编写的第三方库。</p> 
      </div>    
      
      <h3>与其他应用程序托管的区别</h3>
      <div class="content-paragraph">
         <p>与其他可扩展的托管服务（例如Amazon EC2）比较，App Engine提供了更多基础服务来方便编写可扩展的应用程序，但仅限于App Engine设计框架以内的应用程序。
         App Engine的基础服务省却了许多系统管理的操作，以便将规模扩大到数以百万计的访问。Google负责处理一组代码，可以监测、容错，在必要的时候还会开发一些应用实例。
         有些应用程序托管服务让用户安装、配置几乎所有*NIX兼容的软件，而App Engine则要求开发者使用Python或Java语言来编程，而且只能使用一套限定的API。
         当前的API允许程序于一个BigTable非关系数据库上存储和检索数据、提出HTTP请求、发送E-mail、处理图像、还有缓存。大多数现存的Web应用程序，若未经修改，均不能直接在App Engine上运行，因为它们需要使用关系数据库。
         带宽和CPU的使用、送达请求的数量、并发请求的数量、以及调用各种API的次数，皆设有每天和每分钟的限额。个别的请求，如果需时超过30秒或返回超过10MB的数据，都会被终止。</p> 
      </div>     
      
      <h3>SQL与GQL的区别</h3>
      <div class="content-paragraph">
         <p>Google App Engine的Datastore使用一个与SQL类似的语言，叫做“GQL”。在GQL中，SELECT语句仅可以用于一个表。因为要跨越不只一台机器， GQL不支持效率很低的JOIN语句。欲创建一对多和多对多的关系，可使用ReferenceProperty()。采用这种无共享的方式，即使磁盘坏了，系统也不致瘫痪。</p> 
         <p>在GQL中，SELECT语句中的WHERE从句只容许对仅仅一列进行>、>=、<或<=比较。所以，仅仅可以构造简单的WHERE从句。在数据建模时，要从关系数据库转换到Datastore，开发者需要转变观念。</p> 
         <p>App Engine限制每次Datastore请求最多返回1000行数据。大多数Web应用程序，都不会受此影响，因为它们通常并不会在一张页面上列出超过1000条记录（可以用分页和缓存机制），只要按顺序返回结果就可以了。若有应用程序需要在一次操作中返回更多的记录，则需自行使用客户端软件或者Ajax页面，按查询顺序提取更多条记录。
         这个Datastore的API是不关联的，有别于一般关系数据库——比如IBM DB2、Microsoft SQL Server、MySQL、Oracle数据库、或者PostgreSQL。</p> 
      </div>       
      
      <h3>限制</h3>
      <div class="content-paragraph">
          <p>在App Engine的文件系统中，开发者只有读取的权限。</p> 
          <p>App Engine仅可在回应HTTP请求时执行代码（计划的后台任务、任务队列和XMPP服务则不在此限）。</p> 
          <p>用户可以上传任意的Python模块，但必须是纯Python模块，不得包含C扩展程序或其他需要编译的代码。</p> 
          <p>App Engine限制每次Datastore请求最多返回1000行数据。</p> 
          <p>Java应用程序只能使用JRE基本版本类库中的一个子集（JRE类白名单）。</p> 
          <p>Java应用程序不能创建新的线程。</p> 
      </div>          
      
      <h3>从App Engine下载数据</h3>
      <div class="content-paragraph">
          <p>App Engine自SDK1.2.2版开始，已容许以批量的方式下载数据。
          此外，用户也可使用开源项目gaebar、approcket 和gawsh 来下载、备份在App Engine上的数据。</p> 
      </div>          
      
      <h3>限额</h3>
      <div class="content-paragraph">
          <p>免费帐户使用App Engine时，受配额限制。应用程序作者可以视乎需要，付钱购买更多配额。</p> 
      </div>        
      
      <h3>硬性限制</h3>
      <div class="content-paragraph">      
          <table class="ch-table">
            <thead>              
              <tr>
                <th>项目</th>
                <th>限制</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>每次请求的时间</td>
                <td>普通请求60秒，任务请求10分钟，后台请求无限</td>
              </tr>
              <tr>
                <td>每个应用程序的文件</td>
                <td>1000个</td>
              </tr>
              <tr>
                <td>HTTP响应的大小</td>
                <td>32 MB</td>
              </tr>
              <tr>
                <td>Datastore单项大小</td>
                <td>1 MB</td>
              </tr>
              <tr>
                <td>应用程序代码大小</td>
                <td>150 MB</td>
              </tr>
            </tbody>
          </table>
      </div>        
      
      <h3>免费的配额</h3>
      <div class="content-paragraph">
          <p>供免费使用的配额曾于2009年5月25日 、2009年6月22日以及2011年5月三度下调。</p>
          <table class="ch-table">
            <thead>              
              <tr>
                <th>项目</th>
                <th>配额</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>每天的Email数量</td>
                <td>100封</td>
              </tr>
              <tr>
                <td>每天的输入数据</td>
                <td>无限</td>
              </tr>
              <tr>
                <td>每天的输出数据</td>
                <td>1 GB</td>
              </tr>
              <tr>
                <td>每天可使用CPU</td>
                <td>28小时</td>
              </tr>
              <tr>
                <td>每天调用Datastore API次数</td>
                <td>50000次*</td>
              </tr>
              <tr>
                <td>数据存储</td>
                <td>1 GB</td>
              </tr>
              <tr>
                <td>每天调用URLFetch API次数</td>
                <td>657000次*</td>
              </tr>
            </tbody>
          </table>
      </div>            
      
      <h3>竞争对手</h3>
      <div class="content-paragraph">
          <p>Google App Engine与Amazon Web Services（一个应用程序服务系统，支持在Amazon的服务器上托管文件、执行代码）直接竞争。
          不少科技分析师早在多年前已预计过，Google会加入这场竞赛。其中，Techdirt的出版人Mike Masnick写到，“Google终于了解到它需要霸占网络平台这个地位。
          我们可以期待，开发及落实易于扩展的网络应用程序会变得越来越容易，而应用程序也会越来越具创意。”
          此外，微软的Azure服务平台也是Google App Engine的竞争对手。</p> 
      </div>   
    ]]>
  </c:content>
</c:component>